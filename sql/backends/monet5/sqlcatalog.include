{ "sqlcatalog",
"# This Source Code Form is subject to the terms of the Mozilla Public \n"
"# License, v. 2.0.  If a copy of the MPL was not distributed with this \n"
"# file, You can obtain one at http://mozilla.org/MPL/2.0/. \n"
"# \n"
"# Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V. \n"
"# All functions return a void and this are unsafe, having side effects. \n"
"module sqlcatalog; \n"
"pattern create_seq( sname:str, seqname:str, seq:ptr, action:int) \n"
"address SQLcreate_seq  \n"
"comment \"Catalog operation create_seq\"; \n"
"pattern alter_seq( sname:str, seqname:str, seq:ptr, val:lng)  \n"
"address SQLalter_seq  \n"
"comment \"Catalog operation alter_seq\"; \n"
"pattern drop_seq( sname:str, nme:str, action:int)  \n"
"address SQLdrop_seq  \n"
"comment \"Catalog operation drop_seq\"; \n"
"pattern create_schema(sname:str, auth:str, ifnotexists:int, action:int) \n"
"address SQLcreate_schema  \n"
"comment \"Catalog operation create_schema\"; \n"
"pattern drop_schema( sname:str, s:str, ifexists:int, action:int) \n"
"address SQLdrop_schema  \n"
"comment \"Catalog operation drop_schema\"; \n"
"pattern create_table(sname:str, tname:str, tbl:ptr, temp:int)  \n"
"address SQLcreate_table  \n"
"comment \"Catalog operation create_table\"; \n"
"pattern create_view(sname:str, vname:str, tbl:ptr, temp:int)  \n"
"address SQLcreate_view  \n"
"comment \"Catalog operation create_view\"; \n"
"pattern drop_table( sname:str, name:str, action:int, ifexists:int) \n"
"address SQLdrop_table  \n"
"comment \"Catalog operation drop_table\"; \n"
"pattern drop_view( sname:str, name:str, action:int, ifexists:int) \n"
"address SQLdrop_view  \n"
"comment \"Catalog operation drop_view\"; \n"
"pattern drop_constraint( sname:str, name:str, action:int, ifexists:int) \n"
"address SQLdrop_constraint  \n"
"comment \"Catalog operation drop_constraint\"; \n"
"pattern alter_table( sname:str, tname:str, tbl:ptr, action:int)  \n"
"address SQLalter_table  \n"
"comment \"Catalog operation alter_table\"; \n"
"pattern create_type( sname:str, nme:str, impl:str)  \n"
"address SQLcreate_type  \n"
"comment \"Catalog operation create_type\"; \n"
"pattern drop_type( sname:str, nme:str, action:int)  \n"
"address SQLdrop_type  \n"
"comment \"Catalog operation drop_type\"; \n"
"pattern grant_roles( sname:str, auth:str, grantor:int, admin:int)  \n"
"address SQLgrant_roles  \n"
"comment \"Catalog operation grant_roles\"; \n"
"pattern revoke_roles( sname:str, auth:str, grantor:int, admin:int)  \n"
"address SQLrevoke_roles  \n"
"comment \"Catalog operation revoke_roles\"; \n"
"pattern grant( sname:str, tbl:str, grantee:str, privs:int, cname:str, gr:int, grantor:int)  \n"
"address SQLgrant  \n"
"comment \"Catalog operation grant\"; \n"
"pattern revoke ( sname:str, tbl:str, grantee:str, privs:int, cname:str,grant:int, grantor:int)  \n"
"address SQLrevoke  \n"
"comment \"Catalog operation revoke\"; \n"
"pattern grant_function( sname:str, fcnid:int, grantee:str, privs:int, grant:int, grantor:int)  \n"
"address SQLgrant_function  \n"
"comment \"Catalog operation grant_function\"; \n"
"pattern revoke_function( sname:str, fcnid:int, grantee:str, privs:int, grant:int, grantor:int)  \n"
"address SQLrevoke_function  \n"
"comment \"Catalog operation revoke_function\"; \n"
"pattern create_user( sname:str, passwrd:str, enc:int, schema:str, fullname:str)  \n"
"address SQLcreate_user  \n"
"comment \"Catalog operation create_user\"; \n"
"pattern drop_user(sname:str, action:int)  \n"
"address SQLdrop_user  \n"
"comment \"Catalog operation drop_user\"; \n"
"pattern drop_user(sname:str, auth:str, action:int)  \n"
"address SQLdrop_user  \n"
"comment \"Catalog operation drop_user\"; \n"
"pattern alter_user( sname:str, passwrd:str, enc:int, schema:str, oldpasswrd:str)  \n"
"address SQLalter_user  \n"
"comment \"Catalog operation alter_user\"; \n"
"pattern rename_user( sname:str, newnme:str, action:int)  \n"
"address SQLrename_user  \n"
"comment \"Catalog operation rename_user\"; \n"
"pattern create_role(sname:str,role:str,grator:int)  \n"
"address SQLcreate_role  \n"
"comment \"Catalog operation create_role\"; \n"
"pattern drop_role( auth:str, role:str, action:int)  \n"
"address SQLdrop_role  \n"
"comment \"Catalog operation drop_role\"; \n"
"pattern drop_role( role:str, action:int)  \n"
"address SQLdrop_role  \n"
"comment \"Catalog operation drop_role\"; \n"
"pattern drop_index( sname:str, iname:str, action:int)  \n"
"address SQLdrop_index  \n"
"comment \"Catalog operation drop_index\"; \n"
"pattern drop_function( sname:str, fname:str, fid:int, type:int, action:int) \n"
"address SQLdrop_function  \n"
"comment \"Catalog operation drop_function\"; \n"
"pattern create_function( sname:str, fname:str, fcn:ptr)  \n"
"address SQLcreate_function  \n"
"comment \"Catalog operation create_function\"; \n"
"pattern create_trigger( sname:str, tname:str, triggername:str, time:int, orientation:int, event:int, old:str, new:str, cond:str, qry:str)  \n"
"address SQLcreate_trigger  \n"
"comment \"Catalog operation create_trigger\"; \n"
"pattern drop_trigger(sname:str, nme:str, ifexists:int) \n"
"address SQLdrop_trigger  \n"
"comment \"Catalog operation drop_trigger\"; \n"
"pattern alter_add_table( sname:str, mtnme:str, psnme:str, ptnme:str, action:int)  \n"
"address SQLalter_add_table  \n"
"comment \"Catalog operation alter_add_table\"; \n"
"pattern alter_del_table( sname:str, mtnme:str, psnme:str, ptnme:str, action:int)  \n"
"address SQLalter_del_table  \n"
"comment \"Catalog operation alter_del_table\"; \n"
"pattern alter_set_table( sname:str, tnme:str, access:int)  \n"
"address SQLalter_set_table  \n"
"comment \"Catalog operation alter_set_table\"; \n"
"pattern alter_add_range_partition( sname:str, mtnme:str, psnme:str, ptnme:str, min:any_1, max:any_1, nills:int, update:int) \n"
"address SQLalter_add_range_partition \n"
"comment \"Catalog operation alter_add_range_partition\"; \n"
"pattern alter_add_value_partition( sname:str, mtnme:str, psnme:str, ptnme:str, nills:int, update:int) \n"
"address SQLalter_add_value_partition \n"
"comment \"Catalog operation alter_add_value_partition\"; \n"
"pattern alter_add_value_partition( sname:str, mtnme:str, psnme:str, ptnme:str, nills:int, update:int, arg:any...) \n"
"address SQLalter_add_value_partition \n"
"comment \"Catalog operation alter_add_value_partition\"; \n"
"pattern comment_on(objid:int, remark:str) \n"
"address SQLcomment_on \n"
"comment \"Catalog operation comment_on\"; \n"
"pattern rename_schema(sname:str, newnme:str) \n"
"address SQLrename_schema \n"
"comment \"Catalog operation rename_schema\"; \n"
"pattern rename_table(sname:str, tname:str, newnme:str) \n"
"address SQLrename_table \n"
"comment \"Catalog operation rename_table\"; \n"
"pattern rename_column(sname:str, tname:str, cname:str, newnme:str) \n"
"address SQLrename_column \n"
"comment \"Catalog operation rename_column\"; \n"
},
