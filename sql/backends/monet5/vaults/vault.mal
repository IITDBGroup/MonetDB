# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.  If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 1997 - July 2008 CWI, August 2008 - 2018 MonetDB B.V.

module vault;

command prelude() :void
address VLTprelude;
vault.prelude();

command import(src:str,trg:str):timestamp
address VLTimport
comment "Use FTP to copy a remote file to the cache";

command remove(t:str):timestamp
address VLTremove
comment "Drop a file from the local cache";

command basename( fnme:str, split:str):str
address VLTbasename
comment "Split the fnme string just before the split marker.";

command setdirectory(src:str):str
address VLTsetLocation
comment "Change  the location of the root vault directory";

command getdirectory():str
address VLTgetLocation
comment "Return the location of the root vault directory";

command epiloque():void
address VLTepilogue
comment "Cleanup the vault.";

pattern checktable(mvc:int, tablename :str) (readerID:int, status:int)
address VLTcheckTable
comment "Check if table was loaded";

function checktab(tablename :str) (:int, :int);
    (x:int, y:int) := checktable(0:int, tablename);
    return (x, y);
end checktab;

pattern analyzetable(readerID:int, status:int, tablename :str) :int
address VLTanalyzeTable
comment "Analyze table";

function analyzetab(status:int, tablename:str) :int;
    x := analyzetable(-1, status, tablename);
    return x;
end analyzetab;

pattern bind(status:int, mvc:int, schema:str, table:str, column:str, access:int ):bat[:any_1]
address mvc_VLT_bind_wrap
comment "Bind the 'schema.table.column' BAT with access kind:
	0 - base table
	1 - inserts
	2 - updates";

pattern bind(status:int, mvc:int, schema:str, table:str, column:str, access:int )(uid:bat[:oid],uval:bat[:any_1])
address mvc_VLT_bind_wrap
comment "Bind the 'schema.table.column' BAT with access kind:
	0 - base table
	1 - inserts
	2 - updates";

pattern bind(status:int, mvc:int, schema:str, table:str, column:str, access:int, part_nr:int, nr_parts:int ):bat[:any_1]
address mvc_VLT_bind_wrap
comment "Bind the 'schema.table.column' BAT partition with access kind:
	0 - base table
	1 - inserts
	2 - updates";

pattern bind(status:int, mvc:int, schema:str, table:str, column:str, access:int, part_nr:int, nr_parts:int )(uid:bat[:oid],uval:bat[:any_1])
address mvc_VLT_bind_wrap
comment "Bind the 'schema.table.column' BAT with access kind:
	0 - base table
	1 - inserts
	2 - updates";

pattern tid(tatus:int, mvc:int, sname:str, tname:str):bat[:oid] 
address VLTTid
comment "Return the tables tid column.";

pattern tid(tatus:int, mvc:int, sname:str, tname:str, part_nr:int, nr_parts:int ):bat[:oid] 
address VLTTid
comment "Return the tables tid column.";
