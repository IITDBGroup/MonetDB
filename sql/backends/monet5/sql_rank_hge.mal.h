/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "sql_rank_hge", "\n\nmodule sql;\n\npattern sql.window_bound(b:any_1, unit:int, bound:int, excl:int, start:hge) :lng\naddress SQLwindow_bound\n;\n\npattern batsql.window_bound(b:bat[:any_1], unit:int, bound:int, excl:int, start:hge) :bat[:lng]\naddress SQLwindow_bound\n;\n\npattern sql.window_bound(p:bit, b:any_1, unit:int, bound:int, excl:int, start:hge) :lng\naddress SQLwindow_bound\n;\n\npattern batsql.window_bound(p:bat[:bit], b:bat[:any_1], unit:int, bound:int, excl:int, start:hge) :bat[:lng]\naddress SQLwindow_bound\n;\n\npattern batsql.window_bound(b:bat[:any_1], unit:int, bound:int, excl:int, start:bat[:hge]) :bat[:lng]\naddress SQLwindow_bound\n;\n\npattern batsql.window_bound(p:bat[:bit], b:bat[:any_1], unit:int, bound:int, excl:int, start:bat[:hge]) :bat[:lng]\naddress SQLwindow_bound\n;\n\n\npattern sql.sum(b:bte, s:lng, e:lng) :hge\naddress SQLsum\n;\n\npattern batsql.sum(b:bat[:bte], s:bat[:lng], e:bat[:lng]) :bat[:hge]\naddress SQLsum\n;\n\npattern sql.prod(b:bte, s:lng, e:lng) :hge\naddress SQLprod\n;\n\npattern batsql.prod(b:bat[:bte], s:bat[:lng], e:bat[:lng]) :bat[:hge]\naddress SQLprod\n;\n\npattern sql.sum(b:sht, s:lng, e:lng) :hge\naddress SQLsum\n;\n\npattern batsql.sum(b:bat[:sht], s:bat[:lng], e:bat[:lng]) :bat[:hge]\naddress SQLsum\n;\n\npattern sql.prod(b:sht, s:lng, e:lng) :hge\naddress SQLprod\n;\n\npattern batsql.prod(b:bat[:sht], s:bat[:lng], e:bat[:lng]) :bat[:hge]\naddress SQLprod\n;\n\npattern sql.sum(b:int, s:lng, e:lng) :hge\naddress SQLsum\n;\n\npattern batsql.sum(b:bat[:int], s:bat[:lng], e:bat[:lng]) :bat[:hge]\naddress SQLsum\n;\n\npattern sql.prod(b:int, s:lng, e:lng) :hge\naddress SQLprod\n;\n\npattern batsql.prod(b:bat[:int], s:bat[:lng], e:bat[:lng]) :bat[:hge]\naddress SQLprod\n;\n\npattern sql.sum(b:lng, s:lng, e:lng) :hge\naddress SQLsum\n;\n\npattern batsql.sum(b:bat[:lng], s:bat[:lng], e:bat[:lng]) :bat[:hge]\naddress SQLsum\n;\n\npattern sql.prod(b:lng, s:lng, e:lng) :hge\naddress SQLprod\n;\n\npattern batsql.prod(b:bat[:lng], s:bat[:lng], e:bat[:lng]) :bat[:hge]\naddress SQLprod\n;\n\npattern sql.sum(b:hge, s:lng, e:lng) :hge\naddress SQLsum\n;\n\npattern batsql.sum(b:bat[:hge], s:bat[:lng], e:bat[:lng]) :bat[:hge]\naddress SQLsum\n;\n\npattern sql.prod(b:hge, s:lng, e:lng) :hge\naddress SQLprod\n;\n\npattern batsql.prod(b:bat[:hge], s:bat[:lng], e:bat[:lng]) :bat[:hge]\naddress SQLprod\n;\n\npattern sql.avg(b:hge, s:lng, e:lng) :dbl\naddress SQLavg\n;\n\npattern batsql.avg(b:bat[:hge], s:bat[:lng], e:bat[:lng]) :bat[:dbl]\naddress SQLavg\n;\n" }, 
