/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with sql2h.py. Do not edit this file directly.
{ "40_json", "\n\ncreate schema json;\ncreate type json external name json;\ncreate function json.filter(js json, pathexpr string)\nreturns json external name json.filter;\nGRANT EXECUTE ON FUNCTION json.filter(json, string) TO PUBLIC;\ncreate function json.filter(js json, name tinyint)\nreturns json external name json.filter;\nGRANT EXECUTE ON FUNCTION json.filter(json, tinyint) TO PUBLIC;\ncreate function json.filter(js json, name integer)\nreturns json external name json.filter;\nGRANT EXECUTE ON FUNCTION json.filter(json, integer) TO PUBLIC;\ncreate function json.filter(js json, name bigint)\nreturns json external name json.filter;\nGRANT EXECUTE ON FUNCTION json.filter(json, bigint) TO PUBLIC;\ncreate function json.text(js json, e string)\nreturns string external name json.text;\nGRANT EXECUTE ON FUNCTION json.text(json, string) TO PUBLIC;\ncreate function json.number(js json)\nreturns float external name json.number;\nGRANT EXECUTE ON FUNCTION json.number(json) TO PUBLIC;\ncreate function json.\"integer\"(js json)\nreturns bigint external name json.\"integer\";\nGRANT EXECUTE ON FUNCTION json.\"integer\"(json) TO PUBLIC;\ncreate function json.isvalid(js string)\nreturns bool external name json.isvalid;\nGRANT EXECUTE ON FUNCTION json.isvalid(string) TO PUBLIC;\ncreate function json.isobject(js string)\nreturns bool external name json.isobject;\nGRANT EXECUTE ON FUNCTION json.isobject(string) TO PUBLIC;\ncreate function json.isarray(js string)\nreturns bool external name json.isarray;\nGRANT EXECUTE ON FUNCTION json.isarray(string) TO PUBLIC;\ncreate function json.isvalid(js json)\nreturns bool external name json.isvalid;\nGRANT EXECUTE ON FUNCTION json.isvalid(json) TO PUBLIC;\ncreate function json.isobject(js json)\nreturns bool external name json.isobject;\nGRANT EXECUTE ON FUNCTION json.isobject(json) TO PUBLIC;\ncreate function json.isarray(js json)\nreturns bool external name json.isarray;\nGRANT EXECUTE ON FUNCTION json.isarray(json) TO PUBLIC;\ncreate function json.length(js json)\nreturns integer external name json.length;\nGRANT EXECUTE ON FUNCTION json.length(json) TO PUBLIC;\ncreate function json.keyarray(js json)\nreturns json external name json.keyarray;\nGRANT EXECUTE ON FUNCTION json.keyarray(json) TO PUBLIC;\ncreate function json.valuearray(js json)\nreturns json external name json.valuearray;\nGRANT EXECUTE ON FUNCTION json.valuearray(json) TO PUBLIC;\ncreate function json.text(js json)\nreturns string external name json.text;\nGRANT EXECUTE ON FUNCTION json.text(json) TO PUBLIC;\ncreate function json.text(js string)\nreturns string external name json.text;\nGRANT EXECUTE ON FUNCTION json.text(string) TO PUBLIC;\ncreate function json.text(js int)\nreturns string external name json.text;\nGRANT EXECUTE ON FUNCTION json.text(int) TO PUBLIC;\n\ncreate aggregate json.output(js json)\nreturns string external name json.output;\nGRANT EXECUTE ON AGGREGATE json.output(json) TO PUBLIC;\n\n\n\n\n\n\n\ncreate aggregate json.tojsonarray( x string ) returns string external name aggr.jsonaggr;\nGRANT EXECUTE ON AGGREGATE json.tojsonarray( string ) TO PUBLIC;\ncreate aggregate json.tojsonarray( x double ) returns string external name aggr.jsonaggr;\nGRANT EXECUTE ON AGGREGATE json.tojsonarray( double ) TO PUBLIC;" }, 
