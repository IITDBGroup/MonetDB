/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with sql2h.py. Do not edit this file directly.
{ "42_geom", "\n\nCREATE FUNCTION Has_Z(info integer) RETURNS integer EXTERNAL NAME geom.\"hasZ\";\nGRANT EXECUTE ON FUNCTION Has_Z(integer) TO PUBLIC;\nCREATE FUNCTION Has_M(info integer) RETURNS integer EXTERNAL NAME geom.\"hasM\";\nGRANT EXECUTE ON FUNCTION Has_M(integer) TO PUBLIC;\nCREATE FUNCTION get_type(info integer, format integer) RETURNS string EXTERNAL NAME geom.\"getType\";\nGRANT EXECUTE ON FUNCTION get_type(integer, integer) TO PUBLIC;\nCREATE TABLE spatial_ref_sys (\nsrid INTEGER NOT NULL PRIMARY KEY,\nauth_name VARCHAR (256),\nauth_srid INTEGER,\nsrtext VARCHAR (2048),\nproj4text VARCHAR (2048)\n);\nGRANT SELECT ON spatial_ref_sys TO PUBLIC;\ncreate view sys.geometry_columns as\nselect cast(null as varchar(1)) as f_table_catalog,\ns.name as f_table_schema,\nt.name as f_table_name,\nc.name as f_geometry_column,\ncast(has_z(c.type_digits) + has_m(c.type_digits) +2 as integer) as coord_dimension,\nc.type_scale as srid,\nget_type(c.type_digits, 0) as type\nfrom sys.columns c, sys.tables t, sys.schemas s\nwhere c.table_id = t.id and t.schema_id = s.id\nand c.type in (select sqlname from sys.types where systemname in ('wkb', 'wkba'));\nGRANT SELECT ON sys.geometry_columns TO PUBLIC;\nCREATE FUNCTION mbr(geom Geometry) RETURNS mbr external name geom.\"mbr\";\nGRANT EXECUTE ON FUNCTION mbr(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Overlaps(box1 mbr, box2 mbr) RETURNS boolean EXTERNAL NAME geom.\"mbrOverlaps\";\nGRANT EXECUTE ON FUNCTION ST_Overlaps(mbr, mbr) TO PUBLIC;\nCREATE FUNCTION ST_Contains(box1 mbr, box2 mbr) RETURNS boolean EXTERNAL NAME geom.\"mbrContains\";\nGRANT EXECUTE ON FUNCTION ST_Contains(mbr, mbr) TO PUBLIC;\nCREATE FUNCTION ST_Equals(box1 mbr, box2 mbr) RETURNS boolean EXTERNAL NAME geom.\"mbrEqual\";\nGRANT EXECUTE ON FUNCTION ST_Equals(mbr, mbr) TO PUBLIC;\nCREATE FUNCTION ST_Distance(box1 mbr, box2 mbr) RETURNS double EXTERNAL NAME geom.\"mbrDistance\";\nGRANT EXECUTE ON FUNCTION ST_Distance(mbr, mbr) TO PUBLIC;\n\n\n\n\n\nCREATE FUNCTION ST_WKTToSQL(wkt string) RETURNS Geometry external name geom.\"GeomFromText\";\nGRANT EXECUTE ON FUNCTION ST_WKTToSQL(string) TO PUBLIC;\nCREATE FUNCTION ST_WKBToSQL(geom string) RETURNS Geometry EXTERNAL NAME geom.\"FromBinary\";\nGRANT EXECUTE ON FUNCTION ST_WKBToSQL(string) TO PUBLIC;\nCREATE FUNCTION ST_AsText(geom Geometry) RETURNS string EXTERNAL NAME geom.\"AsText\";\nGRANT EXECUTE ON FUNCTION ST_AsText(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_AsBinary(geom Geometry) RETURNS string EXTERNAL NAME geom.\"AsBinary\";\nGRANT EXECUTE ON FUNCTION ST_AsBinary(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Dimension(geom Geometry) RETURNS integer EXTERNAL NAME geom.\"Dimension\";\nGRANT EXECUTE ON FUNCTION ST_Dimension(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_GeometryType(geom Geometry) RETURNS string EXTERNAL NAME geom.\"GeometryType2\";\nGRANT EXECUTE ON FUNCTION ST_GeometryType(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_SRID(geom Geometry) RETURNS integer EXTERNAL NAME geom.\"getSRID\";\nGRANT EXECUTE ON FUNCTION ST_SRID(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_SetSRID(geom Geometry, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"setSRID\";\nGRANT EXECUTE ON FUNCTION ST_SetSRID(Geometry, integer) TO PUBLIC;\nCREATE FUNCTION ST_IsEmpty(geom Geometry) RETURNS boolean EXTERNAL NAME geom.\"IsEmpty\";\nGRANT EXECUTE ON FUNCTION ST_IsEmpty(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_IsSimple(geom Geometry) RETURNS boolean EXTERNAL NAME geom.\"IsSimple\";\nGRANT EXECUTE ON FUNCTION ST_IsSimple(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Boundary(geom Geometry) RETURNS Geometry EXTERNAL NAME geom.\"Boundary\";\nGRANT EXECUTE ON FUNCTION ST_Boundary(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Envelope(geom Geometry) RETURNS Geometry EXTERNAL NAME geom.\"Envelope\";\nGRANT EXECUTE ON FUNCTION ST_Envelope(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Equals(geom1 Geometry, geom2 Geometry) RETURNS boolean EXTERNAL NAME geom.\"Equals\";\nGRANT EXECUTE ON FUNCTION ST_Equals(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Disjoint(geom1 Geometry, geom2 Geometry) RETURNS boolean EXTERNAL NAME geom.\"Disjoint\";\nGRANT EXECUTE ON FUNCTION ST_Disjoint(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Intersects(geom1 Geometry, geom2 Geometry) RETURNS boolean EXTERNAL NAME geom.\"Intersects\";\nGRANT EXECUTE ON FUNCTION ST_Intersects(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Touches(geom1 Geometry, geom2 Geometry) RETURNS boolean EXTERNAL NAME geom.\"Touches\";\nGRANT EXECUTE ON FUNCTION ST_Touches(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Crosses(geom1 Geometry, geom2 Geometry) RETURNS boolean EXTERNAL NAME geom.\"Crosses\";\nGRANT EXECUTE ON FUNCTION ST_Crosses(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Within(geom1 Geometry, geom2 Geometry) RETURNS boolean EXTERNAL NAME geom.\"Within\";\nGRANT EXECUTE ON FUNCTION ST_Within(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Contains(geom1 Geometry, geom2 Geometry) RETURNS boolean EXTERNAL NAME geom.\"Contains\";\nGRANT EXECUTE ON FUNCTION ST_Contains(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Overlaps(geom1 Geometry, geom2 Geometry) RETURNS boolean EXTERNAL NAME geom.\"Overlaps\";\nGRANT EXECUTE ON FUNCTION ST_Overlaps(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Relate(geom1 Geometry, geom2 Geometry, intersection_matrix_pattern string) RETURNS boolean EXTERNAL NAME geom.\"Relate\";\nGRANT EXECUTE ON FUNCTION ST_Relate(Geometry, Geometry, string) TO PUBLIC;\nCREATE FUNCTION ST_Distance(geom1 Geometry, geom2 Geometry) RETURNS double EXTERNAL NAME geom.\"Distance\";\nGRANT EXECUTE ON FUNCTION ST_Distance(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Intersection(geom1 Geometry, geom2 Geometry) RETURNS Geometry EXTERNAL NAME geom.\"Intersection\";\nGRANT EXECUTE ON FUNCTION ST_Intersection(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Difference(geom1 Geometry, geom2 Geometry) RETURNS Geometry EXTERNAL NAME geom.\"Difference\";\nGRANT EXECUTE ON FUNCTION ST_Difference(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Union(geom1 Geometry, geom2 Geometry) RETURNS Geometry EXTERNAL NAME geom.\"Union\";\nGRANT EXECUTE ON FUNCTION ST_Union(Geometry, Geometry) TO PUBLIC;\nCREATE AGGREGATE ST_Union(geom Geometry) RETURNS Geometry external name geom.\"Union\";\nCREATE FUNCTION ST_SymDifference(geom1 Geometry, geom2 Geometry) RETURNS Geometry EXTERNAL NAME geom.\"SymDifference\";\nGRANT EXECUTE ON FUNCTION ST_SymDifference(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Buffer(geom Geometry, radius double) RETURNS Geometry EXTERNAL NAME geom.\"Buffer\";\nGRANT EXECUTE ON FUNCTION ST_Buffer(Geometry, double) TO PUBLIC;\nCREATE FUNCTION ST_ConvexHull(geom Geometry) RETURNS Geometry EXTERNAL NAME geom.\"ConvexHull\";\nGRANT EXECUTE ON FUNCTION ST_ConvexHull(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_X(geom Geometry) RETURNS double EXTERNAL NAME geom.\"X\";\nGRANT EXECUTE ON FUNCTION ST_X(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Y(geom Geometry) RETURNS double EXTERNAL NAME geom.\"Y\";\nGRANT EXECUTE ON FUNCTION ST_Y(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Z(geom Geometry) RETURNS double EXTERNAL NAME geom.\"Z\";\nGRANT EXECUTE ON FUNCTION ST_Z(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_StartPoint(geom Geometry) RETURNS Geometry EXTERNAL NAME geom.\"StartPoint\";\nGRANT EXECUTE ON FUNCTION ST_StartPoint(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_EndPoint(geom Geometry) RETURNS Geometry EXTERNAL NAME geom.\"EndPoint\";\nGRANT EXECUTE ON FUNCTION ST_EndPoint(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_IsRing(geom Geometry) RETURNS boolean EXTERNAL NAME geom.\"IsRing\";\nGRANT EXECUTE ON FUNCTION ST_IsRing(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Length(geom Geometry) RETURNS double EXTERNAL NAME geom.\"Length\"; GRANT EXECUTE ON FUNCTION ST_Length(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_IsClosed(geom Geometry) RETURNS boolean EXTERNAL NAME geom.\"IsClosed\"; GRANT EXECUTE ON FUNCTION ST_IsClosed(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_NumPoints(geom Geometry) RETURNS integer EXTERNAL NAME geom.\"NumPoints\";\nGRANT EXECUTE ON FUNCTION ST_NumPoints(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_PointN(geom Geometry, positionNum integer) RETURNS Geometry EXTERNAL NAME geom.\"PointN\";\nGRANT EXECUTE ON FUNCTION ST_PointN(Geometry, integer) TO PUBLIC;\nCREATE FUNCTION ST_Centroid(geom Geometry) RETURNS Geometry EXTERNAL NAME geom.\"Centroid\";\nGRANT EXECUTE ON FUNCTION ST_Centroid(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_PointOnSurface(geom Geometry) RETURNS Geometry EXTERNAL NAME geom.\"PointOnSurface\";\nGRANT EXECUTE ON FUNCTION ST_PointOnSurface(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Area(geom Geometry) RETURNS double EXTERNAL NAME geom.\"Area\";\nGRANT EXECUTE ON FUNCTION ST_Area(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_ExteriorRing(geom Geometry) RETURNS Geometry EXTERNAL NAME geom.\"ExteriorRing\";\nGRANT EXECUTE ON FUNCTION ST_ExteriorRing(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_SetExteriorRing(geom Geometry) RETURNS Geometry external name geom.\"MakePolygon\"; GRANT EXECUTE ON FUNCTION ST_SetExteriorRing(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_NumInteriorRing(geom Geometry) RETURNS integer EXTERNAL NAME geom.\"NumInteriorRings\";\nGRANT EXECUTE ON FUNCTION ST_NumInteriorRing(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_InteriorRingN(geom Geometry, positionNum integer) RETURNS Geometry EXTERNAL NAME geom.\"InteriorRingN\";\nGRANT EXECUTE ON FUNCTION ST_InteriorRingN(Geometry, integer) TO PUBLIC;\nCREATE FUNCTION ST_InteriorRings(geom Geometry) RETURNS GeometryA EXTERNAL NAME geom.\"InteriorRings\";\nGRANT EXECUTE ON FUNCTION ST_InteriorRings(Geometry) TO PUBLIC;\n\nCREATE FUNCTION ST_NumGeometries(geom Geometry) RETURNS integer EXTERNAL NAME geom.\"NumGeometries\";\nGRANT EXECUTE ON FUNCTION ST_NumGeometries(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_GeometryN(geom Geometry, positionNum integer) RETURNS Geometry EXTERNAL NAME geom.\"GeometryN\";\nGRANT EXECUTE ON FUNCTION ST_GeometryN(Geometry, integer) TO PUBLIC;\nCREATE FUNCTION ST_NumPatches(geom Geometry) RETURNS integer BEGIN\nRETURN SELECT ST_NumGeometries(geom);\nEND;\nGRANT EXECUTE ON FUNCTION ST_NumPatches(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_PatchN(geom Geometry, patchNum integer) RETURNS Geometry BEGIN\nRETURN SELECT ST_GeometryN(geom, patchNum);\nEND;\nGRANT EXECUTE ON FUNCTION ST_PatchN(Geometry, integer) TO PUBLIC;\n\n\nCREATE FUNCTION ST_GeomFromText(wkt string, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"GeomFromText\";\nGRANT EXECUTE ON FUNCTION ST_GeomFromText(string, integer) TO PUBLIC;\nCREATE FUNCTION ST_PointFromText(wkt string, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"PointFromText\";\nGRANT EXECUTE ON FUNCTION ST_PointFromText(string, integer) TO PUBLIC;\nCREATE FUNCTION ST_LineFromText(wkt string, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"LineFromText\";\nGRANT EXECUTE ON FUNCTION ST_LineFromText(string, integer) TO PUBLIC;\nCREATE FUNCTION ST_PolygonFromText(wkt string, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"PolygonFromText\";\nGRANT EXECUTE ON FUNCTION ST_PolygonFromText(string, integer) TO PUBLIC;\nCREATE FUNCTION ST_MPointFromText(wkt string, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"MPointFromText\";\nGRANT EXECUTE ON FUNCTION ST_MPointFromText(string, integer) TO PUBLIC;\nCREATE FUNCTION ST_MLineFromText(wkt string, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"MLineFromText\";\nGRANT EXECUTE ON FUNCTION ST_MLineFromText(string, integer) TO PUBLIC;\nCREATE FUNCTION ST_MPolyFromText(wkt string, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"MPolyFromText\";\nGRANT EXECUTE ON FUNCTION ST_MPolyFromText(string, integer) TO PUBLIC;\nCREATE FUNCTION ST_GeomCollFromText(wkt string, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"GeomCollFromText\";\nGRANT EXECUTE ON FUNCTION ST_GeomCollFromText(string, integer) TO PUBLIC;\nCREATE FUNCTION ST_BdPolyFromText(wkt string, srid integer) RETURNS Geometry external name geom.\"BdPolyFromText\";\nGRANT EXECUTE ON FUNCTION ST_BdPolyFromText(string, integer) TO PUBLIC;\nCREATE FUNCTION ST_BdMPolyFromText(wkt string, srid integer) RETURNS Geometry external name geom.\"BdMPolyFromText\";\nGRANT EXECUTE ON FUNCTION ST_BdMPolyFromText(string, integer) TO PUBLIC;\n\n\n\nCREATE FUNCTION ST_GeometryFromText(wkt string, srid integer) RETURNS Geometry EXTERNAL NAME geom.\"GeomFromText\";\nGRANT EXECUTE ON FUNCTION ST_GeometryFromText(string, integer) TO PUBLIC;\nCREATE FUNCTION ST_GeomFromText(wkt string) RETURNS Geometry EXTERNAL NAME geom.\"GeomFromText\";\nGRANT EXECUTE ON FUNCTION ST_GeomFromText(string) TO PUBLIC;\nCREATE FUNCTION ST_GeometryFromText(wkt string) RETURNS Geometry EXTERNAL NAME geom.\"GeomFromText\";\nGRANT EXECUTE ON FUNCTION ST_GeometryFromText(string) TO PUBLIC;\nCREATE FUNCTION ST_PointFromText(wkt string) RETURNS Geometry EXTERNAL NAME geom.\"PointFromText\";\nGRANT EXECUTE ON FUNCTION ST_PointFromText(string) TO PUBLIC;\nCREATE FUNCTION ST_LineFromText(wkt string) RETURNS Geometry EXTERNAL NAME geom.\"LineFromText\";\nGRANT EXECUTE ON FUNCTION ST_LineFromText(string) TO PUBLIC;\nCREATE FUNCTION ST_PolygonFromText(wkt string) RETURNS Geometry EXTERNAL NAME geom.\"PolygonFromText\";\nGRANT EXECUTE ON FUNCTION ST_PolygonFromText(string) TO PUBLIC;\nCREATE FUNCTION ST_MPointFromText(wkt string) RETURNS Geometry EXTERNAL NAME geom.\"MPointFromText\";\nGRANT EXECUTE ON FUNCTION ST_MPointFromText(string) TO PUBLIC;\nCREATE FUNCTION ST_MLineFromText(wkt string) RETURNS Geometry EXTERNAL NAME geom.\"MLineFromText\";\nGRANT EXECUTE ON FUNCTION ST_MLineFromText(string) TO PUBLIC;\nCREATE FUNCTION ST_MPolyFromText(wkt string) RETURNS Geometry EXTERNAL NAME geom.\"MPolyFromText\";\nGRANT EXECUTE ON FUNCTION ST_MPolyFromText(string) TO PUBLIC;\nCREATE FUNCTION ST_GeomCollFromText(wkt string) RETURNS Geometry EXTERNAL NAME geom.\"GeomCollFromText\";\nGRANT EXECUTE ON FUNCTION ST_GeomCollFromText(string) TO PUBLIC;\n\n\n\nCREATE FUNCTION ST_MakePoint(x double, y double) RETURNS Geometry EXTERNAL NAME geom.\"MakePoint\";\nGRANT EXECUTE ON FUNCTION ST_MakePoint(double, double) TO PUBLIC;\nCREATE FUNCTION ST_Point(x double, y double) RETURNS Geometry EXTERNAL NAME geom.\"MakePoint\";\nGRANT EXECUTE ON FUNCTION ST_Point(double, double) TO PUBLIC;\nCREATE FUNCTION ST_MakePoint(x double, y double, z double) RETURNS Geometry EXTERNAL NAME geom.\"MakePoint\";\nGRANT EXECUTE ON FUNCTION ST_MakePoint(double, double, double) TO PUBLIC;\nCREATE FUNCTION ST_MakePoint(x double, y double, z double, m double) RETURNS Geometry EXTERNAL NAME geom.\"MakePoint\";\nGRANT EXECUTE ON FUNCTION ST_MakePoint(double, double, double, double) TO PUBLIC;\nCREATE FUNCTION ST_MakePointM(x double, y double, m double) RETURNS Geometry EXTERNAL NAME geom.\"MakePointM\";\nGRANT EXECUTE ON FUNCTION ST_MakePointM(double, double, double) TO PUBLIC;\nCREATE AGGREGATE ST_MakeLine(geom Geometry) RETURNS Geometry external name geom.\"MakeLine\";\nCREATE FUNCTION ST_MakeLine(geom1 Geometry, geom2 Geometry) RETURNS Geometry external name geom.\"MakeLine\"; GRANT EXECUTE ON FUNCTION ST_MakeLine(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_MakeEnvelope(xmin double, ymin double, xmax double, ymax double, srid integer) RETURNS Geometry external name geom.\"MakeEnvelope\";\nGRANT EXECUTE ON FUNCTION ST_MakeEnvelope(double, double, double, double, integer) TO PUBLIC;\nCREATE FUNCTION ST_MakeEnvelope(xmin double, ymin double, xmax double, ymax double) RETURNS Geometry external name geom.\"MakeEnvelope\";\nGRANT EXECUTE ON FUNCTION ST_MakeEnvelope(double, double, double, double) TO PUBLIC;\nCREATE FUNCTION ST_MakePolygon(geom Geometry) RETURNS Geometry external name geom.\"MakePolygon\"; GRANT EXECUTE ON FUNCTION ST_MakePolygon(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Polygon(geom Geometry, srid integer) RETURNS Geometry external name geom.\"MakePolygon\"; GRANT EXECUTE ON FUNCTION ST_Polygon(Geometry, integer) TO PUBLIC;\nCREATE FUNCTION ST_MakeBox2D(lowLeftPointGeom Geometry, upRightPointGeom Geometry) RETURNS mbr external name geom.\"MakeBox2D\"; GRANT EXECUTE ON FUNCTION ST_MakeBox2D(Geometry, Geometry) TO PUBLIC;\n\n\nCREATE FUNCTION GeometryType(geom Geometry) RETURNS string EXTERNAL NAME geom.\"GeometryType1\";\nGRANT EXECUTE ON FUNCTION GeometryType(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_CoordDim(geom Geometry) RETURNS integer EXTERNAL NAME geom.\"CoordDim\";\nGRANT EXECUTE ON FUNCTION ST_CoordDim(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_IsValid(geom Geometry) RETURNS boolean EXTERNAL NAME geom.\"IsValid\";\nGRANT EXECUTE ON FUNCTION ST_IsValid(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_IsValidReason(geom Geometry) RETURNS string EXTERNAL NAME geom.\"IsValidReason\";\nGRANT EXECUTE ON FUNCTION ST_IsValidReason(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_NPoints(geom Geometry) RETURNS integer EXTERNAL NAME geom.\"NPoints\";\nGRANT EXECUTE ON FUNCTION ST_NPoints(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_NRings(geom Geometry) RETURNS integer EXTERNAL NAME geom.\"NRings\"; GRANT EXECUTE ON FUNCTION ST_NRings(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_NumInteriorRings(geom Geometry) RETURNS integer EXTERNAL NAME geom.\"NumInteriorRings\";\nGRANT EXECUTE ON FUNCTION ST_NumInteriorRings(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_XMax(geom Geometry) RETURNS double EXTERNAL NAME geom.\"XMaxFromWKB\";\nGRANT EXECUTE ON FUNCTION ST_XMax(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_XMax(box mbr) RETURNS double EXTERNAL NAME geom.\"XMaxFromMBR\";\nGRANT EXECUTE ON FUNCTION ST_XMax(mbr) TO PUBLIC;\nCREATE FUNCTION ST_XMin(geom Geometry) RETURNS double EXTERNAL NAME geom.\"XMinFromWKB\";\nGRANT EXECUTE ON FUNCTION ST_XMin(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_XMin(box mbr) RETURNS double EXTERNAL NAME geom.\"XMinFromMBR\";\nGRANT EXECUTE ON FUNCTION ST_XMin(mbr) TO PUBLIC;\nCREATE FUNCTION ST_YMax(geom Geometry) RETURNS double EXTERNAL NAME geom.\"YMaxFromWKB\";\nGRANT EXECUTE ON FUNCTION ST_YMax(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_YMax(box mbr) RETURNS double EXTERNAL NAME geom.\"YMaxFromMBR\";\nGRANT EXECUTE ON FUNCTION ST_YMax(mbr) TO PUBLIC;\nCREATE FUNCTION ST_YMin(geom Geometry) RETURNS double EXTERNAL NAME geom.\"YMinFromWKB\";\nGRANT EXECUTE ON FUNCTION ST_YMin(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_YMin(box mbr) RETURNS double EXTERNAL NAME geom.\"YMinFromMBR\";\nGRANT EXECUTE ON FUNCTION ST_YMin(mbr) TO PUBLIC;\n\nCREATE FUNCTION ST_Force2D(geom Geometry) RETURNS Geometry EXTERNAL NAME geom.\"Force2D\";\nGRANT EXECUTE ON FUNCTION ST_Force2D(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Force3D(geom Geometry) RETURNS Geometry EXTERNAL NAME geom.\"Force3D\";\nGRANT EXECUTE ON FUNCTION ST_Force3D(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_Segmentize(geom Geometry, sz double) RETURNS Geometry EXTERNAL NAME geom.\"Segmentize\";\nGRANT EXECUTE ON FUNCTION ST_Segmentize(Geometry, double) TO PUBLIC;\nCREATE FUNCTION getProj4(srid_in integer) RETURNS string\nBEGIN\nRETURN SELECT proj4text FROM spatial_ref_sys WHERE srid=srid_in;\nEND;\nGRANT EXECUTE ON FUNCTION getProj4(integer) TO PUBLIC;\nCREATE FUNCTION InternalTransform(geom Geometry, srid_src integer, srid_dest integer, proj4_src string, proj4_dest string) RETURNS Geometry EXTERNAL NAME geom.\"Transform\";\nGRANT EXECUTE ON FUNCTION InternalTransform(Geometry, integer, integer, string, string) TO PUBLIC;\nCREATE FUNCTION ST_Transform(geom Geometry, srid integer) RETURNS Geometry\nBEGIN\nDECLARE srid_src integer;\nDECLARE proj4_src string;\nDECLARE proj4_dest string;\nSELECT st_srid(geom) INTO srid_src;\nSELECT getProj4(srid_src) INTO proj4_src;\nSELECT getProj4(srid) INTO proj4_dest;\nIF proj4_src IS NULL THEN\nRETURN SELECT InternalTransform(geom, srid_src, srid, 'null', proj4_dest);\nELSE\nIF proj4_dest IS NULL THEN\nRETURN SELECT InternalTransform(geom, srid_src, srid, proj4_src, 'null');\nELSE\nRETURN SELECT InternalTransform(geom, srid_src, srid, proj4_src, proj4_dest);\nEND IF;\nEND IF;\nEND;\nGRANT EXECUTE ON FUNCTION ST_Transform(Geometry, integer) TO PUBLIC;\nCREATE FUNCTION ST_Translate(geom Geometry, dx double, dy double) RETURNS Geometry EXTERNAL NAME geom.\"Translate\";\nGRANT EXECUTE ON FUNCTION ST_Translate(Geometry, double, double) TO PUBLIC;\nCREATE FUNCTION ST_Translate(geom Geometry, dx double, dy double, dz double) RETURNS Geometry EXTERNAL NAME geom.\"Translate\";\nGRANT EXECUTE ON FUNCTION ST_Translate(Geometry, double, double, double) TO PUBLIC;\n\nCREATE FUNCTION ST_AsEWKT(geom Geometry) RETURNS string EXTERNAL NAME geom.\"AsEWKT\";\nGRANT EXECUTE ON FUNCTION ST_AsEWKT(Geometry) TO PUBLIC;\n\n\nCREATE FUNCTION ST_Covers(geom1 Geometry, geom2 Geometry) RETURNS boolean EXTERNAL NAME geom.\"Covers\";\nGRANT EXECUTE ON FUNCTION ST_Covers(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_CoveredBy(geom1 Geometry, geom2 Geometry) RETURNS boolean EXTERNAL NAME geom.\"CoveredBy\";\nGRANT EXECUTE ON FUNCTION ST_CoveredBy(Geometry, Geometry) TO PUBLIC;\nCREATE FUNCTION ST_DWithin(geom1 Geometry, geom2 Geometry, dst double) RETURNS boolean EXTERNAL NAME geom.\"DWithin\";\nGRANT EXECUTE ON FUNCTION ST_DWithin(Geometry, Geometry, double) TO PUBLIC;\nCREATE FUNCTION ST_Length2D(geom Geometry) RETURNS double EXTERNAL NAME geom.\"Length\";\nGRANT EXECUTE ON FUNCTION ST_Length2D(Geometry) TO PUBLIC;\n\nCREATE FUNCTION ST_Collect(geom1 Geometry, geom2 Geometry) RETURNS Geometry EXTERNAL NAME geom.\"Union\";\nGRANT EXECUTE ON FUNCTION ST_Collect(Geometry, Geometry) TO PUBLIC;\nCREATE AGGREGATE ST_Collect(geom Geometry) RETURNS Geometry external name geom.\"Union\";\nCREATE FUNCTION ST_DelaunayTriangles(geom Geometry, tolerance double, flags integer) RETURNS Geometry EXTERNAL NAME geom.\"DelaunayTriangles\";\nGRANT EXECUTE ON FUNCTION ST_DelaunayTriangles(Geometry, double, integer) TO PUBLIC;\nCREATE FUNCTION ST_Dump(geom Geometry) RETURNS TABLE(id string, polygonWKB Geometry) EXTERNAL NAME geom.\"Dump\";\nGRANT EXECUTE ON FUNCTION ST_Dump(Geometry) TO PUBLIC;\nCREATE FUNCTION ST_DumpPoints(geom Geometry) RETURNS TABLE(path string, pointG Geometry) EXTERNAL NAME geom.\"DumpPoints\";\nGRANT EXECUTE ON FUNCTION ST_DumpPoints(Geometry) TO PUBLIC;\n\n\n\n\n\n\n\n\n\nCREATE FUNCTION Contains(a Geometry, x double, y double) RETURNS BOOLEAN external name geom.\"Contains\";\nGRANT EXECUTE ON FUNCTION Contains(Geometry, double, double) TO PUBLIC;" }, 
