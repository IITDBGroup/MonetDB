stdout of test 'upgrade` in directory 'sql/test/testdb-upgrade-chain` itself:


# 15:17:06 >  
# 15:17:06 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/ufs/sjoerd/Monet-stable/var/MonetDB" "--set" "mapi_open=true" "--set" "mapi_port=36250" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_test_testdb-upgrade-chain" "--set" "mal_listing=0"
# 15:17:06 >  

# MonetDB 5 server v11.11.8 (hg id: 34fcf4e7226d+)
# This is an unreleased version
# Serving database 'mTests_test_testdb-upgrade-chain', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.629 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:36250/
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.
Running database upgrade commands:
set schema "sys";
drop function sys.dependencies_functions_os_triggers();
CREATE SYSTEM FUNCTION dependencies_functions_on_triggers()
RETURNS TABLE (sch varchar(100), usr varchar(100), dep_type varchar(32))
RETURN TABLE (SELECT f.name, tri.name, 'DEP_TRIGGER' from functions as f, triggers as tri, dependencies as dep where dep.id = f.id AND dep.depend_id =tri.id AND dep.depend_type = 8);
set schema "testschema";
commit;

Running database upgrade commands:
set schema sys;
create system aggregate sys.group_concat(str string) returns string external name "aggr"."str_group_concat";
grant execute on aggregate sys.group_concat(string) to public;
create system aggregate sys.group_concat(str string, sep string) returns string external name "aggr"."str_group_concat";
grant execute on aggregate sys.group_concat(string, string) to public;
drop table sys.systemfunctions;
create view sys.systemfunctions as select id as function_id from sys.functions where system;
grant select on sys.systemfunctions to public;
update sys._tables set system = true where name = 'systemfunctions' and schema_id = (select id from sys.schemas where name = 'sys');
set schema "testschema";
commit;

# 16:03:29 >  
# 16:03:29 >  "/usr/bin/python" "upgrade.SQL.py" "upgrade"
# 16:03:29 >  

#select count(*) from testschema.smallstring;
% testschema.L3 # table_name
% L3 # name
% bigint # type
% 2 # length
[ 66	]

# 15:17:06 >  
# 15:17:06 >  "Done."
# 15:17:06 >  

