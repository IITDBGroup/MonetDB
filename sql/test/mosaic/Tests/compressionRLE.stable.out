stdout of test 'compressionRLE` in directory 'sql/test/mosaic` itself:


# 21:09:36 >  
# 21:09:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30051" "--set" "mapi_usock=/var/tmp/mtest-28373/.s.monetdb.30051" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/mosaic//Linux/var/MonetDB/mTests_sql_test_mosaic" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 21:09:36 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_mosaic', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:30051/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-28373/.s.monetdb.30051
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

# 12:26:07 >  
# 12:26:07 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-11941" "--port=39729"
# 12:26:07 >  

#set optimizer='mosaic_pipe';
#drop table tmp3;
#create table tmp3( i integer, b boolean, f real,t timestamp);
#insert into tmp3 values
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
[ 86	]
#alter table tmp3RLE set read only;
#select cast(sum(i) as bigint) from tmp3RLE;
% sys.L4 # table_name
% L4 # name
% bigint # type
% 3 # length
[ 270	]
#select sum(f) from tmp3RLE;
% sys.L3 # table_name
% L3 # name
% real # type
% 15 # length
[ 27.104	]
#explain select * from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 168 # length
function user.s14_1():void;
    X_1:void := querylog.define("explain select * from tmp3rle;":str, "mosaic_pipe":str, 39:int);
    X_22:bat[:str] := bat.new(nil:str);
    X_28:bat[:int] := bat.new(nil:int);
    X_26:bat[:int] := bat.new(nil:int);
    X_25:bat[:str] := bat.new(nil:str);
    X_24:bat[:str] := bat.new(nil:str);
    X_4:int := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4:int, "sys":str, "tmp3rle":str);
    X_18:bat[:timestamp] := sql.bind(X_4:int, "sys":str, "tmp3rle":str, "t":str, 0:int);
    X_20:bat[:timestamp] := mosaic.projection(C_5:bat[:oid], X_18:bat[:timestamp]);
    X_15:bat[:flt] := sql.bind(X_4:int, "sys":str, "tmp3rle":str, "f":str, 0:int);
    X_17:bat[:flt] := mosaic.projection(C_5:bat[:oid], X_15:bat[:flt]);
    X_12:bat[:bit] := sql.bind(X_4:int, "sys":str, "tmp3rle":str, "b":str, 0:int);
    X_14:bat[:bit] := mosaic.projection(C_5:bat[:oid], X_12:bat[:bit]);
    X_8:bat[:int] := sql.bind(X_4:int, "sys":str, "tmp3rle":str, "i":str, 0:int);
    X_11:bat[:int] := mosaic.projection(C_5:bat[:oid], X_8:bat[:int]);
    X_29:bat[:str] := bat.append(X_22:bat[:str], "sys.tmp3rle":str);
    X_31:bat[:str] := bat.append(X_24:bat[:str], "i":str);
    X_32:bat[:str] := bat.append(X_25:bat[:str], "int":str);
    X_34:bat[:int] := bat.append(X_26:bat[:int], 32:int);
    X_36:bat[:int] := bat.append(X_28:bat[:int], 0:int);
    X_37:bat[:str] := bat.append(X_29:bat[:str], "sys.tmp3rle":str);
    X_38:bat[:str] := bat.append(X_31:bat[:str], "b":str);
    X_39:bat[:str] := bat.append(X_32:bat[:str], "boolean":str);
    X_41:bat[:int] := bat.append(X_34:bat[:int], 1:int);
    X_43:bat[:int] := bat.append(X_36:bat[:int], 0:int);
    X_45:bat[:str] := bat.append(X_37:bat[:str], "sys.tmp3rle":str);
    X_46:bat[:str] := bat.append(X_38:bat[:str], "f":str);
    X_47:bat[:str] := bat.append(X_39:bat[:str], "real":str);
    X_49:bat[:int] := bat.append(X_41:bat[:int], 24:int);
    X_51:bat[:int] := bat.append(X_43:bat[:int], 0:int);
    X_52:bat[:str] := bat.append(X_45:bat[:str], "sys.tmp3rle":str);
    X_53:bat[:str] := bat.append(X_46:bat[:str], "t":str);
    X_55:bat[:str] := bat.append(X_47:bat[:str], "timestamp":str);
    X_57:bat[:int] := bat.append(X_49:bat[:int], 7:int);
    X_59:bat[:int] := bat.append(X_51:bat[:int], 0:int);
    sql.resultSet(X_52:bat[:str], X_53:bat[:str], X_55:bat[:str], X_57:bat[:int], X_59:bat[:int], X_11:bat[:int], X_14:bat[:bit], X_17:bat[:flt], X_20:bat[:timestamp]);
end user.s14_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=3 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions= 0 time=3 usec 
#emptybind            actions= 0 time=8 usec 
#aliases              actions= 0 time=6 usec 
#mergetable           actions= 0 time=35 usec 
#deadcode             actions= 0 time=7 usec 
#aliases              actions= 0 time=5 usec 
#constants            actions= 2 time=9 usec 
#commonTerms          actions= 0 time=7 usec 
#projectionpath       actions= 0 time=5 usec 
#reorder              actions= 1 time=30 usec 
#deadcode             actions= 0 time=7 usec 
#reduce               actions=19 time=8 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=3 usec 
#candidates           actions= 1 time=1 usec 
#garbagecollector     actions= 1 time=18 usec 
#total                actions= 1 time=274 usec 
#alter table tmp3RLE alter column i set storage 'runlength';
#select * from mosaic.layout('sys','tmp3RLE','i') limit 25;
% .L4,	.L4,	.L4,	.L4,	.L4 # table_name
% technique,	count,	inputsize,	outputsize,	properties # name
% clob,	bigint,	bigint,	bigint,	clob # type
% 0,	1,	1,	1,	0 # length
#alter table tmp3RLE alter column b set storage 'runlength';
#select * from mosaic.layout('sys','tmp3RLE','b') limit 25;
% .L4,	.L4,	.L4,	.L4,	.L4 # table_name
% technique,	count,	inputsize,	outputsize,	properties # name
% clob,	bigint,	bigint,	bigint,	clob # type
% 0,	1,	1,	1,	0 # length
#alter table tmp3RLE alter column f set storage 'runlength';
#select * from mosaic.layout('sys','tmp3RLE','f') limit 25;
% .L4,	.L4,	.L4,	.L4,	.L4 # table_name
% technique,	count,	inputsize,	outputsize,	properties # name
% clob,	bigint,	bigint,	bigint,	clob # type
% 0,	1,	1,	1,	0 # length
#alter table tmp3RLE alter column t set storage 'runlength';
#select * from mosaic.layout('sys','tmp3RLE','t') limit 25;
% .L4,	.L4,	.L4,	.L4,	.L4 # table_name
% technique,	count,	inputsize,	outputsize,	properties # name
% clob,	bigint,	bigint,	bigint,	clob # type
% 0,	1,	1,	1,	0 # length
#explain select i from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 114 # length
function user.s32_1():void;
    X_1:void := querylog.define("explain select i from tmp3rle;":str, "mosaic_pipe":str, 18:int);
    X_13:bat[:str] := bat.new(nil:str);
    X_19:bat[:int] := bat.new(nil:int);
    X_17:bat[:int] := bat.new(nil:int);
    X_16:bat[:str] := bat.new(nil:str);
    X_15:bat[:str] := bat.new(nil:str);
    X_4:int := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4:int, "sys":str, "tmp3rle":str);
    X_8:bat[:int] := sql.bind(X_4:int, "sys":str, "tmp3rle":str, "i":str, 0:int);
    X_11:bat[:int] := mosaic.projection(C_5:bat[:oid], X_8:bat[:int]);
    X_20:bat[:str] := bat.append(X_13:bat[:str], "sys.tmp3rle":str);
    X_22:bat[:str] := bat.append(X_15:bat[:str], "i":str);
    X_23:bat[:str] := bat.append(X_16:bat[:str], "int":str);
    X_25:bat[:int] := bat.append(X_17:bat[:int], 32:int);
    X_27:bat[:int] := bat.append(X_19:bat[:int], 0:int);
    sql.resultSet(X_20:bat[:str], X_22:bat[:str], X_23:bat[:str], X_25:bat[:int], X_27:bat[:int], X_11:bat[:int]);
end user.s32_1;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=2 usec 
#emptybind            actions= 0 time=6 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=3 usec 
#constants            actions= 0 time=4 usec 
#commonTerms          actions= 0 time=3 usec 
#projectionpath       actions= 0 time=3 usec 
#reorder              actions= 1 time=20 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=2 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=12 usec 
#total                actions= 1 time=203 usec 
#explain select b from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 114 # length
function user.s34_1():void;
    X_1:void := querylog.define("explain select b from tmp3rle;":str, "mosaic_pipe":str, 18:int);
    X_13:bat[:str] := bat.new(nil:str);
    X_19:bat[:int] := bat.new(nil:int);
    X_17:bat[:int] := bat.new(nil:int);
    X_16:bat[:str] := bat.new(nil:str);
    X_15:bat[:str] := bat.new(nil:str);
    X_4:int := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4:int, "sys":str, "tmp3rle":str);
    X_8:bat[:bit] := sql.bind(X_4:int, "sys":str, "tmp3rle":str, "b":str, 0:int);
    X_11:bat[:bit] := mosaic.projection(C_5:bat[:oid], X_8:bat[:bit]);
    X_20:bat[:str] := bat.append(X_13:bat[:str], "sys.tmp3rle":str);
    X_22:bat[:str] := bat.append(X_15:bat[:str], "b":str);
    X_23:bat[:str] := bat.append(X_16:bat[:str], "boolean":str);
    X_25:bat[:int] := bat.append(X_17:bat[:int], 1:int);
    X_27:bat[:int] := bat.append(X_19:bat[:int], 0:int);
    sql.resultSet(X_20:bat[:str], X_22:bat[:str], X_23:bat[:str], X_25:bat[:int], X_27:bat[:int], X_11:bat[:bit]);
end user.s34_1;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=0 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=2 usec 
#emptybind            actions= 0 time=6 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=3 usec 
#constants            actions= 0 time=3 usec 
#commonTerms          actions= 0 time=4 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=19 usec 
#deadcode             actions= 0 time=4 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=2 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=11 usec 
#total                actions= 1 time=201 usec 
#explain select f from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 114 # length
function user.s36_1():void;
    X_1:void := querylog.define("explain select f from tmp3rle;":str, "mosaic_pipe":str, 18:int);
    X_13:bat[:str] := bat.new(nil:str);
    X_19:bat[:int] := bat.new(nil:int);
    X_17:bat[:int] := bat.new(nil:int);
    X_16:bat[:str] := bat.new(nil:str);
    X_15:bat[:str] := bat.new(nil:str);
    X_4:int := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4:int, "sys":str, "tmp3rle":str);
    X_8:bat[:flt] := sql.bind(X_4:int, "sys":str, "tmp3rle":str, "f":str, 0:int);
    X_11:bat[:flt] := mosaic.projection(C_5:bat[:oid], X_8:bat[:flt]);
    X_20:bat[:str] := bat.append(X_13:bat[:str], "sys.tmp3rle":str);
    X_22:bat[:str] := bat.append(X_15:bat[:str], "f":str);
    X_23:bat[:str] := bat.append(X_16:bat[:str], "real":str);
    X_25:bat[:int] := bat.append(X_17:bat[:int], 24:int);
    X_27:bat[:int] := bat.append(X_19:bat[:int], 0:int);
    sql.resultSet(X_20:bat[:str], X_22:bat[:str], X_23:bat[:str], X_25:bat[:int], X_27:bat[:int], X_11:bat[:flt]);
end user.s36_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions= 0 time=3 usec 
#emptybind            actions= 0 time=5 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=3 usec 
#constants            actions= 0 time=3 usec 
#commonTerms          actions= 0 time=4 usec 
#projectionpath       actions= 0 time=3 usec 
#reorder              actions= 1 time=20 usec 
#deadcode             actions= 0 time=4 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=1 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=12 usec 
#total                actions= 1 time=209 usec 
#explain select t from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 120 # length
function user.s38_1():void;
    X_1:void := querylog.define("explain select t from tmp3rle;":str, "mosaic_pipe":str, 18:int);
    X_13:bat[:str] := bat.new(nil:str);
    X_19:bat[:int] := bat.new(nil:int);
    X_17:bat[:int] := bat.new(nil:int);
    X_16:bat[:str] := bat.new(nil:str);
    X_15:bat[:str] := bat.new(nil:str);
    X_4:int := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4:int, "sys":str, "tmp3rle":str);
    X_8:bat[:timestamp] := sql.bind(X_4:int, "sys":str, "tmp3rle":str, "t":str, 0:int);
    X_11:bat[:timestamp] := mosaic.projection(C_5:bat[:oid], X_8:bat[:timestamp]);
    X_20:bat[:str] := bat.append(X_13:bat[:str], "sys.tmp3rle":str);
    X_22:bat[:str] := bat.append(X_15:bat[:str], "t":str);
    X_23:bat[:str] := bat.append(X_16:bat[:str], "timestamp":str);
    X_25:bat[:int] := bat.append(X_17:bat[:int], 7:int);
    X_27:bat[:int] := bat.append(X_19:bat[:int], 0:int);
    sql.resultSet(X_20:bat[:str], X_22:bat[:str], X_23:bat[:str], X_25:bat[:int], X_27:bat[:int], X_11:bat[:timestamp]);
end user.s38_1;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=2 usec 
#emptybind            actions= 0 time=6 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=4 usec 
#constants            actions= 0 time=3 usec 
#commonTerms          actions= 0 time=4 usec 
#projectionpath       actions= 0 time=3 usec 
#reorder              actions= 1 time=19 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=2 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=13 usec 
#total                actions= 1 time=203 usec 
#select * from tmp3RLE;
% sys.tmp3rle,	sys.tmp3rle,	sys.tmp3rle,	sys.tmp3rle # table_name
% i,	b,	f,	t # name
% int,	boolean,	real,	timestamp # type
% 2,	5,	15,	26 # length
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 0,	false,	0.316,	2014-08-23 11:34:54.000000	]
[ 5,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 6,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 7,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 8,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 9,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 10,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 0,	false,	0.316,	2014-08-23 11:34:54.000000	]
[ 5,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 6,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 7,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 8,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 9,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 10,	false,	0.317,	2014-08-23 11:34:54.000000	]
#select cast(sum(i) as bigint) from tmp3RLE;
% sys.L4 # table_name
% L4 # name
% bigint # type
% 3 # length
[ 270	]
#select sum(f) from tmp3RLE;
% sys.L3 # table_name
% L3 # name
% real # type
% 15 # length
[ 27.104	]

# 21:09:37 >  
# 21:09:37 >  "Done."
# 21:09:37 >  

