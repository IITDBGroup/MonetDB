stdout of test 'correlated` in directory 'sql/test/subquery` itself:


# 20:30:33 >  
# 20:30:33 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=37437" "--set" "mapi_usock=/var/tmp/mtest-8372/.s.monetdb.37437" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_subquery" "--set" "embedded_c=true"
# 20:30:33 >  

# MonetDB 5 server v11.34.0 (hg id: 9b9d1f1578b1+)
# This is an unreleased version
# Serving database 'mTests_sql_test_subquery', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2019 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:37437/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8372/.s.monetdb.37437
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 20:30:33 >  
# 20:30:33 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8372" "--port=37437"
# 20:30:33 >  

#CREATE TABLE integers(i INTEGER);
#INSERT INTO integers VALUES (1), (2), (3), (NULL);
[ 4	]
#SELECT i, (SELECT 42+i1.i) AS j FROM integers i1 ORDER BY i;
% sys.i1,	sys.L3 # table_name
% i,	j # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	43	]
[ 2,	44	]
[ 3,	45	]
#SELECT i FROM integers i1 ORDER BY (SELECT 100-i1.i); -- NULL, 3, 2, 1
% sys.i1 # table_name
% i # name
% int # type
% 1 # length
[ NULL	]
[ 3	]
[ 2	]
[ 1	]
#SELECT i, (SELECT i FROM integers WHERE 1=0 AND i1.i=i) AS j FROM integers i1 ORDER BY i;
% sys.i1,	.L5 # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	NULL	]
[ 3,	NULL	]
#SELECT i, EXISTS(SELECT i FROM integers WHERE 1=0 AND i1.i=i) AS j FROM integers i1 ORDER BY i;
% sys.i1,	.L5 # table_name
% i,	j # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	NULL	]
[ 3,	NULL	]
#SELECT i, i=ANY(SELECT i FROM integers WHERE 1=0 AND i1.i=i) AS j FROM integers i1 ORDER BY i;
% .i1,	.L4 # table_name
% i,	j # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	NULL	]
[ 3,	NULL	]
#SELECT i, (SELECT 42 WHERE i1.i>2) AS j FROM integers i1 ORDER BY i;
% .i1,	.L5 # table_name
% i,	j # name
% int,	tinyint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	NULL	]
[ 3,	42	]
#SELECT i, (SELECT 42 WHERE i1.i IS NULL) AS j FROM integers i1 ORDER BY i;
% .i1,	.L5 # table_name
% i,	j # name
% int,	tinyint # type
% 1,	2 # length
[ NULL,	42	]
[ 1,	NULL	]
[ 2,	NULL	]
[ 3,	NULL	]
#SELECT i, (SELECT i+i1.i FROM integers WHERE i=1) AS j FROM integers i1 ORDER BY i;
% sys.i1,	.L7 # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	2	]
[ 2,	3	]
[ 3,	4	]
#SELECT i, (SELECT i FROM integers WHERE i=i1.i) AS j FROM integers i1 ORDER BY i;
% sys.i1,	.L5 # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, (SELECT i+1 FROM integers WHERE i=i1.i) AS j FROM integers i1 ORDER BY i;
% sys.i1,	.L6 # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	2	]
[ 2,	3	]
[ 3,	4	]
#SELECT i, (SELECT 42 FROM integers WHERE i=i1.i) AS j FROM integers i1 ORDER BY i;
% sys.i1,	.L6 # table_name
% i,	j # name
% int,	tinyint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	42	]
[ 2,	42	]
[ 3,	42	]
#SELECT i, (SELECT MIN(i)+i1.i FROM integers) FROM integers i1 ORDER BY i;
% .i1,	.L11 # table_name
% i,	L11 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	2	]
[ 2,	3	]
[ 3,	4	]
#SELECT i, (SELECT MIN(i+2*i1.i) FROM integers) FROM integers i1 ORDER BY i;
% sys.i1,	.L7 # table_name
% i,	L7 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	3	]
[ 2,	5	]
[ 3,	7	]
#SELECT i, CAST(SUM(i) AS BIGINT), CAST((SELECT SUM(i)+SUM(i1.i) FROM integers) AS BIGINT) FROM integers i1 GROUP BY i ORDER BY i;
% sys.i1,	sys.L4,	.L16 # table_name
% i,	L4,	L16 # name
% int,	bigint,	bigint # type
% 1,	1,	2 # length
[ NULL,	NULL,	NULL	]
[ 1,	1,	10	]
[ 2,	2,	14	]
[ 3,	3,	18	]
#SELECT i, CAST(SUM(i) AS BIGINT), CAST((SELECT SUM(i)+COUNT(i1.i) FROM integers) AS BIGINT) FROM integers i1 GROUP BY i ORDER BY i;
% sys.i1,	sys.L4,	.L16 # table_name
% i,	L4,	L16 # name
% int,	bigint,	bigint # type
% 1,	1,	2 # length
[ NULL,	NULL,	6	]
[ 1,	1,	10	]
[ 2,	2,	10	]
[ 3,	3,	10	]
#SELECT i, (SELECT COUNT(*) FROM integers i2 WHERE i2.i>i1.i) FROM integers i1 ORDER BY i;
% sys.i1,	.L5 # table_name
% i,	L5 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	0	]
[ 1,	2	]
[ 2,	1	]
[ 3,	0	]
#SELECT i, (SELECT MIN(i+2*i1.i) FROM integers) FROM integers i1 ORDER BY i;
% sys.i1,	.L7 # table_name
% i,	L7 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	3	]
[ 2,	5	]
[ 3,	7	]
#SELECT CAST((SELECT SUM(i1.i)) AS BIGINT) FROM integers i1; -- 6
% sys.L4 # table_name
% L4 # name
% bigint # type
% 1 # length
[ 6	]
#SELECT MIN(i), CAST((SELECT SUM(i1.i)) AS BIGINT) FROM integers i1; -- 1, 6
% sys.L3,	sys.L6 # table_name
% L3,	L6 # name
% int,	bigint # type
% 1,	1 # length
[ 1,	6	]
#SELECT MIN(i), CAST((SELECT SUM(i1.i)) AS BIGINT) FROM integers i1; -- 1, 6
% sys.L3,	sys.L6 # table_name
% L3,	L6 # name
% int,	bigint # type
% 1,	1 # length
[ 1,	6	]
#SELECT CAST((SELECT SUM(i1.i)) AS BIGINT), CAST((SELECT SUM(i1.i)) AS BIGINT) FROM integers i1; -- 6, 6
% sys.L4,	sys.L7 # table_name
% L4,	L7 # name
% bigint,	bigint # type
% 1,	1 # length
[ 6,	6	]
#SELECT CAST(SUM(i) AS BIGINT), CAST(SUM((SELECT i FROM integers WHERE i=i1.i)) AS BIGINT) FROM integers i1; -- 6, 6
% sys.L4,	.L11 # table_name
% L4,	L11 # name
% bigint,	bigint # type
% 1,	1 # length
[ 6,	6	]
#SELECT i, (SELECT MIN(i) FROM integers WHERE i>i1.i) FROM integers i1 ORDER BY i;
% sys.i1,	.L5 # table_name
% i,	L5 # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	2	]
[ 2,	3	]
[ 3,	NULL	]
#SELECT i, (SELECT MIN(i)+i1.i FROM integers WHERE i>i1.i) FROM integers i1 ORDER BY i;
% sys.i1,	.L6 # table_name
% i,	L6 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	3	]
[ 2,	5	]
[ 3,	NULL	]

# 20:30:33 >  
# 20:30:33 >  "Done."
# 20:30:33 >  

