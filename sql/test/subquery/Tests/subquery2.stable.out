stdout of test 'subquery2` in directory 'sql/test/subquery` itself:


# 18:55:45 >  
# 18:55:45 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=39342" "--set" "mapi_usock=/var/tmp/mtest-31262/.s.monetdb.39342" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_subquery" "--set" "embedded_c=true"
# 18:55:45 >  

# MonetDB 5 server v11.34.0 (hg id: 179f82506958+)
# This is an unreleased version
# Serving database 'mTests_sql_test_subquery', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2019 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://da200:39342/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-31262/.s.monetdb.39342
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 18:55:46 >  
# 18:55:46 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-31262" "--port=39342"
# 18:55:46 >  

#CREATE TABLE students(id INTEGER, name VARCHAR(128), major VARCHAR(128), "year" INTEGER);
#CREATE TABLE exams(sid INTEGER, course VARCHAR(128), curriculum VARCHAR(128), grade INTEGER, "year" INTEGER);
#INSERT INTO students VALUES (1, 'Mark', 'CS', 2017);
[ 1	]
#INSERT INTO students VALUES (2, 'Dirk', 'CS', 2017);
[ 1	]
#INSERT INTO exams VALUES (1, 'Database Systems', 'CS', 10, 2015);
[ 1	]
#INSERT INTO exams VALUES (1, 'Graphics', 'CS', 9, 2016);
[ 1	]
#INSERT INTO exams VALUES (2, 'Database Systems', 'CS', 7, 2015);
[ 1	]
#INSERT INTO exams VALUES (2, 'Graphics', 'CS', 7, 2016);
[ 1	]
#SELECT s.name, e.course, e.grade FROM students s, exams e WHERE s.id=e.sid AND e.grade=(SELECT MAX(e2.grade) FROM exams e2 WHERE s.id=e2.sid) ORDER BY name, course;
% sys.s,	sys.e,	sys.e # table_name
% name,	course,	grade # name
% varchar,	varchar,	int # type
% 4,	16,	2 # length
[ "Dirk",	"Database Systems",	7	]
[ "Dirk",	"Graphics",	7	]
[ "Mark",	"Database Systems",	10	]
#SELECT s.name, e.course, e.grade FROM students s, exams e WHERE s.id=e.sid AND (s.major = 'CS' OR s.major = 'Games Eng') AND e.grade <= (SELECT AVG(e2.grade) - 1 FROM exams e2 WHERE s.id=e2.sid OR (e2.curriculum=s.major AND s."year">=e2."year")) ORDER BY name, course;
% sys.s,	sys.e,	sys.e # table_name
% name,	course,	grade # name
% varchar,	varchar,	int # type
% 4,	16,	1 # length
[ "Dirk",	"Database Systems",	7	]
[ "Dirk",	"Graphics",	7	]
#SELECT name, major FROM students s WHERE EXISTS(SELECT * FROM exams e WHERE e.sid=s.id AND grade=10) OR s.name='Dirk' ORDER BY name;
% .s,	.s # table_name
% name,	major # name
% varchar,	varchar # type
% 4,	2 # length
[ "Dirk",	"CS"	]
[ "Mark",	"CS"	]
#drop table students;
#drop table exams;

# 18:55:46 >  
# 18:55:46 >  "Done."
# 18:55:46 >  

