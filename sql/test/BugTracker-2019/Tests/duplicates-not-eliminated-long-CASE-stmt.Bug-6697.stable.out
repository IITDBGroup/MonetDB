stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2019 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.main():void;
    X_1:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= '1999-10-31 09:00:00' and task0.\"sys_created_on\" < '2000-04-02 10:00:00' then task0.\"sys_created_on\" + interval '-28800' second when task0.\"sys_created_on\" >= '2000-04-02 10:00:00' and task0.\"sys_created_on\" < '2000-10-29 09:00:00' then task0.\"sys_created_on\" + interval '-25200' second when task0.\"sys_created_on\" >= '2000-10-29 09:00:00' and task0.\"sys_created_on\" < '2001-04-01 10:00:00' then task0.\"sys_created_on\" + interval '-28800' second when task0.\"sys_created_on\" >= '2001-04-01 10:00:00' and task0.\"sys_created_on\" < '2001-10-28 09:00:00' then task0.\"sys_created_on\" + interval '-25200' second when task0.\"sys_created_on\" >= '2001-10-28 09:00:00' and task0.\"sys_created_on\" < '2002-04-07 10:00:00' then task0.\"sys_created_on\" + interval '-28800' second when task0.\"sys_created_on\" >= '2002-04-07 10:00:00' and task0.\"sys_created_on\" < '2002-10-27 09:00:00' then task0.\"sys
barrier X_1633:bit := language.dataflow();
    X_1471:bat[:str] := bat.new(nil:str);
    X_1477:bat[:int] := bat.new(nil:int);
    X_1475:bat[:int] := bat.new(nil:int);
    X_1474:bat[:str] := bat.new(nil:str);
    X_1473:bat[:str] := bat.new(nil:str);
    X_44:bat[:timestamp] := bat.new(nil:timestamp);
    X_57:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "1999-10-31 09:00:00.000000":timestamp, "2000-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_60:bat[:bit] := batcalc.isnil(X_57:bat[:bit]);
    X_72:bat[:bit] := batcalc.ifthenelse(X_60:bat[:bit], false:bit, X_57:bat[:bit]);
    X_1309:bat[:timestamp] := mal.manifold("mtime":str, "timestamp_add_msec_interval":str, X_44:bat[:timestamp], -28800000:lng);
    X_84:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2000-04-02 10:00:00.000000":timestamp, "2000-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_85:bat[:bit] := batcalc.isnil(X_84:bat[:bit]);
    X_101:bat[:bit] := batcalc.ifthenelse(X_85:bat[:bit], false:bit, X_84:bat[:bit]);
    X_1314:bat[:timestamp] := mal.manifold("mtime":str, "timestamp_add_msec_interval":str, X_44:bat[:timestamp], -25200000:lng);
    X_111:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2000-10-29 09:00:00.000000":timestamp, "2001-04-01 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_112:bat[:bit] := batcalc.isnil(X_111:bat[:bit]);
    X_127:bat[:bit] := batcalc.ifthenelse(X_112:bat[:bit], false:bit, X_111:bat[:bit]);
    X_139:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2001-04-01 10:00:00.000000":timestamp, "2001-10-28 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_142:bat[:bit] := batcalc.isnil(X_139:bat[:bit]);
    X_154:bat[:bit] := batcalc.ifthenelse(X_142:bat[:bit], false:bit, X_139:bat[:bit]);
    X_166:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2001-10-28 09:00:00.000000":timestamp, "2002-04-07 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_167:bat[:bit] := batcalc.isnil(X_166:bat[:bit]);
    X_183:bat[:bit] := batcalc.ifthenelse(X_167:bat[:bit], false:bit, X_166:bat[:bit]);
    X_195:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2002-04-07 10:00:00.000000":timestamp, "2002-10-27 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_196:bat[:bit] := batcalc.isnil(X_195:bat[:bit]);
    X_209:bat[:bit] := batcalc.ifthenelse(X_196:bat[:bit], false:bit, X_195:bat[:bit]);
    X_220:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2002-10-27 09:00:00.000000":timestamp, "2003-04-06 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_223:bat[:bit] := batcalc.isnil(X_220:bat[:bit]);
    X_237:bat[:bit] := batcalc.ifthenelse(X_223:bat[:bit], false:bit, X_220:bat[:bit]);
    X_249:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2003-04-06 10:00:00.000000":timestamp, "2003-10-26 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_250:bat[:bit] := batcalc.isnil(X_249:bat[:bit]);
    X_265:bat[:bit] := batcalc.ifthenelse(X_250:bat[:bit], false:bit, X_249:bat[:bit]);
    X_276:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2003-10-26 09:00:00.000000":timestamp, "2004-04-04 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_277:bat[:bit] := batcalc.isnil(X_276:bat[:bit]);
    X_291:bat[:bit] := batcalc.ifthenelse(X_277:bat[:bit], false:bit, X_276:bat[:bit]);
    X_303:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2004-04-04 10:00:00.000000":timestamp, "2004-10-31 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_306:bat[:bit] := batcalc.isnil(X_303:bat[:bit]);
    X_319:bat[:bit] := batcalc.ifthenelse(X_306:bat[:bit], false:bit, X_303:bat[:bit]);
    X_330:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2004-10-31 09:00:00.000000":timestamp, "2005-04-03 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_331:bat[:bit] := batcalc.isnil(X_330:bat[:bit]);
    X_348:bat[:bit] := batcalc.ifthenelse(X_331:bat[:bit], false:bit, X_330:bat[:bit]);
    X_359:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2005-04-03 10:00:00.000000":timestamp, "2005-10-30 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_360:bat[:bit] := batcalc.isnil(X_359:bat[:bit]);
    X_373:bat[:bit] := batcalc.ifthenelse(X_360:bat[:bit], false:bit, X_359:bat[:bit]);
    X_385:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2005-10-30 09:00:00.000000":timestamp, "2006-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_388:bat[:bit] := batcalc.isnil(X_385:bat[:bit]);
    X_401:bat[:bit] := batcalc.ifthenelse(X_388:bat[:bit], false:bit, X_385:bat[:bit]);
    X_413:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2006-04-02 10:00:00.000000":timestamp, "2006-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_414:bat[:bit] := batcalc.isnil(X_413:bat[:bit]);
    X_430:bat[:bit] := batcalc.ifthenelse(X_414:bat[:bit], false:bit, X_413:bat[:bit]);
    X_440:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2006-10-29 09:00:00.000000":timestamp, "2007-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_441:bat[:bit] := batcalc.isnil(X_440:bat[:bit]);
    X_456:bat[:bit] := batcalc.ifthenelse(X_441:bat[:bit], false:bit, X_440:bat[:bit]);
    X_468:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2007-03-11 10:00:00.000000":timestamp, "2007-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_471:bat[:bit] := batcalc.isnil(X_468:bat[:bit]);
    X_483:bat[:bit] := batcalc.ifthenelse(X_471:bat[:bit], false:bit, X_468:bat[:bit]);
    X_495:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2007-11-04 09:00:00.000000":timestamp, "2008-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_496:bat[:bit] := batcalc.isnil(X_495:bat[:bit]);
    X_512:bat[:bit] := batcalc.ifthenelse(X_496:bat[:bit], false:bit, X_495:bat[:bit]);
    X_524:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2008-03-09 10:00:00.000000":timestamp, "2008-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_525:bat[:bit] := batcalc.isnil(X_524:bat[:bit]);
    X_538:bat[:bit] := batcalc.ifthenelse(X_525:bat[:bit], false:bit, X_524:bat[:bit]);
    X_549:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2008-11-02 09:00:00.000000":timestamp, "2009-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_552:bat[:bit] := batcalc.isnil(X_549:bat[:bit]);
    X_566:bat[:bit] := batcalc.ifthenelse(X_552:bat[:bit], false:bit, X_549:bat[:bit]);
    X_578:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2009-03-08 10:00:00.000000":timestamp, "2009-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_579:bat[:bit] := batcalc.isnil(X_578:bat[:bit]);
    X_594:bat[:bit] := batcalc.ifthenelse(X_579:bat[:bit], false:bit, X_578:bat[:bit]);
    X_605:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2009-11-01 09:00:00.000000":timestamp, "2010-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_606:bat[:bit] := batcalc.isnil(X_605:bat[:bit]);
    X_620:bat[:bit] := batcalc.ifthenelse(X_606:bat[:bit], false:bit, X_605:bat[:bit]);
    X_632:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2010-03-14 10:00:00.000000":timestamp, "2010-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_635:bat[:bit] := batcalc.isnil(X_632:bat[:bit]);
    X_648:bat[:bit] := batcalc.ifthenelse(X_635:bat[:bit], false:bit, X_632:bat[:bit]);
    X_659:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2010-11-07 09:00:00.000000":timestamp, "2011-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_660:bat[:bit] := batcalc.isnil(X_659:bat[:bit]);
    X_677:bat[:bit] := batcalc.ifthenelse(X_660:bat[:bit], false:bit, X_659:bat[:bit]);
    X_688:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2011-03-13 10:00:00.000000":timestamp, "2011-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_689:bat[:bit] := batcalc.isnil(X_688:bat[:bit]);
    X_702:bat[:bit] := batcalc.ifthenelse(X_689:bat[:bit], false:bit, X_688:bat[:bit]);
    X_714:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2011-11-06 09:00:00.000000":timestamp, "2012-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_717:bat[:bit] := batcalc.isnil(X_714:bat[:bit]);
    X_730:bat[:bit] := batcalc.ifthenelse(X_717:bat[:bit], false:bit, X_714:bat[:bit]);
    X_742:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2012-03-11 10:00:00.000000":timestamp, "2012-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_743:bat[:bit] := batcalc.isnil(X_742:bat[:bit]);
    X_759:bat[:bit] := batcalc.ifthenelse(X_743:bat[:bit], false:bit, X_742:bat[:bit]);
    X_769:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2012-11-04 09:00:00.000000":timestamp, "2013-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_770:bat[:bit] := batcalc.isnil(X_769:bat[:bit]);
    X_785:bat[:bit] := batcalc.ifthenelse(X_770:bat[:bit], false:bit, X_769:bat[:bit]);
    X_797:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2013-03-10 10:00:00.000000":timestamp, "2013-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_800:bat[:bit] := batcalc.isnil(X_797:bat[:bit]);
    X_812:bat[:bit] := batcalc.ifthenelse(X_800:bat[:bit], false:bit, X_797:bat[:bit]);
    X_824:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2013-11-03 09:00:00.000000":timestamp, "2014-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_825:bat[:bit] := batcalc.isnil(X_824:bat[:bit]);
    X_841:bat[:bit] := batcalc.ifthenelse(X_825:bat[:bit], false:bit, X_824:bat[:bit]);
    X_853:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2014-03-09 10:00:00.000000":timestamp, "2014-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_854:bat[:bit] := batcalc.isnil(X_853:bat[:bit]);
    X_867:bat[:bit] := batcalc.ifthenelse(X_854:bat[:bit], false:bit, X_853:bat[:bit]);
    X_878:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2014-11-02 09:00:00.000000":timestamp, "2015-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_881:bat[:bit] := batcalc.isnil(X_878:bat[:bit]);
    X_895:bat[:bit] := batcalc.ifthenelse(X_881:bat[:bit], false:bit, X_878:bat[:bit]);
    X_907:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2015-03-08 10:00:00.000000":timestamp, "2015-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_908:bat[:bit] := batcalc.isnil(X_907:bat[:bit]);
    X_923:bat[:bit] := batcalc.ifthenelse(X_908:bat[:bit], false:bit, X_907:bat[:bit]);
    X_934:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2015-11-01 09:00:00.000000":timestamp, "2016-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_935:bat[:bit] := batcalc.isnil(X_934:bat[:bit]);
    X_949:bat[:bit] := batcalc.ifthenelse(X_935:bat[:bit], false:bit, X_934:bat[:bit]);
    X_961:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2016-03-13 10:00:00.000000":timestamp, "2016-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_964:bat[:bit] := batcalc.isnil(X_961:bat[:bit]);
    X_977:bat[:bit] := batcalc.ifthenelse(X_964:bat[:bit], false:bit, X_961:bat[:bit]);
    X_988:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2016-11-06 09:00:00.000000":timestamp, "2017-03-12 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_989:bat[:bit] := batcalc.isnil(X_988:bat[:bit]);
    X_1006:bat[:bit] := batcalc.ifthenelse(X_989:bat[:bit], false:bit, X_988:bat[:bit]);
    X_1017:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1018:bat[:bit] := batcalc.isnil(X_1017:bat[:bit]);
    X_1031:bat[:bit] := batcalc.ifthenelse(X_1018:bat[:bit], false:bit, X_1017:bat[:bit]);
    X_1043:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1046:bat[:bit] := batcalc.isnil(X_1043:bat[:bit]);
    X_1059:bat[:bit] := batcalc.ifthenelse(X_1046:bat[:bit], false:bit, X_1043:bat[:bit]);
    X_1071:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1072:bat[:bit] := batcalc.isnil(X_1071:bat[:bit]);
    X_1088:bat[:bit] := batcalc.ifthenelse(X_1072:bat[:bit], false:bit, X_1071:bat[:bit]);
    X_1098:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2018-11-04 09:00:00.000000":timestamp, "2019-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1099:bat[:bit] := batcalc.isnil(X_1098:bat[:bit]);
    X_1114:bat[:bit] := batcalc.ifthenelse(X_1099:bat[:bit], false:bit, X_1098:bat[:bit]);
    X_1126:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2019-03-10 10:00:00.000000":timestamp, "2019-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1129:bat[:bit] := batcalc.isnil(X_1126:bat[:bit]);
    X_1141:bat[:bit] := batcalc.ifthenelse(X_1129:bat[:bit], false:bit, X_1126:bat[:bit]);
    X_1153:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2019-11-03 09:00:00.000000":timestamp, "2020-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1154:bat[:bit] := batcalc.isnil(X_1153:bat[:bit]);
    X_1170:bat[:bit] := batcalc.ifthenelse(X_1154:bat[:bit], false:bit, X_1153:bat[:bit]);
    X_1182:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2020-03-08 10:00:00.000000":timestamp, "2020-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1183:bat[:bit] := batcalc.isnil(X_1182:bat[:bit]);
    X_1196:bat[:bit] := batcalc.ifthenelse(X_1183:bat[:bit], false:bit, X_1182:bat[:bit]);
    X_1207:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2020-11-01 09:00:00.000000":timestamp, "2021-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1210:bat[:bit] := batcalc.isnil(X_1207:bat[:bit]);
    X_1224:bat[:bit] := batcalc.ifthenelse(X_1210:bat[:bit], false:bit, X_1207:bat[:bit]);
    X_1236:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2021-03-14 10:00:00.000000":timestamp, "2021-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1237:bat[:bit] := batcalc.isnil(X_1236:bat[:bit]);
    X_1252:bat[:bit] := batcalc.ifthenelse(X_1237:bat[:bit], false:bit, X_1236:bat[:bit]);
    X_1263:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2021-11-07 09:00:00.000000":timestamp, "2022-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1264:bat[:bit] := batcalc.isnil(X_1263:bat[:bit]);
    X_1278:bat[:bit] := batcalc.ifthenelse(X_1264:bat[:bit], false:bit, X_1263:bat[:bit]);
    X_1290:bat[:bit] := batcalc.between(X_44:bat[:timestamp], "2022-03-13 10:00:00.000000":timestamp, "2022-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit);
    X_1293:bat[:bit] := batcalc.isnil(X_1290:bat[:bit]);
    X_1306:bat[:bit] := batcalc.ifthenelse(X_1293:bat[:bit], false:bit, X_1290:bat[:bit]);
    X_1415:bat[:timestamp] := batcalc.ifthenelse(X_1306:bat[:bit], X_1314:bat[:timestamp], X_1309:bat[:timestamp]);
    X_1418:bat[:timestamp] := batcalc.ifthenelse(X_1278:bat[:bit], X_1309:bat[:timestamp], X_1415:bat[:timestamp]);
    X_1419:bat[:timestamp] := batcalc.ifthenelse(X_1252:bat[:bit], X_1314:bat[:timestamp], X_1418:bat[:timestamp]);
    X_1420:bat[:timestamp] := batcalc.ifthenelse(X_1224:bat[:bit], X_1309:bat[:timestamp], X_1419:bat[:timestamp]);
    X_1421:bat[:timestamp] := batcalc.ifthenelse(X_1196:bat[:bit], X_1314:bat[:timestamp], X_1420:bat[:timestamp]);
    X_1422:bat[:timestamp] := batcalc.ifthenelse(X_1170:bat[:bit], X_1309:bat[:timestamp], X_1421:bat[:timestamp]);
    X_1423:bat[:timestamp] := batcalc.ifthenelse(X_1141:bat[:bit], X_1314:bat[:timestamp], X_1422:bat[:timestamp]);
    X_1424:bat[:timestamp] := batcalc.ifthenelse(X_1114:bat[:bit], X_1309:bat[:timestamp], X_1423:bat[:timestamp]);
    X_1425:bat[:timestamp] := batcalc.ifthenelse(X_1088:bat[:bit], X_1314:bat[:timestamp], X_1424:bat[:timestamp]);
    X_1426:bat[:timestamp] := batcalc.ifthenelse(X_1059:bat[:bit], X_1309:bat[:timestamp], X_1425:bat[:timestamp]);
    X_1427:bat[:timestamp] := batcalc.ifthenelse(X_1031:bat[:bit], X_1314:bat[:timestamp], X_1426:bat[:timestamp]);
    X_1428:bat[:timestamp] := batcalc.ifthenelse(X_1006:bat[:bit], X_1309:bat[:timestamp], X_1427:bat[:timestamp]);
    X_1429:bat[:timestamp] := batcalc.ifthenelse(X_977:bat[:bit], X_1314:bat[:timestamp], X_1428:bat[:timestamp]);
    X_1430:bat[:timestamp] := batcalc.ifthenelse(X_949:bat[:bit], X_1309:bat[:timestamp], X_1429:bat[:timestamp]);
    X_1431:bat[:timestamp] := batcalc.ifthenelse(X_923:bat[:bit], X_1314:bat[:timestamp], X_1430:bat[:timestamp]);
    X_1432:bat[:timestamp] := batcalc.ifthenelse(X_895:bat[:bit], X_1309:bat[:timestamp], X_1431:bat[:timestamp]);
    X_1433:bat[:timestamp] := batcalc.ifthenelse(X_867:bat[:bit], X_1314:bat[:timestamp], X_1432:bat[:timestamp]);
    X_1434:bat[:timestamp] := batcalc.ifthenelse(X_841:bat[:bit], X_1309:bat[:timestamp], X_1433:bat[:timestamp]);
    X_1435:bat[:timestamp] := batcalc.ifthenelse(X_812:bat[:bit], X_1314:bat[:timestamp], X_1434:bat[:timestamp]);
    X_1436:bat[:timestamp] := batcalc.ifthenelse(X_785:bat[:bit], X_1309:bat[:timestamp], X_1435:bat[:timestamp]);
    X_1437:bat[:timestamp] := batcalc.ifthenelse(X_759:bat[:bit], X_1314:bat[:timestamp], X_1436:bat[:timestamp]);
    X_1438:bat[:timestamp] := batcalc.ifthenelse(X_730:bat[:bit], X_1309:bat[:timestamp], X_1437:bat[:timestamp]);
    X_1439:bat[:timestamp] := batcalc.ifthenelse(X_702:bat[:bit], X_1314:bat[:timestamp], X_1438:bat[:timestamp]);
    X_1440:bat[:timestamp] := batcalc.ifthenelse(X_677:bat[:bit], X_1309:bat[:timestamp], X_1439:bat[:timestamp]);
    X_1441:bat[:timestamp] := batcalc.ifthenelse(X_648:bat[:bit], X_1314:bat[:timestamp], X_1440:bat[:timestamp]);
    X_1442:bat[:timestamp] := batcalc.ifthenelse(X_620:bat[:bit], X_1309:bat[:timestamp], X_1441:bat[:timestamp]);
    X_1443:bat[:timestamp] := batcalc.ifthenelse(X_594:bat[:bit], X_1314:bat[:timestamp], X_1442:bat[:timestamp]);
    X_1444:bat[:timestamp] := batcalc.ifthenelse(X_566:bat[:bit], X_1309:bat[:timestamp], X_1443:bat[:timestamp]);
    X_1445:bat[:timestamp] := batcalc.ifthenelse(X_538:bat[:bit], X_1314:bat[:timestamp], X_1444:bat[:timestamp]);
    X_1446:bat[:timestamp] := batcalc.ifthenelse(X_512:bat[:bit], X_1309:bat[:timestamp], X_1445:bat[:timestamp]);
    X_1447:bat[:timestamp] := batcalc.ifthenelse(X_483:bat[:bit], X_1314:bat[:timestamp], X_1446:bat[:timestamp]);
    X_1448:bat[:timestamp] := batcalc.ifthenelse(X_456:bat[:bit], X_1309:bat[:timestamp], X_1447:bat[:timestamp]);
    X_1451:bat[:timestamp] := batcalc.ifthenelse(X_430:bat[:bit], X_1314:bat[:timestamp], X_1448:bat[:timestamp]);
    X_1452:bat[:timestamp] := batcalc.ifthenelse(X_401:bat[:bit], X_1309:bat[:timestamp], X_1451:bat[:timestamp]);
    X_1453:bat[:timestamp] := batcalc.ifthenelse(X_373:bat[:bit], X_1314:bat[:timestamp], X_1452:bat[:timestamp]);
    X_1454:bat[:timestamp] := batcalc.ifthenelse(X_348:bat[:bit], X_1309:bat[:timestamp], X_1453:bat[:timestamp]);
    X_1455:bat[:timestamp] := batcalc.ifthenelse(X_319:bat[:bit], X_1314:bat[:timestamp], X_1454:bat[:timestamp]);
    X_1456:bat[:timestamp] := batcalc.ifthenelse(X_291:bat[:bit], X_1309:bat[:timestamp], X_1455:bat[:timestamp]);
    X_1457:bat[:timestamp] := batcalc.ifthenelse(X_265:bat[:bit], X_1314:bat[:timestamp], X_1456:bat[:timestamp]);
    X_1458:bat[:timestamp] := batcalc.ifthenelse(X_237:bat[:bit], X_1309:bat[:timestamp], X_1457:bat[:timestamp]);
    X_1459:bat[:timestamp] := batcalc.ifthenelse(X_209:bat[:bit], X_1314:bat[:timestamp], X_1458:bat[:timestamp]);
    X_1460:bat[:timestamp] := batcalc.ifthenelse(X_183:bat[:bit], X_1309:bat[:timestamp], X_1459:bat[:timestamp]);
    X_1461:bat[:timestamp] := batcalc.ifthenelse(X_154:bat[:bit], X_1314:bat[:timestamp], X_1460:bat[:timestamp]);
    X_1462:bat[:timestamp] := batcalc.ifthenelse(X_127:bat[:bit], X_1309:bat[:timestamp], X_1461:bat[:timestamp]);
    X_1463:bat[:timestamp] := batcalc.ifthenelse(X_101:bat[:bit], X_1314:bat[:timestamp], X_1462:bat[:timestamp]);
    X_1464:bat[:timestamp] := batcalc.ifthenelse(X_72:bat[:bit], X_1309:bat[:timestamp], X_1463:bat[:timestamp]);
    X_1467:bat[:str] := mal.manifold("mtime":str, "timestamp_to_str":str, X_1464:bat[:timestamp], "%Y":str);
    X_1478:bat[:str] := bat.append(X_1471:bat[:str], "sys.L2":str);
    X_1480:bat[:str] := bat.append(X_1473:bat[:str], "yearref":str);
    X_1482:bat[:str] := bat.append(X_1474:bat[:str], "clob":str);
    X_1484:bat[:int] := bat.append(X_1475:bat[:int], 0:int);
    X_1486:bat[:int] := bat.append(X_1477:bat[:int], 0:int);
    language.pass(X_57:bat[:bit]);
    language.pass(X_84:bat[:bit]);
    language.pass(X_111:bat[:bit]);
    language.pass(X_139:bat[:bit]);
    language.pass(X_166:bat[:bit]);
    language.pass(X_195:bat[:bit]);
    language.pass(X_220:bat[:bit]);
    language.pass(X_249:bat[:bit]);
    language.pass(X_276:bat[:bit]);
    language.pass(X_303:bat[:bit]);
    language.pass(X_330:bat[:bit]);
    language.pass(X_359:bat[:bit]);
    language.pass(X_385:bat[:bit]);
    language.pass(X_413:bat[:bit]);
    language.pass(X_440:bat[:bit]);
    language.pass(X_468:bat[:bit]);
    language.pass(X_495:bat[:bit]);
    language.pass(X_524:bat[:bit]);
    language.pass(X_549:bat[:bit]);
    language.pass(X_578:bat[:bit]);
    language.pass(X_605:bat[:bit]);
    language.pass(X_632:bat[:bit]);
    language.pass(X_659:bat[:bit]);
    language.pass(X_688:bat[:bit]);
    language.pass(X_714:bat[:bit]);
    language.pass(X_742:bat[:bit]);
    language.pass(X_769:bat[:bit]);
    language.pass(X_797:bat[:bit]);
    language.pass(X_824:bat[:bit]);
    language.pass(X_853:bat[:bit]);
    language.pass(X_878:bat[:bit]);
    language.pass(X_907:bat[:bit]);
    language.pass(X_934:bat[:bit]);
    language.pass(X_961:bat[:bit]);
    language.pass(X_988:bat[:bit]);
    language.pass(X_1017:bat[:bit]);
    language.pass(X_1043:bat[:bit]);
    language.pass(X_1071:bat[:bit]);
    language.pass(X_1098:bat[:bit]);
    language.pass(X_1126:bat[:bit]);
    language.pass(X_1153:bat[:bit]);
    language.pass(X_1182:bat[:bit]);
    language.pass(X_1207:bat[:bit]);
    language.pass(X_1236:bat[:bit]);
    language.pass(X_1263:bat[:bit]);
    language.pass(X_44:bat[:timestamp]);
    language.pass(X_1290:bat[:bit]);
    language.pass(X_1314:bat[:timestamp]);
    language.pass(X_1309:bat[:timestamp]);
exit X_1633:bit;
    sql.resultSet(X_1478:bat[:str], X_1480:bat[:str], X_1482:bat[:str], X_1484:bat[:int], X_1486:bat[:int], X_1467:bat[:str]);
end user.main;
#inline               actions= 0 time=26 usec 
#remap                actions=230 time=417 usec 
#costmodel            actions= 1 time=12 usec 
#coercion             actions=416 time=78 usec 
#aliases              actions=649 time=118 usec 
#evaluate             actions=185 time=356 usec 
#emptybind            actions=11 time=51 usec 
#pushselect           actions= 0 time=18 usec 
#aliases              actions=188 time=68 usec 
#mergetable           actions= 0 time=164 usec 
#deadcode             actions=18 time=48 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

