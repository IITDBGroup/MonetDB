####technical depth####
Check if compressors are always called in tests. Use MOSdestroy trick for that.
Make dictionary variable-sized so it can always compress. We are going to use vheap for this.
dictionary encoding should use the ordered property of its dictionary in the algebraic operators
Test null semantics
mosaic.select (c,nil:any_1, nil:any_1,true,true,(true|false)) is not working correctly: should result in c == nil or c!=nil(anti).
Use bit vectors more aggressively in mosaic_delta --- then resolve test mosaic_delta_timestamp --- and possibly other compression techniques as well.
Somehow force mosaic to only use specified compressions even if inefficient. This poses a design problem for dictionary compression though.
Be sure alignment is correct. Use asserts for this.
Check MOSanalysis and its test.
Fix/check/test MOSlayout.
Add test for float/double
delta compression: check if the hardcoded compression expression are correct. See also (2)
Add asserts on type degeneration for bit => bte daytime => lng timestmap => lng date => int.
Fix the task-factor array.
See if we can re-introduce landmark stuff somehow.
benchmark
Do estimation before mosaic heap creation.That saves a potential heap extend.

####code issues####
Update copyright.
create dedicated type for bitvector internal type which is currently unsignned int. E.g. introduce #define BitVectorChunkType unsigned int.
move mask, bits, framebits from  MosaicHdr to MosaicBlkHeader_frame_t.
mosaic_prefix.c: prefix code does not use macro's!!!!
mosaic_delta.c: improve the macro's: for instance get rid of hardcoded expression arguments in DELTAcompress. (2*)
mosaic_<compression>.c: for type macro's use macro-wised inline functions.
Improve the administration of the various hard coded compression techniques. (2*)
