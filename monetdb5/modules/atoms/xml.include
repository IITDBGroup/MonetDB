{ "xml",
"# This Source Code Form is subject to the terms of the Mozilla Public \n"
"# License, v. 2.0.  If a copy of the MPL was not distributed with this \n"
"# file, You can obtain one at http://mozilla.org/MPL/2.0/. \n"
"# \n"
"# Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V. \n"
"atom xml :str; \n"
"command fromstr() \n"
"address XMLfromString \n"
"comment \"Convert a string to an xml.\"; \n"
"command tostr() \n"
"address XMLtoString \n"
"comment \"Convert xml to string equivalent\"; \n"
"command xml(src:str):xml \n"
"address XMLstr2xml \n"
"comment \"Cast the string to an xml compliant string\"; \n"
"command str(src:xml):str \n"
"address XMLxml2str \n"
"comment \"Cast the string to an xml compliant string\"; \n"
"command text(src:xml):str \n"
"address XMLxmltext \n"
"comment \"Extract text from an xml atom\"; \n"
"command comment(val:str):xml \n"
"address XMLcomment \n"
"comment \"Construct an comment struction \"; \n"
"command parse(doccont:str,val:str,option:str):xml \n"
"address XMLparse \n"
"comment \"Parse the XML document or element string values \"; \n"
"command pi(target:str,val:str):xml \n"
"address XMLpi \n"
"comment \"Construct a processing instruction\"; \n"
"command document(val:str):xml \n"
"address XMLdocument \n"
"comment \"Check the value for compliance as XML document\"; \n"
"command content(val:str):xml \n"
"address XMLcontent \n"
"comment \"Check the value for compliance as content, i.e.  it may contain multiple roots and character data.\"; \n"
"command root(val:xml, version:str, standalone:str):xml \n"
"address XMLroot \n"
"comment \"Construct the root nodes\"; \n"
"command attribute(name:str, val:str):xml \n"
"address XMLattribute \n"
"comment \"Construct an attribute value pair\"; \n"
"command element(name:str, ns:xml, attr:xml, s:xml) :xml \n"
"address XMLelement \n"
"comment \"The basic building block for XML elements are namespaces, attributes and a sequence of xml elements. The name space and the attributes may be left unspecified(=nil:bat).\"; \n"
"command element(name:str, s:xml) :xml \n"
"address XMLelementSmall \n"
"comment \"The basic building block for XML elements are namespaces, attributes and a sequence of xml elements. The name space and the attributes may be left unspecified(=nil:bat).\"; \n"
"command concat(val1:xml, val2:xml):xml \n"
"address XMLconcat \n"
"comment \"Concatenate the xml values\"; \n"
"pattern forest(val:xml...):xml \n"
"address XMLforest \n"
"comment \"Construct an element list\"; \n"
"command isdocument(val:str):bit \n"
"address XMLisdocument \n"
"comment \"Validate the string as a document\"; \n"
"command prelude() :void \n"
"address XMLprelude; \n"
"xml.prelude(); \n"
"module calc; \n"
"command xml(src:str):xml address XMLstr2xml; \n"
"command xml(src:xml):xml address XMLxml2xml; \n"
},
