{ "blob",
"# This Source Code Form is subject to the terms of the Mozilla Public \n"
"# License, v. 2.0.  If a copy of the MPL was not distributed with this \n"
"# file, You can obtain one at http://mozilla.org/MPL/2.0/. \n"
"# \n"
"# Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V. \n"
"module blob; \n"
"atom blob; \n"
"command tostr()   address BLOBtostr; \n"
"command fromstr() address BLOBfromstr; \n"
"command cmp()     address BLOBcmp; \n"
"command hash()    address BLOBhash; \n"
"command null()    address BLOBnull; \n"
"command read()    address BLOBread; \n"
"command write()   address BLOBwrite; \n"
"command put()     address BLOBput; \n"
"command del()     address BLOBdel; \n"
"command length()  address BLOBlength; \n"
"command heap()    address BLOBheap; \n"
"command blob(s:blob):blob \n"
"address BLOBblob_blob \n"
"comment \"Noop routine.\"; \n"
"command blob(s:str):blob \n"
"address BLOBblob_fromstr; \n"
"# @+ string functions \n"
"# Manipulation function to convert strings to blobs. \n"
"# Not to be confused with blob parsing and printing. \n"
"# Note, a function tostring(b:blob):str is not possible since the \n"
"# string would not be guaranteed UTF-8 encoded. \n"
"command toblob(v:str) :blob \n"
"address BLOBtoblob \n"
"comment \"store a string as a blob.\"; \n"
"command nitems(b:blob):int \n"
"address BLOBnitems \n"
"comment \"get the number of bytes in this blob.\"; \n"
"command prelude() :void \n"
"address BLOBprelude; \n"
"blob.prelude(); \n"
"module calc; \n"
"command blob(b:blob):blob address BLOBblob_blob; \n"
"command blob(s:str):blob address BLOBblob_fromstr; \n"
},
