{ "url",
"# This Source Code Form is subject to the terms of the Mozilla Public \n"
"# License, v. 2.0.  If a copy of the MPL was not distributed with this \n"
"# file, You can obtain one at http://mozilla.org/MPL/2.0/. \n"
"# \n"
"# Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V. \n"
"module url; \n"
"atom url:str; \n"
"command url(s:str) :url \n"
"address URLnew \n"
"comment \"Create an URL from a string literal\"; \n"
"command url(s:url) :url \n"
"address URLnoop \n"
"comment \"Create an URL from a string literal\"; \n"
"command calc.url(s:str) :url \n"
"address URLnew \n"
"comment \"Create an URL from a string literal\"; \n"
"command calc.url(s:url) :url \n"
"address URLnoop \n"
"comment \"Create an URL from a string literal\"; \n"
"command getAnchor(u:url) :str \n"
"address URLgetAnchor \n"
"comment \"Extract the URL anchor (reference)\"; \n"
"command getBasename(u:url) :str \n"
"address URLgetBasename \n"
"comment \"Extract the URL base file name\"; \n"
"command getContent(u:url) :str \n"
"address URLgetContent \n"
"comment \"Get the URL resource in a local file\"; \n"
"command getContext(u:url) :str \n"
"address URLgetContext \n"
"comment \"Get the path context of a URL\"; \n"
"command getDomain(u:url) :str \n"
"address URLgetDomain \n"
"comment \"Extract Internet domain from the URL\"; \n"
"command getExtension(u:url) :str \n"
"address URLgetExtension \n"
"comment \"Extract the file extension of the URL\"; \n"
"command getFile(u:url) :str \n"
"address URLgetFile \n"
"comment \"Extract the last file name of the URL\"; \n"
"command getHost(u:url) :str \n"
"address URLgetHost \n"
"comment \"Extract the server name from the URL\"; \n"
"command getPort(u:url) :str \n"
"address URLgetPort \n"
"comment \"Extract the port id from the URL\"; \n"
"command getProtocol(u:url) :str \n"
"address URLgetProtocol \n"
"comment \"Extract the protocol from the URL\"; \n"
"command getQuery(u:url) :str \n"
"address URLgetQuery \n"
"comment \"Extract the query string from the URL\"; \n"
"command getUser(u:url) :str \n"
"address URLgetUser \n"
"comment \"Extract the user identity from the URL\"; \n"
"command getRobotURL(u:url) :str \n"
"address URLgetRobotURL \n"
"comment \"Extract the location of the robot control file\"; \n"
"command isaURL(u:url) :bit \n"
"address URLisaURL \n"
"comment \"Check conformity of the URL syntax\"; \n"
"command new(p:str, h:str, prt:int, f:str) :url \n"
"address URLnew4 \n"
"comment \"Construct URL from protocol, host, port, and file\"; \n"
"command new(prot:str, host:str, fnme:str) :url \n"
"address URLnew3 \n"
"comment \"Construct URL from protocol, host,and file\"; \n"
"command fromstr() \n"
"address URLfromString \n"
"comment \"Convert a string to an url. \"; \n"
"command tostr() \n"
"address URLtoString \n"
"comment \"Convert url to string equivalent\"; \n"
},
