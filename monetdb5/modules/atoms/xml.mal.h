/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "xml", "\natom xml :str;\n\ncommand fromstr()\naddress XMLfromString\ncomment \"Convert a string to an xml.\";\n\ncommand tostr()\naddress XMLtoString\ncomment \"Convert xml to string equivalent\";\n\ncommand xml(src:str):xml\naddress XMLstr2xml\ncomment \"Cast the string to an xml compliant string\";\n\ncommand str(src:xml):str\naddress XMLxml2str\ncomment \"Cast the string to an xml compliant string\";\n\ncommand text(src:xml):str\naddress XMLxmltext\ncomment \"Extract text from an xml atom\";\n\ncommand comment(val:str):xml\naddress XMLcomment\ncomment \"Construct an comment struction \";\n\ncommand parse(doccont:str,val:str,option:str):xml\naddress XMLparse\ncomment \"Parse the XML document or element string values \";\n\ncommand pi(target:str,val:str):xml\naddress XMLpi\ncomment \"Construct a processing instruction\";\n\ncommand document(val:str):xml\naddress XMLdocument\ncomment \"Check the value for compliance as XML document\";\n\ncommand content(val:str):xml\naddress XMLcontent\ncomment \"Check the value for compliance as content, i.e.  it may contain multiple roots and character data.\";\n\ncommand root(val:xml, version:str, standalone:str):xml\naddress XMLroot\ncomment \"Construct the root nodes\";\n\ncommand attribute(name:str, val:str):xml\naddress XMLattribute\ncomment \"Construct an attribute value pair\";\n\ncommand element(name:str, ns:xml, attr:xml, s:xml) :xml\naddress XMLelement\ncomment \"The basic building block for XML elements are namespaces, attributes and a sequence of xml elements. The name space and the attributes may be left unspecified(=nil:bat).\";\n\ncommand element(name:str, s:xml) :xml\naddress XMLelementSmall\ncomment \"The basic building block for XML elements are namespaces, attributes and a sequence of xml elements. The name space and the attributes may be left unspecified(=nil:bat).\";\n\ncommand concat(val1:xml, val2:xml):xml\naddress XMLconcat\ncomment \"Concatenate the xml values\";\n\npattern forest(val:xml...):xml\naddress XMLforest\ncomment \"Construct an element list\";\n\ncommand isdocument(val:str):bit\naddress XMLisdocument\ncomment \"Validate the string as a document\";\n\ncommand prelude() :void\naddress XMLprelude;\n\nxml.prelude();\n\nmodule calc;\ncommand xml(src:str):xml address XMLstr2xml;\ncommand xml(src:xml):xml address XMLxml2xml;\n\n" }, 
