/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "str", "\nmodule str;\n\ncommand str(s:str):str\naddress STRtostr\n;\ncommand string(s:str,offset:int) :str\naddress STRTail\n;\ncommand string(s:str,offset:int,count:int):str\naddress STRSubString\n;\ncommand +( l:str, r:str) :str\naddress STRConcat\n;\n\ncommand length( s:str ) :int\naddress STRLength\n;\n\ncommand nbytes( s:str ) :int\naddress STRBytes\n;\n\ncommand unicodeAt(s:str, index:int) :int\naddress STRWChrAt\n;\ncommand unicode(wchar:int) :str\naddress STRFromWChr\n;\n\ncommand startsWith(s:str,prefix:str):bit\naddress STRPrefix\n;\ncommand endsWith( s:str, suffix:str ) :bit\naddress STRSuffix\n;\n\ncommand toLower( s:str ) :str\naddress STRLower\n;\ncommand toUpper( s:str ) :str\naddress STRUpper\n;\n\ncommand search( s:str, c:str ) :int\naddress STRstrSearch\n;\ncommand r_search( s:str, c:str ) :int\naddress STRReverseStrSearch\n;\n\ncommand splitpart( s:str, needle:str, field:int ) :str\naddress STRsplitpart\n;\n\ncommand trim( s:str ) :str\naddress STRStrip\n;\ncommand ltrim( s:str ) :str\naddress STRLtrim\n;\ncommand rtrim( s:str ) :str\naddress STRRtrim\n;\n\ncommand trim( s:str, s2:str ) :str\naddress STRStrip2\n;\ncommand ltrim( s:str, s2:str ) :str\naddress STRLtrim2\n;\ncommand rtrim( s:str, s2:str ) :str\naddress STRRtrim2\n;\n\ncommand lpad( s:str, len:int ) :str\naddress STRLpad\n;\ncommand rpad( s:str, len:int ) :str\naddress STRRpad\n;\n\ncommand lpad( s:str, len:int, s2:str ) :str\naddress STRLpad2\n;\ncommand rpad( s:str, len:int, s2:str ) :str\naddress STRRpad2\n;\n\ncommand substitute(s:str,src:str,dst:str,rep:bit) :str\naddress STRSubstitute\n;\n\ncommand like(s:str,pat:str):bit\naddress STRlikewrap2\n;\ncommand like(s:str,pat:str,esc:str):bit\naddress STRlikewrap\n;\n\ncommand ascii(s:str):int\naddress STRascii\n;\n\ncommand substring(s:str, start:int):str\naddress STRsubstringTail\n;\n\ncommand substring(s:str, start:int, len:int):str\naddress STRsubstring\n;\n\ncommand prefix(s:str,l:int):str\naddress STRprefix\n;\ncommand suffix(s:str,l:int):str\naddress STRsuffix\n;\n\ncommand stringleft(s:str,l:int):str\naddress STRprefix;\ncommand stringright(s:str,l:int):str\naddress STRsuffix;\n\ncommand locate(s1:str,s2:str):int\naddress STRlocate\n;\n\ncommand locate(s1:str,s2:str,start:int):int\naddress STRlocate2\n;\n\ncommand insert(s:str,start:int,l:int,s2:str):str\naddress STRinsert\n;\n\ncommand replace(s:str,pat:str,s2:str):str\naddress STRreplace\n;\n\ncommand repeat(s2:str,c:int):str\naddress STRrepeat;\n\ncommand space(l:int):str\naddress STRspace;\n\ncommand STRprelude() :void\naddress strPrelude;\n\ncommand STRepilogue() :void\naddress strEpilogue;\n\nstr.STRprelude();\t" }, 
