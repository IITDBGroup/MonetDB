/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "inet", "\natom inet:lng;\n\ncommand null()\naddress INETnull;\ncommand cmp()\naddress INETcompare;\ncommand fromstr()\naddress INETfromString\ncomment \"Convert a string to an inet\";\ncommand tostr()\naddress INETtoString\ncomment \"Convert inet to string equivalent\";\ncommand new(s:str):inet\naddress INETnew\ncomment \"Create an inet from a string literal\";\ncommand isnil(v:inet):bit\naddress INET_isnil\ncomment \"Nil test for inet value\";\ncommand =(v:inet,w:inet):bit\naddress INET_comp_EQ\ncomment \"Equality of two inets\";\ncommand !=(v:inet,w:inet):bit\naddress INET_comp_NEQ\ncomment \"Inequality of two inets\";\ncommand <(v:inet,w:inet):bit\naddress INET_comp_LT\ncomment \"Whether v is less than w\";\ncommand >(v:inet,w:inet):bit\naddress INET_comp_GT\ncomment \"Whether v is greater than w\";\ncommand <=(v:inet,w:inet):bit\naddress INET_comp_LE\ncomment \"Whether v is less than or equal to w\";\ncommand >=(v:inet,w:inet):bit\naddress INET_comp_GE\ncomment \"Whether v is equal to or greater than w\";\ncommand <<(v:inet,w:inet):bit\naddress INET_comp_CW\ncomment \"Whether v is contained within w\";\ncommand <<=(v:inet,w:inet):bit\naddress INET_comp_CWE\ncomment \"Whether v is contained within or is equal to w\";\ncommand >>(v:inet,w:inet):bit\naddress INET_comp_CS\ncomment \"Whether v contains w\";\ncommand >>=(v:inet,w:inet):bit\naddress INET_comp_CSE\ncomment \"Whether v contains or is equal to w\";\ncommand broadcast(:inet):inet\naddress INETbroadcast\ncomment \"Returns the broadcast address for network\";\ncommand host(:inet):str\naddress INEThost\ncomment \"Extract IP address as text\";\ncommand masklen(:inet):int\naddress INETmasklen\ncomment \"Extract netmask length\";\ncommand setmasklen(:inet,:int):inet\naddress INETsetmasklen\ncomment \"Set netmask length for inet value\";\ncommand netmask(:inet):inet\naddress INETnetmask\ncomment \"Construct netmask for network\";\ncommand hostmask(:inet):inet\naddress INEThostmask\ncomment \"Construct host mask for network\";\ncommand network(:inet):inet\naddress INETnetwork\ncomment \"Extract network part of address\";\ncommand text(:inet):str\naddress INETtext\ncomment \"Extract IP address and netmask length as text\";\ncommand abbrev(:inet):str\naddress INETabbrev\ncomment \"Abbreviated display format as text\";\n\nmodule calc;\n\ncommand inet(s:inet):inet\naddress INET_inet\ncomment \"Convert a inet to an inet\";\n\ncommand inet(s:str):inet\naddress INET_fromstr\ncomment \"Convert a string to an inet\";\n\ncommand ==(v:inet,w:inet):bit\naddress INET_comp_EQ\ncomment \"Equality of two inets\";\n\ncommand !=(v:inet,w:inet):bit\naddress INET_comp_NEQ\ncomment \"Inequality of two inets\";\n\ncommand <(v:inet,w:inet):bit\naddress INET_comp_LT\ncomment \"Whether v is less than w\";\n\ncommand >(v:inet,w:inet):bit\naddress INET_comp_GT\ncomment \"Whether v is greater than w\";\n\ncommand <=(v:inet,w:inet):bit\naddress INET_comp_LE\ncomment \"Whether v is less than or equal to w\";\n\ncommand >=(v:inet,w:inet):bit\naddress INET_comp_GE\ncomment \"Whether v is equal to or greater than w\";" }, 
