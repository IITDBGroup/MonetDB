/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "mtime", "\natom date :int;\ncommand date(s:date):date\naddress MTIMEdate_date\n;\n\ncommand fromstr()\naddress date_fromstr;\ncommand tostr()\naddress date_tostr;\n\n\npattern ==(v:date,w:date):bit\naddress CMDvarEQ\n;\npattern ==(v:date,w:date,nil_matches:bit):bit\naddress CMDvarEQ\n;\npattern !=(v:date,w:date):bit\naddress CMDvarNE\n;\npattern !=(v:date,w:date,nil_matches:bit):bit\naddress CMDvarNE\n;\npattern <(v:date,w:date):bit\naddress CMDvarLT\n;\npattern <=(v:date,w:date):bit\naddress CMDvarLE\n;\npattern >(v:date,w:date):bit\naddress CMDvarGT\n;\npattern >=(v:date,w:date):bit\naddress CMDvarGE\n;\npattern isnil(v:date):bit\naddress CMDvarISNIL\n;\n\nmodule mtime;\npattern calc.==(v:date,w:date):bit\naddress CMDvarEQ\n;\npattern calc.==(v:date,w:date,nil_matches:bit):bit\naddress CMDvarEQ\n;\npattern calc.!=(v:date,w:date):bit\naddress CMDvarNE\n;\npattern calc.!=(v:date,w:date,nil_matches:bit):bit\naddress CMDvarNE\n;\npattern calc.<(v:date,w:date):bit\naddress CMDvarLT\n;\npattern calc.<=(v:date,w:date):bit\naddress CMDvarLE\n;\npattern calc.>(v:date,w:date):bit\naddress CMDvarGT\n;\npattern calc.>=(v:date,w:date):bit\naddress CMDvarGE\n;\n\n\n\natom daytime :int;\ncommand fromstr()\naddress daytime_tz_fromstr;\ncommand tostr()\naddress daytime_tostr;\n\n\npattern ==(v:daytime,w:daytime):bit\naddress CMDvarEQ\n;\npattern ==(v:daytime,w:daytime,nil_matches:bit):bit\naddress CMDvarEQ\n;\npattern !=(v:daytime,w:daytime):bit\naddress CMDvarNE\n;\npattern !=(v:daytime,w:daytime,nil_matches:bit):bit\naddress CMDvarNE\n;\npattern <(v:daytime,w:daytime):bit\naddress CMDvarLT\n;\npattern <=(v:daytime,w:daytime):bit\naddress CMDvarLE\n;\npattern >(v:daytime,w:daytime):bit\naddress CMDvarGT\n;\npattern >=(v:daytime,w:daytime):bit\naddress CMDvarGE\n;\npattern isnil(v:daytime):bit\naddress CMDvarISNIL\n;\n\nmodule mtime;\npattern calc.==(v:daytime,w:daytime):bit\naddress CMDvarEQ\n;\npattern calc.==(v:daytime,w:daytime,nil_matches:bit):bit\naddress CMDvarEQ\n;\npattern calc.!=(v:daytime,w:daytime):bit\naddress CMDvarNE\n;\npattern calc.!=(v:daytime,w:daytime,nil_matches:bit):bit\naddress CMDvarNE\n;\npattern calc.<(v:daytime,w:daytime):bit\naddress CMDvarLT\n;\npattern calc.<=(v:daytime,w:daytime):bit\naddress CMDvarLE\n;\npattern calc.>(v:daytime,w:daytime):bit\naddress CMDvarGT\n;\npattern calc.>=(v:daytime,w:daytime):bit\naddress CMDvarGE\n;\n\n\n\n\natom timestamp :lng;\ncommand fromstr()\naddress timestamp_fromstr;\n\ncommand tostr()\naddress timestamp_tostr;\n\nunsafe command unix_epoch():timestamp\naddress MTIMEunix_epoch\n;\nunsafe command epoch():timestamp\naddress MTIMEcurrent_timestamp\n;\n\ncommand epoch(t:timestamp):int\naddress MTIMEepoch2int\n;\n\ncommand epoch(t:int):timestamp\naddress MTIMEtimestamp\n;\ncommand epoch(t:lng):timestamp\naddress MTIMEtimestamplng\n;\n\n\npattern ==(v:timestamp,w:timestamp):bit\naddress CMDvarEQ\n;\npattern ==(v:timestamp,w:timestamp,nil_matches:bit):bit\naddress CMDvarEQ\n;\npattern !=(v:timestamp,w:timestamp):bit\naddress CMDvarNE\n;\npattern !=(v:timestamp,w:timestamp,nil_matches:bit):bit\naddress CMDvarNE\n;\npattern <(v:timestamp,w:timestamp):bit\naddress CMDvarLT\n;\npattern <=(v:timestamp,w:timestamp):bit\naddress CMDvarLE\n;\npattern >(v:timestamp,w:timestamp):bit\naddress CMDvarGT\n;\npattern >=(v:timestamp,w:timestamp):bit\naddress CMDvarGE\n;\npattern isnil(v:timestamp):bit\naddress CMDvarISNIL\n;\n\nmodule mtime;\npattern calc.==(v:timestamp,w:timestamp):bit\naddress CMDvarEQ\n;\npattern calc.==(v:timestamp,w:timestamp,nil_matches:bit):bit\naddress CMDvarEQ\n;\npattern calc.!=(v:timestamp,w:timestamp):bit\naddress CMDvarNE\n;\npattern calc.!=(v:timestamp,w:timestamp,nil_matches:bit):bit\naddress CMDvarNE\n;\npattern calc.<(v:timestamp,w:timestamp):bit\naddress CMDvarLT\n;\npattern calc.<=(v:timestamp,w:timestamp):bit\naddress CMDvarLE\n;\npattern calc.>(v:timestamp,w:timestamp):bit\naddress CMDvarGT\n;\npattern calc.>=(v:timestamp,w:timestamp):bit\naddress CMDvarGE\n;\n\n\n\n\natom timezone :lng;\ncommand fromstr()\naddress tzone_fromstr;\ncommand tostr()\naddress tzone_tostr;\ncommand str(z:timezone):str\naddress MTIMEtzone_tostr;\ncommand timestamp(s:str):timestamp\naddress MTIMEtimestamp_fromstr;\ncommand timestamp(secs:int):timestamp\naddress MTIMEtimestamp\n;\n\natom zrule :int;\ncommand fromstr()\naddress rule_fromstr;\ncommand tostr()\naddress rule_tostr;\ncommand define(m:int,d:int,w:int,h:int,min:int):zrule\naddress MTIMEruleDef0\n;\ncommand define(m:int,d:str,w:int,h:int,min:int):zrule\naddress MTIMEruleDef1\n;\ncommand define(m:int,d:str,w:int,min:int):zrule\naddress MTIMEruleDef2\n;\n\n\nmodule batmtime;\nmodule mtime;\ncommand date_sub_sec_interval(t:date,s:int):date\naddress MTIMEdate_sub_sec_interval_wrap\n;\ncommand date_sub_msec_interval(t:date,ms:lng):date\naddress MTIMEdate_sub_msec_interval_lng_wrap;\n\ncommand date_add_sec_interval(t:date,s:int):date\naddress MTIMEdate_add_sec_interval_wrap\n;\ncommand date_add_msec_interval(t:date,ms:lng):date\naddress MTIMEdate_add_msec_interval_lng_wrap;\n\ncommand timestamp_sub_msec_interval(t:timestamp,ms:lng):timestamp\naddress MTIMEtimestamp_sub_msec_interval_lng_wrap;\ncommand timestamp_add_msec_interval(t:timestamp,ms:lng):timestamp\naddress MTIMEtimestamp_add;\n\ncommand timestamp_sub_month_interval(t:timestamp,s:int):timestamp\naddress MTIMEtimestamp_sub_month_interval_wrap\n;\n\ncommand timestamp_sub_month_interval(t:timestamp,s:lng):timestamp\naddress MTIMEtimestamp_sub_month_interval_lng_wrap\n;\n\ncommand timestamp_add_month_interval(t:timestamp,s:int):timestamp\naddress MTIMEtimestamp_add_month_interval_wrap\n;\n\ncommand timestamp_add_month_interval(t:timestamp,s:lng):timestamp\naddress MTIMEtimestamp_add_month_interval_lng_wrap\n;\n\ncommand timestamp(t:timestamp):timestamp\naddress MTIMEtimestamp2timestamp;\n\ncommand time_sub_msec_interval(t:daytime,ms:lng):daytime\naddress MTIMEtime_sub_msec_interval_wrap\n;\ncommand time_add_msec_interval(t:daytime,ms:lng):daytime\naddress MTIMEtime_add_msec_interval_wrap\n;\n\ncommand diff(val1:daytime, val2:daytime) :lng\naddress MTIMEdaytime_diff\n;\n\ncommand date_add_month_interval(t:date,s:int):date\naddress MTIMEdate_addmonths\n;\n\ncommand date_sub_month_interval(t:date,s:int):date\naddress MTIMEdate_submonths\n;\n\ncommand date(:date):date\naddress MTIMEdate2date\n;\ncommand date(:void):date\naddress MTIMEnil2date\n;\n\ncommand local_timezone():lng\naddress MTIMElocal_timezone\n;\n\ncommand timezone_local(t:timezone):void\naddress MTIMEtzone_set_local\n;\ncommand timezone_local() :timezone\naddress MTIMEtzone_get_local\n;\n\ncommand date(s:str):date\naddress MTIMEdate_fromstr\n;\n\ncommand date(yr:int, mo:int, day:int):date\naddress MTIMEdate_create\n;\n\ncommand daytime(s:str):daytime\naddress MTIMEdaytime_fromstr\n;\ncommand daytime(:daytime):daytime\naddress MTIMEdaytime2daytime;\ncommand daytime(:lng):daytime\naddress MTIMEsecs2daytime;\n\ncommand daytime(h:int,m:int,s:int,mi:int)\n\t\t:daytime\naddress MTIMEdaytime_create\n;\ncommand timestamp(d:date,dt:daytime,t:timezone) :timestamp\naddress MTIMEtimestamp_create\n;\ncommand timestamp(d:date,dt:daytime) :timestamp\naddress MTIMEtimestamp_create_default\n;\ncommand timestamp(d:date) :timestamp\naddress MTIMEtimestamp_create_from_date\n;\n\ncommand rule(s:str):zrule\naddress MTIMErule_fromstr\n;\ncommand rule (mo:int,d:int,wkday:int,mi:int) :zrule\naddress MTIMErule_create\n;\n\ncommand timezone(s:str):timezone\naddress MTIMEtzone_fromstr\n;\ncommand timezone(s:int):timezone\naddress MTIMEtzone_create\n;\ncommand timezone(s:lng):timezone\naddress MTIMEtzone_create_lng\n;\ncommand timezone(mi:int,s:zrule,erule:zrule):timezone\naddress MTIMEtzone_create_dst\n;\n\ncommand year(d:date) :int\naddress MTIMEdate_extract_year\n;\ncommand batmtime.year(d:bat[:date]):bat[:int]\naddress MTIMEdate_extract_year_bulk;\n\ncommand quarter(d:date) :int\naddress MTIMEdate_extract_quarter\n;\ncommand batmtime.quarter(d:bat[:date]):bat[:int]\naddress MTIMEdate_extract_quarter_bulk;\n\ncommand month(d:date) :int\naddress MTIMEdate_extract_month\n;\ncommand batmtime.month(d:bat[:date]):bat[:int]\naddress MTIMEdate_extract_month_bulk;\n\ncommand day(d:date) :int\naddress MTIMEdate_extract_day\n;\ncommand batmtime.day(d:bat[:date]):bat[:int]\naddress MTIMEdate_extract_day_bulk;\n\ncommand hours(h:daytime) :int\naddress MTIMEdaytime_extract_hours\n;\ncommand batmtime.hours(d:bat[:daytime]):bat[:int]\naddress MTIMEdaytime_extract_hours_bulk;\n\ncommand minutes(d:daytime) :int\naddress MTIMEdaytime_extract_minutes\n;\ncommand batmtime.minutes(d:bat[:daytime]):bat[:int]\naddress MTIMEdaytime_extract_minutes_bulk;\n\ncommand seconds(d:daytime) :int\naddress MTIMEdaytime_extract_seconds\n;\ncommand batmtime.seconds(d:bat[:daytime]):bat[:int]\naddress MTIMEdaytime_extract_seconds_bulk;\n\ncommand sql_seconds(d:daytime) :int\naddress MTIMEdaytime_extract_sql_seconds\n;\ncommand batmtime.sql_seconds(d:bat[:daytime]):bat[:int]\naddress MTIMEdaytime_extract_sql_seconds_bulk;\n\ncommand milliseconds(d:daytime) :int\naddress MTIMEdaytime_extract_milliseconds\n;\ncommand batmtime.milliseconds(d:bat[:daytime]):bat[:int]\naddress MTIMEdaytime_extract_milliseconds_bulk;\n\ncommand daytime(t:timestamp) :daytime\naddress MTIMEtimestamp_extract_daytime_default\n;\ncommand daytime(t:timestamp, v:timezone) :daytime\naddress MTIMEtimestamp_extract_daytime\n;\n\ncommand date(t:timestamp) :date\naddress MTIMEtimestamp_extract_date_default\n;\ncommand date(t:timestamp,v:timezone) :date\naddress MTIMEtimestamp_extract_date\n;\n\ncommand setTimezone(name:str):timezone\naddress MTIMEtimezone\n;\n\ncommand start_dst(t:timezone) :zrule\naddress MTIMEtzone_extract_start\n;\ncommand end_dst(t:timezone) :zrule\naddress MTIMEtzone_extract_end\n;\ncommand minutes(t:timezone) :int\naddress MTIMEtzone_extract_minutes\n;\n\ncommand month(t:zrule) :int\naddress MTIMErule_extract_month\n;\ncommand day(t:zrule) :int\naddress MTIMErule_extract_day\n;\ncommand weekday(t:zrule) :int\naddress MTIMErule_extract_weekday\n;\ncommand minutes(t:zrule) :int\naddress MTIMErule_extract_minutes\n;\n\ncommand addyears(value:date, years:int) :date\naddress MTIMEdate_addyears\n;\ncommand addmonths(value:date, months:int) :date\naddress MTIMEdate_addmonths\n;\ncommand adddays(value:date, days:int) :date\naddress MTIMEdate_adddays\n;\ncommand diff(val1:date, val2:date) :int\naddress MTIMEdate_diff\n;\n\ncommand dayofyear(d:date) :int\naddress MTIMEdate_extract_dayofyear\n;\ncommand weekofyear(d:date) :int\naddress MTIMEdate_extract_weekofyear\n;\ncommand week(d:date) :int\naddress MTIMEdate_extract_weekofyear\n;\ncommand dayofweek(d:date) :int\naddress MTIMEdate_extract_dayofweek\n;\n\ncommand add(v:timestamp, msecs:lng) :timestamp\naddress MTIMEtimestamp_add\n;\ncommand diff(val1:timestamp, val2:timestamp) :lng\naddress MTIMEtimestamp_diff\n;\n\ncommand dst(t:timestamp,v:timezone) :bit\naddress MTIMEtimestamp_inside_dst\n;\n\ncommand compute(r:zrule, year:int) :date\naddress MTIMEcompute_rule_foryear\n;\n\ncommand monthnum(month:str) :int\naddress MTIMEmonth_from_str\n;\ncommand monthname(month:int) :str\naddress MTIMEmonth_to_str\n;\ncommand daynum(day:str) :int\naddress MTIMEday_from_str\n;\ncommand dayname(day:int) :str\naddress MTIMEday_to_str\n;\n\ncommand time_synonyms(allow:bit)\naddress MTIMEsynonyms\n;\n\ncommand str_to_date(s:str, format:str) :date\naddress MTIMEstr_to_date\n;\n\ncommand date_to_str(d:date, format:str) :str\naddress MTIMEdate_to_str\n;\n\ncommand str_to_time(s:str, format:str) :daytime\naddress MTIMEstr_to_time\n;\n\ncommand time_to_str(d:daytime, format:str) :str\naddress MTIMEtime_to_str\n;\n\ncommand str_to_timestamp(s:str, format:str) :timestamp\naddress MTIMEstr_to_timestamp\n;\n\ncommand timestamp_to_str(d:timestamp, format:str) :str\naddress MTIMEtimestamp_to_str\n;\n\n\ncommand msecs(d:int,h:int,m:int,s:int,ms:int):lng\naddress MTIMEmsecs\n;\n\ncommand daytime(h:int):daytime\naddress MTIMEdaytime1\n;\ncommand daytime(h:int,m:int):daytime\naddress MTIMEdaytime2\n;\ncommand daytime(h:int,m:int,s:int):daytime\naddress MTIMEdaytime3\n;\n\ncommand current_timestamp():timestamp\naddress MTIMEcurrent_timestamp;\ncommand current_date():date\naddress MTIMEcurrent_date;\ncommand current_time():daytime\naddress MTIMEcurrent_time;\n\ncommand year(t:timestamp):int\naddress MTIMEtimestamp_year;\ncommand quarter(t:timestamp):int\naddress MTIMEtimestamp_quarter;\ncommand month(t:timestamp):int\naddress MTIMEtimestamp_month;\ncommand day(t:timestamp):int\naddress MTIMEtimestamp_day;\ncommand hours(t:timestamp):int\naddress MTIMEtimestamp_hours;\ncommand minutes(t:timestamp):int\naddress MTIMEtimestamp_minutes;\ncommand seconds(t:timestamp):int\naddress MTIMEtimestamp_seconds;\ncommand sql_seconds(t:timestamp):int\naddress MTIMEtimestamp_sql_seconds;\ncommand milliseconds(t:timestamp):int\naddress MTIMEtimestamp_milliseconds;\n\ncommand year(months:int):int\naddress MTIMEsql_year;\ncommand month(months:int):int\naddress MTIMEsql_month;\ncommand day(msecs:lng):lng\naddress MTIMEsql_day;\ncommand hours(msecs:lng):int\naddress MTIMEsql_hours;\ncommand minutes(msecs:lng):int\naddress MTIMEsql_minutes;\ncommand seconds(msecs:lng):int\naddress MTIMEsql_seconds;\n\nunsafe command msec():lng\naddress MTIMEmsec\n;\n\ncommand prelude() :void\naddress MTIMEprelude;\n\ncommand epilogue() :void\naddress MTIMEepilogue;\n\nmtime.prelude();\n\nmodule calc;\n\ncommand date(s:str):date address MTIMEdate_fromstr;\ncommand date(d:date):date address MTIMEdate_date;\ncommand date(t:timestamp) :date address MTIMEtimestamp_extract_date_default;\n\ncommand timestamp(s:str):timestamp address MTIMEtimestamp_fromstr;\ncommand timestamp(t:timestamp):timestamp address MTIMEtimestamp2timestamp;\ncommand timestamp(d:date) :timestamp address MTIMEtimestamp_create_from_date;\ncommand timestamp(secs:int):timestamp address MTIMEtimestamp;\ncommand timestamp(msecs:lng):timestamp address MTIMEtimestamp_lng;\n\ncommand daytime(s:str):daytime address MTIMEdaytime_fromstr;\ncommand daytime(d:daytime):daytime address MTIMEdaytime2daytime;\ncommand daytime(s:lng):daytime address MTIMEsecs2daytime;\ncommand daytime(t:timestamp) :daytime address MTIMEtimestamp_extract_daytime_default;\n\nmodule batcalc;\n\ncommand date(t:bat[:timestamp]) :bat[:date]\naddress MTIMEtimestamp_extract_date_default_bulk;\n\ncommand timestamp(d:bat[:date]) :bat[:timestamp]\naddress MTIMEtimestamp_create_from_date_bulk;\ncommand timestamp(secs:bat[:int]) :bat[:timestamp]\naddress MTIMEtimestamp_bulk;\ncommand timestamp(msecs:bat[:lng]) :bat[:timestamp]\naddress MTIMEtimestamp_lng_bulk;\n\ncommand daytime(s:bat[:lng]) :bat[:daytime]\naddress MTIMEsecs2daytime_bulk;\ncommand daytime(t:bat[:timestamp]) :bat[:daytime]\naddress MTIMEtimestamp_extract_daytime_default_bulk;" }, 
