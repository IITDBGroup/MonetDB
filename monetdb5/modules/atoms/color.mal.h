/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "color", "\nmodule color;\n\natom color:int;\n\ncommand tostr() address color_tostr;\ncommand fromstr() address color_fromstr;\n\ncommand str(s:color):str\naddress CLRstr\ncomment \"Converts color to string \";\n\ncommand color(s:str):color\naddress CLRcolor\ncomment \"Converts string to color\";\n\ncommand rgb(r:int, g:int, b:int):color\naddress CLRrgb\ncomment\t\"Converts an RGB triplets to a color atom\";\n\ncommand red  (c:color) :int\naddress CLRred\ncomment\t\"Extracts red component from a color atom\";\n\ncommand green(c:color) :int\naddress CLRgreen\ncomment\t\"Extracts green component from a color atom\";\n\ncommand blue (c:color) :int\naddress CLRblue\ncomment\t\"Extracts blue component from a color atom\";\n\ncommand hue(c:color) :int\naddress CLRhueInt\ncomment\t\"Extracts hue component from a color atom\";\n\ncommand saturation(c:color) :int\naddress CLRsaturationInt\ncomment\t\"Extracts saturation component from a color atom\";\n\ncommand value(c:color) :int\naddress CLRvalueInt\ncomment\t\"Extracts value component from a color atom\";\n\ncommand hsv(h:flt,s:flt, v:flt) :color\naddress CLRhsv\ncomment\t\"Converts an HSV triplets to a color atom\";\n\ncommand hue(c:color) :flt\naddress CLRhue\ncomment\t\"Extracts hue component from a color atom\";\n\ncommand saturation(c:color) :flt\naddress CLRsaturation\ncomment\t\"Extracts saturation component from a color atom\";\n\ncommand value(c:color) :flt\naddress CLRvalue\ncomment\t\"Extracts value component from a color atom\";\n\ncommand ycc(y:int,cr:int,cb:int) :color\naddress CLRycc\ncomment\t\"Converts an YCC triplets to a color atom\";\n\ncommand luminance (c:color) :int\naddress CLRluminance\ncomment\t\"Extracts Y(luminance) component from a color atom\";\n\ncommand cr(c:color) :int\naddress CLRcr\ncomment\t\"Extracts Cr(red color) component from a color atom\";\n\ncommand cb(c:color) :int\naddress CLRcb\ncomment\t\"Extracts Cb(blue color) component from a color atom\";\n" }, 
