/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "batExtensions", "\npattern bat.new(tt:any_1) :bat[:any_1]\naddress CMDBATnew;\npattern bat.new(tt:any_1, size:int) :bat[:any_1]\naddress CMDBATnew;\npattern bat.new(tt:any_1, size:lng, persist:bit) :bat[:any_1]\naddress CMDBATnew;\npattern bat.new(tt:any_1, size:int, persist:bit) :bat[:any_1]\naddress CMDBATnew;\npattern bat.new(tt:any_1, size:lng) :bat[:any_1]\naddress CMDBATnew\ncomment \"Creates a new empty transient BAT, with tail-types as indicated.\";\n\npattern bat.single(val:any_1):bat[:any_1]\naddress CMDBATsingle\ncomment \"Create a BAT with a single elemenet\";\n\npattern bat.partition(b:bat[:any_1]):bat[:any_1]...\naddress CMDBATpartition\ncomment \"Create a serie of slices over the BAT argument. The BUNs are distributed evenly.\";\n\npattern bat.partition(b:bat[:any_1], pieces:int, n:int):bat[:any_1]\naddress CMDBATpartition2\ncomment \"Create the n-th slice over the BAT broken into several pieces.\";\n\ncommand bat.imprints(b:bat[:bte]) :void\naddress CMDBATimprints;\ncommand bat.imprints(b:bat[:sht]) :void\naddress CMDBATimprints;\ncommand bat.imprints(b:bat[:int]) :void\naddress CMDBATimprints;\ncommand bat.imprints(b:bat[:lng]) :void\naddress CMDBATimprints;\ncommand bat.imprints(b:bat[:flt]) :void\naddress CMDBATimprints;\ncommand bat.imprints(b:bat[:dbl]) :void\naddress CMDBATimprints\ncomment \"Check for existence or create an imprint index on the BAT.\";\n\ncommand bat.imprintsize(b:bat[:bte]):lng\naddress CMDBATimprintsize;\ncommand bat.imprintsize(b:bat[:sht]):lng\naddress CMDBATimprintsize;\ncommand bat.imprintsize(b:bat[:int]):lng\naddress CMDBATimprintsize;\ncommand bat.imprintsize(b:bat[:lng]):lng\naddress CMDBATimprintsize;\ncommand bat.imprintsize(b:bat[:flt]):lng\naddress CMDBATimprintsize;\ncommand bat.imprintsize(b:bat[:dbl]):lng\naddress CMDBATimprintsize\ncomment \"Return the storage size of the imprints index structure.\";\n" }, 
