{ "language",
"# This Source Code Form is subject to the terms of the Mozilla Public \n"
"# License, v. 2.0.  If a copy of the MPL was not distributed with this \n"
"# file, You can obtain one at http://mozilla.org/MPL/2.0/. \n"
"# \n"
"# Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V. \n"
"module language; \n"
"pattern call(s:str):void \n"
"address CMDcallString \n"
"comment \"Evaluate a MAL string program.\"; \n"
"pattern call(m:str,f:str):void \n"
"address CMDcallFunction; \n"
"pattern call(s:bat[:str]):void \n"
"address CMDcallBAT \n"
"comment \"Evaluate a program stored in a BAT.\"; \n"
"pattern source(f:str):void \n"
"address CMDevalFile \n"
"comment \"Merge the instructions stored in the file with the current program.\"; \n"
"unsafe command raise(msg:str) :str  \n"
"address CMDraise \n"
"comment \"Raise an exception labeled  \n"
"	with a specific message.\"; \n"
"unsafe command assert(v:bit,term:str):void \n"
"address MALassertBit; \n"
"unsafe command assert(v:sht,term:str):void \n"
"address MALassertSht; \n"
"unsafe command assert(v:int,term:str):void \n"
"address MALassertInt; \n"
"unsafe command assert(v:lng,term:str):void \n"
"address MALassertLng; \n"
"unsafe command assert(v:str,term:str):void \n"
"address MALassertStr; \n"
"unsafe command assert(v:oid,term:str):void \n"
"address MALassertOid; \n"
"unsafe pattern assert(v:any_1,pname:str,oper:str,val:any_2):void \n"
"address MALassertTriple \n"
"comment \"Assertion test.\"; \n"
"pattern dataflow():bit \n"
"address MALstartDataflow \n"
"comment \"The current guarded block is executed using dataflow control. \"; \n"
"pattern sink(v:any...):void \n"
"address MALgarbagesink \n"
"comment \"Variables to be considered together when triggering garbage collection. \n"
"Used in the dataflow blocks to avoid early release of values.\"; \n"
"pattern pass(v:any_1) \n"
"address MALpass \n"
"comment \"Cheap instruction to disgard storage while retaining the dataflow dependency\"; \n"
"pattern block(v:int,w:any...):int \n"
"address deblockdataflow \n"
"comment \"Block on availability of all variables w, and then pass on v\"; \n"
"pattern register(m:str,f:str,code:str,help:str):void \n"
"address CMDregisterFunction \n"
"comment\"Compile the code string to MAL and register it as a function.\"; \n"
},
