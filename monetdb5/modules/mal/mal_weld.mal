# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.  If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 1997 - July 2008 CWI, August 2008 - 2018 MonetDB B.V.

# This file was generated by using the script mal_weld.mal.sh.

module weld;


pattern initstate():ptr
address WeldInitState
comment "Initialize the state structure that is used to build a weld program";

pattern run(wstate:ptr, arg:any...):any...
address WeldRun
comment "Compile and run the Weld program";

pattern algebraprojection(left:bat[:oid], right:bat[:any_1], wstate:ptr):bat[any_1]
address WeldAlgebraProjection
comment "algebra.projection";

pattern algebraselect(b:bat[:any_1], low:any_1, high:any_1, li:bit, hi:bit, anti:bit, wstate:ptr):bat[:oid]
address WeldAlgebraSelect1
comment "algebra.select";

pattern algebraselect(b:bat[:any_1], s:bat[:oid], low:any_1, high:any_1, li:bit, hi:bit, anti:bit, wstate:ptr):bat[:oid]
address WeldAlgebraSelect2
comment "algebra.select";

pattern algebrathetaselect(b:bat[:any_1], val:any_1, op:str, wstate:ptr):bat[:oid]
address WeldAlgebraThetaselect1
comment "algebra.thetaselect";

pattern algebrathetaselect(b:bat[:any_1], s:bat[:oid], val:any_1, op:str, wstate:ptr):bat[:oid]
address WeldAlgebraThetaselect2
comment "algebra.thetaselect";

pattern groupgroup(b:bat[:any_1], wstate:ptr) (groups:bat[:oid], extents:bat[:oid], histo:bat[:lng])
address WeldGroup
comment "group.group";

pattern groupgroup(b:bat[:any_1], g:bat[:oid], wstate:ptr) (groups:bat[:oid], extents:bat[:oid], histo:bat[:lng])
address WeldGroup
comment "group.groupdone";

pattern aggrsubsum(b:bat[:any_1], g:bat[:oid], e:bat[:any_2], skip_nils:bit, abort_on_error:bit, wstate:ptr):bat[:any_3]
address WeldAggrSubSum
comment "aggr.subsum";
pattern aggrsubsum(b:bat[:any_1], g:bat[:oid], e:bat[:any_2], s:bat[:oid], skip_nils:bit, abort_on_error:bit, wstate:ptr):bat[:any_3]
address WeldAggrSubSum
comment "aggr.subsum";

pattern aggrsubprod(b:bat[:any_1], g:bat[:oid], e:bat[:any_2], skip_nils:bit, abort_on_error:bit, wstate:ptr):bat[:any_1]
address WeldAggrSubProd
comment "aggr.subprod";

pattern aggrsubprod(b:bat[:any_1], g:bat[:oid], e:bat[:any_2], s:bat[:oid], skip_nils:bit, abort_on_error:bit, wstate:ptr):bat[:any_1]
address WeldAggrSubProd
comment "aggr.subprod";

pattern aggrsubmin(b:bat[:any_1], g:bat[:oid], e:bat[:any_2], skip_nils:bit, wstate:ptr):bat[:any_1]
address WeldAggrSubMin
comment "aggr.submin";

pattern aggrsubmin(b:bat[:any_1], g:bat[:oid], e:bat[:any_2], s:bat[:oid], skip_nils:bit, wstate:ptr):bat[:any_1]
address WeldAggrSubMin
comment "aggr.submin";

pattern aggrsubmax(b:bat[:any_1], g:bat[:oid], e:bat[:any_2], skip_nils:bit, wstate:ptr):bat[:any_1]
address WeldAggrSubMax
comment "aggr.submax";

pattern aggrsubmax(b:bat[:any_1], g:bat[:oid], e:bat[:any_2], s:bat[:oid], skip_nils:bit, wstate:ptr):bat[:any_1]
address WeldAggrSubMax
comment "aggr.submax";

pattern aggrsubcount(b:bat[:any_1], g:bat[:oid], e:bat[:any_2], skip_nils:bit, wstate:ptr):bat[:lng]
address WeldAggrSubCount
comment "aggr.subcount";

pattern aggrsubcount(b:bat[:any_1], g:bat[:oid], e:bat[:any_2], s:bat[:oid], skip_nils:bit, wstate:ptr):bat[:lng]
address WeldAggrSubCount
comment "aggr.subcount";

pattern sqlprojectdelta(select:bat[:oid], col:bat[:any_3], uid:bat[:oid], uval:bat[:any_3], wstate:ptr):bat[:any_3]
address WeldSqlProjectDelta
comment "sql.projectdelta";

pattern sqlprojectdelta(select:bat[:oid], col:bat[:any_3], uid:bat[:oid], uval:bat[:any_3], ins:bat[:any_3], wstate:ptr):bat[:any_3]
address WeldSqlProjectDelta
comment "sql.projectdelta";

pattern batmtimeyear(d:bat[:date], wstate:ptr):bat[:int]
address WeldBatMtimeYear
comment "batmtime.year";

pattern batmergecand(a:bat[:oid], b:bat[:oid], wstate:ptr):bat[:oid]
address WeldBatMergeCand
comment "bat.mergecand";

pattern batmirror(b:bat[:any_2], wstate:ptr):bat[:oid]
address WeldBatMirror
comment "bat.mirror";

pattern batcalcidentity(b:bat[:any_2], wstate:ptr):bat[:oid] 
address WeldBatcalcIdentity
comment "batcalc.identity";

pattern algebrajoin(l:bat[:any_1], r:bat[:any_1], sl:bat[:oid], sr:bat[:oid], nil_matches:bit, estimate:lng, wstate:ptr) (X_0:bat[:oid], X_1:bat[:oid])
address WeldAlgebraJoin
comment "algebra.join"

pattern algebradifference(l:bat[:any_1], r:bat[:any_1], sl:bat[:oid], sr:bat[:oid], nil_matches:bit, estimate:lng, wstate:ptr):bat[:oid]
address WeldAlgebraDifference
comment "algebra.difference";

pattern algebraintersect(l:bat[:any_1], r:bat[:any_1], sl:bat[:oid], sr:bat[:oid], nil_matches:bit, estimate:lng, wstate:ptr):bat[:oid]
address WeldAlgebraIntersect
comment "algebra.intersect";

pattern batcalcisnil(b:bat[:any], wstate:ptr):bat[:bit]
address WeldBatcalcIsNil
comment "batcalcisnil";
pattern batcalcisnil(b:bat[:any], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcIsNil
comment "batcalcisnil";

pattern batcalcifthenelse(b:bat[:bit], b1:bat[:any_1], b2:bat[:any_1], wstate:ptr):bat[:any_1]
address WeldBatcalcIfThenElse
comment "batcalc.ifthenelse";
pattern batcalcifthenelse(b:bat[:bit], b1:bat[:any_1], v2:any_1, wstate:ptr):bat[:any_1]
address WeldBatcalcIfThenElse
comment "batcalc.ifthenelse";
pattern batcalcifthenelse(b:bat[:bit], v1:any_1, b2:bat[:any_1], wstate:ptr):bat[:any_1]
address WeldBatcalcIfThenElse
comment "batcalc.ifthenelse";
pattern batcalcifthenelse(b:bat[:bit], v1:any_1, v2:any_1, wstate:ptr):bat[:any_1]
address WeldBatcalcIfThenElse
comment "batcalc.ifthenelse";

pattern aggrsum(b:bat[:bte], wstate:ptr):bte
address WeldAggrSum
comment "aggr.sum";
pattern aggrsum(b:bat[:bte], s:bat[:oid], wstate:ptr):bte
address WeldAggrSum
comment "aggr.sum";

pattern aggrsum(b:bat[:int], wstate:ptr):int
address WeldAggrSum
comment "aggr.sum";
pattern aggrsum(b:bat[:int], s:bat[:oid], wstate:ptr):int
address WeldAggrSum
comment "aggr.sum";

pattern aggrsum(b:bat[:lng], wstate:ptr):lng
address WeldAggrSum
comment "aggr.sum";
pattern aggrsum(b:bat[:lng], s:bat[:oid], wstate:ptr):lng
address WeldAggrSum
comment "aggr.sum";

pattern aggrsum(b:bat[:flt], wstate:ptr):flt
address WeldAggrSum
comment "aggr.sum";
pattern aggrsum(b:bat[:flt], s:bat[:oid], wstate:ptr):flt
address WeldAggrSum
comment "aggr.sum";

pattern aggrsum(b:bat[:dbl], wstate:ptr):dbl
address WeldAggrSum
comment "aggr.sum";
pattern aggrsum(b:bat[:dbl], s:bat[:oid], wstate:ptr):dbl
address WeldAggrSum
comment "aggr.sum";

pattern batcalcadd(b1:bat[:bte], b2:bat[:bte], wstate:ptr):bat[:bte]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:bte], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:bte], v:bte, wstate:ptr):bat[:bte]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:bte], v:bte, s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:bte, b:bat[:bte], wstate:ptr):bat[:bte]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:bte, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:bte], b2:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:bte], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:bte], v:int, wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:bte], v:int, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:bte, b:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:bte, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:bte], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:bte], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:bte], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:bte], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:bte, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:bte, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:bte], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:bte], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:bte], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:bte], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:bte, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:bte, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:bte], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:bte], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:bte], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:bte], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:bte, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:bte, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:int], b2:bat[:bte], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:int], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:int], v:bte, wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:int], v:bte, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:int, b:bat[:bte], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:int, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:int], b2:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:int], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:int], v:int, wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:int], v:int, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:int, b:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:int, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:int], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:int], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:int], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:int], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:int, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:int, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:int], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:int], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:int], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:int], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:int, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:int, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:int], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:int], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:int], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:int], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:int, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:int, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:lng], b2:bat[:bte], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:lng], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:lng], v:bte, wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:lng], v:bte, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:lng, b:bat[:bte], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:lng, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:lng], b2:bat[:int], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:lng], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:lng], v:int, wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:lng], v:int, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:lng, b:bat[:int], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:lng, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:lng], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:lng], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:lng], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:lng], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:lng, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:lng, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:lng], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:lng], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:lng], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:lng], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:lng, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:lng, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:lng], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:lng], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:lng], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:lng], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:lng, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:lng, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:flt], b2:bat[:bte], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:flt], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:flt], v:bte, wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:flt], v:bte, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:flt, b:bat[:bte], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:flt, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:flt], b2:bat[:int], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:flt], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:flt], v:int, wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:flt], v:int, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:flt, b:bat[:int], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:flt, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:flt], b2:bat[:lng], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:flt], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:flt], v:lng, wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:flt], v:lng, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:flt, b:bat[:lng], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:flt, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:flt], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:flt], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:flt], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:flt], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:flt, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:flt, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:flt], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:flt], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:flt], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:flt], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:flt, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:flt, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:dbl], b2:bat[:bte], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:dbl], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:dbl], v:bte, wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:dbl], v:bte, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:dbl, b:bat[:bte], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:dbl, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:dbl], b2:bat[:int], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:dbl], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:dbl], v:int, wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:dbl], v:int, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:dbl, b:bat[:int], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:dbl, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:dbl], b2:bat[:lng], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:dbl], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:dbl], v:lng, wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:dbl], v:lng, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:dbl, b:bat[:lng], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:dbl, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:dbl], b2:bat[:flt], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:dbl], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:dbl], v:flt, wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:dbl], v:flt, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:dbl, b:bat[:flt], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:dbl, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcadd(b1:bat[:dbl], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b1:bat[:dbl], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(b:bat[:dbl], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(b:bat[:dbl], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";
pattern batcalcadd(v:dbl, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd";
pattern batcalcadd(v:dbl, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcADDsignal
comment "batcalcadd with candidates list";

pattern batcalcsub(b1:bat[:bte], b2:bat[:bte], wstate:ptr):bat[:bte]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:bte], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:bte], v:bte, wstate:ptr):bat[:bte]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:bte], v:bte, s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:bte, b:bat[:bte], wstate:ptr):bat[:bte]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:bte, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:bte], b2:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:bte], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:bte], v:int, wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:bte], v:int, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:bte, b:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:bte, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:bte], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:bte], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:bte], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:bte], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:bte, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:bte, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:bte], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:bte], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:bte], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:bte], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:bte, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:bte, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:bte], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:bte], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:bte], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:bte], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:bte, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:bte, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:int], b2:bat[:bte], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:int], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:int], v:bte, wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:int], v:bte, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:int, b:bat[:bte], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:int, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:int], b2:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:int], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:int], v:int, wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:int], v:int, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:int, b:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:int, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:int], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:int], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:int], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:int], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:int, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:int, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:int], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:int], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:int], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:int], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:int, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:int, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:int], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:int], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:int], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:int], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:int, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:int, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:lng], b2:bat[:bte], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:lng], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:lng], v:bte, wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:lng], v:bte, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:lng, b:bat[:bte], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:lng, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:lng], b2:bat[:int], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:lng], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:lng], v:int, wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:lng], v:int, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:lng, b:bat[:int], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:lng, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:lng], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:lng], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:lng], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:lng], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:lng, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:lng, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:lng], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:lng], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:lng], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:lng], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:lng, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:lng, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:lng], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:lng], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:lng], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:lng], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:lng, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:lng, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:flt], b2:bat[:bte], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:flt], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:flt], v:bte, wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:flt], v:bte, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:flt, b:bat[:bte], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:flt, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:flt], b2:bat[:int], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:flt], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:flt], v:int, wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:flt], v:int, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:flt, b:bat[:int], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:flt, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:flt], b2:bat[:lng], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:flt], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:flt], v:lng, wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:flt], v:lng, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:flt, b:bat[:lng], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:flt, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:flt], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:flt], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:flt], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:flt], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:flt, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:flt, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:flt], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:flt], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:flt], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:flt], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:flt, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:flt, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:dbl], b2:bat[:bte], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:dbl], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:dbl], v:bte, wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:dbl], v:bte, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:dbl, b:bat[:bte], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:dbl, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:dbl], b2:bat[:int], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:dbl], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:dbl], v:int, wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:dbl], v:int, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:dbl, b:bat[:int], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:dbl, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:dbl], b2:bat[:lng], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:dbl], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:dbl], v:lng, wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:dbl], v:lng, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:dbl, b:bat[:lng], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:dbl, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:dbl], b2:bat[:flt], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:dbl], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:dbl], v:flt, wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:dbl], v:flt, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:dbl, b:bat[:flt], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:dbl, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcsub(b1:bat[:dbl], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b1:bat[:dbl], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(b:bat[:dbl], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(b:bat[:dbl], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";
pattern batcalcsub(v:dbl, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub";
pattern batcalcsub(v:dbl, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcSUBsignal
comment "batcalcsub with candidates list";

pattern batcalcmul(b1:bat[:bte], b2:bat[:bte], wstate:ptr):bat[:bte]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:bte], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:bte], v:bte, wstate:ptr):bat[:bte]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:bte], v:bte, s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:bte, b:bat[:bte], wstate:ptr):bat[:bte]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:bte, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:bte], b2:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:bte], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:bte], v:int, wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:bte], v:int, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:bte, b:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:bte, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:bte], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:bte], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:bte], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:bte], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:bte, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:bte, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:bte], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:bte], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:bte], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:bte], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:bte, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:bte, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:bte], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:bte], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:bte], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:bte], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:bte, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:bte, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:int], b2:bat[:bte], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:int], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:int], v:bte, wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:int], v:bte, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:int, b:bat[:bte], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:int, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:int], b2:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:int], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:int], v:int, wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:int], v:int, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:int, b:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:int, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:int], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:int], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:int], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:int], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:int, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:int, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:int], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:int], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:int], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:int], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:int, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:int, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:int], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:int], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:int], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:int], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:int, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:int, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:lng], b2:bat[:bte], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:lng], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:lng], v:bte, wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:lng], v:bte, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:lng, b:bat[:bte], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:lng, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:lng], b2:bat[:int], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:lng], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:lng], v:int, wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:lng], v:int, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:lng, b:bat[:int], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:lng, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:lng], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:lng], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:lng], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:lng], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:lng, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:lng, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:lng], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:lng], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:lng], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:lng], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:lng, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:lng, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:lng], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:lng], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:lng], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:lng], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:lng, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:lng, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:flt], b2:bat[:bte], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:flt], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:flt], v:bte, wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:flt], v:bte, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:flt, b:bat[:bte], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:flt, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:flt], b2:bat[:int], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:flt], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:flt], v:int, wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:flt], v:int, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:flt, b:bat[:int], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:flt, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:flt], b2:bat[:lng], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:flt], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:flt], v:lng, wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:flt], v:lng, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:flt, b:bat[:lng], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:flt, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:flt], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:flt], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:flt], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:flt], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:flt, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:flt, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:flt], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:flt], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:flt], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:flt], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:flt, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:flt, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:dbl], b2:bat[:bte], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:dbl], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:dbl], v:bte, wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:dbl], v:bte, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:dbl, b:bat[:bte], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:dbl, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:dbl], b2:bat[:int], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:dbl], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:dbl], v:int, wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:dbl], v:int, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:dbl, b:bat[:int], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:dbl, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:dbl], b2:bat[:lng], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:dbl], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:dbl], v:lng, wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:dbl], v:lng, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:dbl, b:bat[:lng], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:dbl, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:dbl], b2:bat[:flt], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:dbl], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:dbl], v:flt, wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:dbl], v:flt, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:dbl, b:bat[:flt], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:dbl, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcmul(b1:bat[:dbl], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b1:bat[:dbl], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(b:bat[:dbl], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(b:bat[:dbl], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";
pattern batcalcmul(v:dbl, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul";
pattern batcalcmul(v:dbl, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMULsignal
comment "batcalcmul with candidates list";

pattern batcalcdiv(b1:bat[:bte], b2:bat[:bte], wstate:ptr):bat[:bte]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:bte], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:bte], v:bte, wstate:ptr):bat[:bte]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:bte], v:bte, s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:bte, b:bat[:bte], wstate:ptr):bat[:bte]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:bte, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:bte], b2:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:bte], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:bte], v:int, wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:bte], v:int, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:bte, b:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:bte, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:bte], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:bte], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:bte], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:bte], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:bte, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:bte, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:bte], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:bte], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:bte], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:bte], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:bte, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:bte, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:bte], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:bte], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:bte], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:bte], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:bte, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:bte, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:int], b2:bat[:bte], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:int], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:int], v:bte, wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:int], v:bte, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:int, b:bat[:bte], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:int, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:int], b2:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:int], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:int], v:int, wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:int], v:int, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:int, b:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:int, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:int], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:int], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:int], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:int], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:int, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:int, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:int], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:int], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:int], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:int], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:int, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:int, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:int], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:int], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:int], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:int], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:int, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:int, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:lng], b2:bat[:bte], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:lng], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:lng], v:bte, wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:lng], v:bte, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:lng, b:bat[:bte], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:lng, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:lng], b2:bat[:int], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:lng], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:lng], v:int, wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:lng], v:int, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:lng, b:bat[:int], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:lng, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:lng], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:lng], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:lng], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:lng], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:lng, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:lng, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:lng], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:lng], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:lng], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:lng], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:lng, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:lng, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:lng], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:lng], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:lng], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:lng], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:lng, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:lng, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:flt], b2:bat[:bte], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:flt], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:flt], v:bte, wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:flt], v:bte, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:flt, b:bat[:bte], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:flt, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:flt], b2:bat[:int], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:flt], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:flt], v:int, wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:flt], v:int, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:flt, b:bat[:int], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:flt, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:flt], b2:bat[:lng], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:flt], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:flt], v:lng, wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:flt], v:lng, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:flt, b:bat[:lng], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:flt, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:flt], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:flt], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:flt], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:flt], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:flt, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:flt, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:flt], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:flt], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:flt], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:flt], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:flt, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:flt, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:dbl], b2:bat[:bte], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:dbl], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:dbl], v:bte, wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:dbl], v:bte, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:dbl, b:bat[:bte], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:dbl, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:dbl], b2:bat[:int], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:dbl], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:dbl], v:int, wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:dbl], v:int, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:dbl, b:bat[:int], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:dbl, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:dbl], b2:bat[:lng], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:dbl], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:dbl], v:lng, wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:dbl], v:lng, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:dbl, b:bat[:lng], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:dbl, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:dbl], b2:bat[:flt], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:dbl], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:dbl], v:flt, wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:dbl], v:flt, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:dbl, b:bat[:flt], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:dbl, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcdiv(b1:bat[:dbl], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b1:bat[:dbl], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(b:bat[:dbl], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(b:bat[:dbl], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";
pattern batcalcdiv(v:dbl, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv";
pattern batcalcdiv(v:dbl, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcDIVsignal
comment "batcalcdiv with candidates list";

pattern batcalcmod(b1:bat[:bte], b2:bat[:bte], wstate:ptr):bat[:bte]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:bte], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:bte], v:bte, wstate:ptr):bat[:bte]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:bte], v:bte, s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:bte, b:bat[:bte], wstate:ptr):bat[:bte]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:bte, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:bte]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:bte], b2:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:bte], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:bte], v:int, wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:bte], v:int, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:bte, b:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:bte, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:bte], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:bte], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:bte], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:bte], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:bte, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:bte, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:bte], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:bte], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:bte], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:bte], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:bte, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:bte, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:bte], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:bte], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:bte], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:bte], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:bte, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:bte, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:int], b2:bat[:bte], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:int], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:int], v:bte, wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:int], v:bte, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:int, b:bat[:bte], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:int, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:int], b2:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:int], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:int], v:int, wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:int], v:int, s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:int, b:bat[:int], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:int, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:int]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:int], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:int], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:int], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:int], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:int, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:int, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:int], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:int], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:int], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:int], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:int, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:int, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:int], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:int], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:int], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:int], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:int, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:int, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:lng], b2:bat[:bte], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:lng], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:lng], v:bte, wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:lng], v:bte, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:lng, b:bat[:bte], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:lng, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:lng], b2:bat[:int], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:lng], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:lng], v:int, wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:lng], v:int, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:lng, b:bat[:int], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:lng, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:lng], b2:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:lng], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:lng], v:lng, wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:lng], v:lng, s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:lng, b:bat[:lng], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:lng, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:lng]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:lng], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:lng], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:lng], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:lng], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:lng, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:lng, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:lng], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:lng], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:lng], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:lng], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:lng, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:lng, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:flt], b2:bat[:bte], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:flt], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:flt], v:bte, wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:flt], v:bte, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:flt, b:bat[:bte], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:flt, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:flt], b2:bat[:int], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:flt], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:flt], v:int, wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:flt], v:int, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:flt, b:bat[:int], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:flt, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:flt], b2:bat[:lng], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:flt], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:flt], v:lng, wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:flt], v:lng, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:flt, b:bat[:lng], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:flt, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:flt], b2:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:flt], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:flt], v:flt, wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:flt], v:flt, s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:flt, b:bat[:flt], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:flt, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:flt]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:flt], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:flt], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:flt], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:flt], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:flt, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:flt, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:dbl], b2:bat[:bte], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:dbl], b2:bat[:bte], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:dbl], v:bte, wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:dbl], v:bte, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:dbl, b:bat[:bte], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:dbl, b:bat[:bte], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:dbl], b2:bat[:int], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:dbl], b2:bat[:int], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:dbl], v:int, wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:dbl], v:int, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:dbl, b:bat[:int], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:dbl, b:bat[:int], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:dbl], b2:bat[:lng], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:dbl], b2:bat[:lng], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:dbl], v:lng, wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:dbl], v:lng, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:dbl, b:bat[:lng], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:dbl, b:bat[:lng], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:dbl], b2:bat[:flt], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:dbl], b2:bat[:flt], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:dbl], v:flt, wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:dbl], v:flt, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:dbl, b:bat[:flt], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:dbl, b:bat[:flt], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalcmod(b1:bat[:dbl], b2:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b1:bat[:dbl], b2:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(b:bat[:dbl], v:dbl, wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(b:bat[:dbl], v:dbl, s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";
pattern batcalcmod(v:dbl, b:bat[:dbl], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod";
pattern batcalcmod(v:dbl, b:bat[:dbl], s:bat[:oid], wstate:ptr):bat[:dbl]
address WeldBatcalcMODsignal
comment "batcalcmod with candidates list";

pattern batcalclt(b1:bat[:any_1], b2:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcLTsignal
comment "batcalclt";
pattern batcalclt(b1:bat[:any_1], b2:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcLTsignal
comment "batcalclt with candidates list";
pattern batcalclt(b:bat[:any_1], v:any_1, wstate:ptr):bat[:bit]
address WeldBatcalcLTsignal
comment "batcalclt";
pattern batcalclt(b:bat[:any_1], v:any_1, s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcLTsignal
comment "batcalclt with candidates list";
pattern batcalclt(v:any_1, b:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcLTsignal
comment "batcalclt";
pattern batcalclt(v:any_1, b:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcLTsignal
comment "batcalclt with candidates list";

pattern batcalcle(b1:bat[:any_1], b2:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcLEsignal
comment "batcalcle";
pattern batcalcle(b1:bat[:any_1], b2:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcLEsignal
comment "batcalcle with candidates list";
pattern batcalcle(b:bat[:any_1], v:any_1, wstate:ptr):bat[:bit]
address WeldBatcalcLEsignal
comment "batcalcle";
pattern batcalcle(b:bat[:any_1], v:any_1, s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcLEsignal
comment "batcalcle with candidates list";
pattern batcalcle(v:any_1, b:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcLEsignal
comment "batcalcle";
pattern batcalcle(v:any_1, b:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcLEsignal
comment "batcalcle with candidates list";

pattern batcalceq(b1:bat[:any_1], b2:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcEQsignal
comment "batcalceq";
pattern batcalceq(b1:bat[:any_1], b2:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcEQsignal
comment "batcalceq with candidates list";
pattern batcalceq(b:bat[:any_1], v:any_1, wstate:ptr):bat[:bit]
address WeldBatcalcEQsignal
comment "batcalceq";
pattern batcalceq(b:bat[:any_1], v:any_1, s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcEQsignal
comment "batcalceq with candidates list";
pattern batcalceq(v:any_1, b:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcEQsignal
comment "batcalceq";
pattern batcalceq(v:any_1, b:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcEQsignal
comment "batcalceq with candidates list";

pattern batcalcgt(b1:bat[:any_1], b2:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcGTsignal
comment "batcalcgt";
pattern batcalcgt(b1:bat[:any_1], b2:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcGTsignal
comment "batcalcgt with candidates list";
pattern batcalcgt(b:bat[:any_1], v:any_1, wstate:ptr):bat[:bit]
address WeldBatcalcGTsignal
comment "batcalcgt";
pattern batcalcgt(b:bat[:any_1], v:any_1, s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcGTsignal
comment "batcalcgt with candidates list";
pattern batcalcgt(v:any_1, b:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcGTsignal
comment "batcalcgt";
pattern batcalcgt(v:any_1, b:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcGTsignal
comment "batcalcgt with candidates list";

pattern batcalcge(b1:bat[:any_1], b2:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcGEsignal
comment "batcalcge";
pattern batcalcge(b1:bat[:any_1], b2:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcGEsignal
comment "batcalcge with candidates list";
pattern batcalcge(b:bat[:any_1], v:any_1, wstate:ptr):bat[:bit]
address WeldBatcalcGEsignal
comment "batcalcge";
pattern batcalcge(b:bat[:any_1], v:any_1, s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcGEsignal
comment "batcalcge with candidates list";
pattern batcalcge(v:any_1, b:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcGEsignal
comment "batcalcge";
pattern batcalcge(v:any_1, b:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcGEsignal
comment "batcalcge with candidates list";

pattern batcalcne(b1:bat[:any_1], b2:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcNEsignal
comment "batcalcne";
pattern batcalcne(b1:bat[:any_1], b2:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcNEsignal
comment "batcalcne with candidates list";
pattern batcalcne(b:bat[:any_1], v:any_1, wstate:ptr):bat[:bit]
address WeldBatcalcNEsignal
comment "batcalcne";
pattern batcalcne(b:bat[:any_1], v:any_1, s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcNEsignal
comment "batcalcne with candidates list";
pattern batcalcne(v:any_1, b:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcNEsignal
comment "batcalcne";
pattern batcalcne(v:any_1, b:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcNEsignal
comment "batcalcne with candidates list";

pattern batcalcand(b1:bat[:any_1], b2:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcANDsignal
comment "batcalcand";
pattern batcalcand(b1:bat[:any_1], b2:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcANDsignal
comment "batcalcand with candidates list";
pattern batcalcand(b:bat[:any_1], v:any_1, wstate:ptr):bat[:bit]
address WeldBatcalcANDsignal
comment "batcalcand";
pattern batcalcand(b:bat[:any_1], v:any_1, s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcANDsignal
comment "batcalcand with candidates list";
pattern batcalcand(v:any_1, b:bat[:any_1], wstate:ptr):bat[:bit]
address WeldBatcalcANDsignal
comment "batcalcand";
pattern batcalcand(v:any_1, b:bat[:any_1], s:bat[:oid], wstate:ptr):bat[:bit]
address WeldBatcalcANDsignal
comment "batcalcand with candidates list";

pattern language.pass(v:any_1, wstate:ptr):void
address WeldLanguagePass
comment "language.pass";

