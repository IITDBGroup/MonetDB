/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "00_batcalc_hge", "\n\nmodule batcalc;\n\npattern iszero(b:bat[:hge]) :bat[:bit]\naddress CMDbatISZERO\ncomment \"Unary check for zero over the tail of the bat\";\npattern iszero(b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatISZERO\ncomment \"Unary check for zero over the tail of the bat with candidates list\";\n\n\npattern not(b:bat[:hge]) :bat[:hge]\naddress CMDbatNOT\ncomment \"Unary bitwise not over the tail of the bat\";\npattern not(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatNOT\ncomment \"Unary bitwise not over the tail of the bat with candidates list\";\n\n\npattern sign(b:bat[:hge]) :bat[:bte]\naddress CMDbatSIGN\ncomment \"Unary sign (-1,0,1) over the tail of the bat\";\npattern sign(b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatSIGN\ncomment \"Unary sign (-1,0,1) over the tail of the bat with candidates list\";\n\n\npattern abs(b:bat[:hge]) :bat[:hge]\naddress CMDbatABS\ncomment \"Unary abs over the tail of the bat\";\npattern abs(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatABS\ncomment \"Unary abs over the tail of the bat with candidates list\";\n\n\npattern -(b:bat[:hge]) :bat[:hge]\naddress CMDbatNEG\ncomment \"Unary neg over the tail of the bat\";\npattern -(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatNEG\ncomment \"Unary neg over the tail of the bat with candidates list\";\n\n\npattern ++(b:bat[:hge]) :bat[:hge]\naddress CMDbatINCR\ncomment \"Unary increment over the tail of the bat\";\npattern ++(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatINCR\ncomment \"Unary increment over the tail of the bat with candidates list\";\n\n\npattern --(b:bat[:hge]) :bat[:hge]\naddress CMDbatDECR\ncomment \"Unary decrement over the tail of the bat\";\npattern --(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDECR\ncomment \"Unary decrement over the tail of the bat with candidates list\";\n\n\npattern +(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:bte],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:bte],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:hge) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:sht],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:sht],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:hge) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:int],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:int],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:hge) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:int],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:int,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:lng],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:lng],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:hge) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:hge],b2:bat[:bte]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:bte) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:bte]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:hge],b2:bat[:bte]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:bte) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:bte]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:hge],b2:bat[:sht]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:sht) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:sht]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:hge],b2:bat[:sht]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:sht) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:sht]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:hge],b2:bat[:int]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:int) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:int,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:int]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:hge],b2:bat[:int]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:int) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:int,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:int]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:hge],b2:bat[:lng]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:lng) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:lng]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:hge],b2:bat[:lng]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:lng) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:lng]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:hge],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:hge],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:hge) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:hge],b2:bat[:flt]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:flt) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:flt]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:flt],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2, guarantee no overflow by returning larger type\";\npattern +(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B1 + B2 with candidates list, guarantee no overflow by returning larger type\";\npattern +(b:bat[:flt],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V, guarantee no overflow by returning larger type\";\npattern +(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return B + V with candidates list, guarantee no overflow by returning larger type\";\npattern +(v:flt,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B, guarantee no overflow by returning larger type\";\npattern +(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\ncomment \"Return V + B with candidates list, guarantee no overflow by returning larger type\";\n\npattern +(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern +(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2, signal error on overflow\";\npattern +(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return B1 + B2 with candidates list, signal error on overflow\";\npattern add_noerror(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return B1 + B2, overflow causes NIL value\";\npattern add_noerror(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return B1 + B2 with candidates list, overflow causes NIL value\";\npattern +(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return B + V, signal error on overflow\";\npattern +(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return B + V with candidates list, signal error on overflow\";\npattern add_noerror(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return B + V, overflow causes NIL value\";\npattern add_noerror(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return B + V with candidates list, overflow causes NIL value\";\npattern +(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return V + B, signal error on overflow\";\npattern +(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\ncomment \"Return V + B with candidates list, signal error on overflow\";\npattern add_noerror(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return V + B, overflow causes NIL value\";\npattern add_noerror(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\ncomment \"Return V + B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:bte],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:bte],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:hge) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:sht],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:sht],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:hge) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:int],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:int],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:hge) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:int],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:int,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:lng],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:lng],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:hge) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:hge],b2:bat[:bte]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:bte) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:bte]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:hge],b2:bat[:bte]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:bte) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:bte]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:hge],b2:bat[:sht]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:sht) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:sht]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:hge],b2:bat[:sht]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:sht) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:sht]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:hge],b2:bat[:int]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:int) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:int,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:int]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:hge],b2:bat[:int]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:int) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:int,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:int]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:hge],b2:bat[:lng]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:lng) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:lng]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:hge],b2:bat[:lng]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:lng) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:lng]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:hge],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:hge],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:hge) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:hge],b2:bat[:flt]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:flt) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:flt]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:flt],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2, guarantee no overflow by returning larger type\";\npattern -(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B1 - B2 with candidates list, guarantee no overflow by returning larger type\";\npattern -(b:bat[:flt],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V, guarantee no overflow by returning larger type\";\npattern -(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return B - V with candidates list, guarantee no overflow by returning larger type\";\npattern -(v:flt,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B, guarantee no overflow by returning larger type\";\npattern -(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\ncomment \"Return V - B with candidates list, guarantee no overflow by returning larger type\";\n\npattern -(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern -(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2, signal error on overflow\";\npattern -(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return B1 - B2 with candidates list, signal error on overflow\";\npattern sub_noerror(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return B1 - B2, overflow causes NIL value\";\npattern sub_noerror(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return B1 - B2 with candidates list, overflow causes NIL value\";\npattern -(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return B - V, signal error on overflow\";\npattern -(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return B - V with candidates list, signal error on overflow\";\npattern sub_noerror(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return B - V, overflow causes NIL value\";\npattern sub_noerror(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return B - V with candidates list, overflow causes NIL value\";\npattern -(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return V - B, signal error on overflow\";\npattern -(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\ncomment \"Return V - B with candidates list, signal error on overflow\";\npattern sub_noerror(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return V - B, overflow causes NIL value\";\npattern sub_noerror(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\ncomment \"Return V - B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:bte],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:bte],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:hge) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:sht],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:sht],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:hge) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:int],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:int],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:hge) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:int],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:int,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:lng],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:lng],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:hge) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:hge],b2:bat[:bte]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:bte) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:bte]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:hge],b2:bat[:bte]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:bte) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:bte]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:hge],b2:bat[:sht]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:sht) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:sht]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:hge],b2:bat[:sht]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:sht) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:sht]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:hge],b2:bat[:int]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:int) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:int,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:int]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:hge],b2:bat[:int]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:int) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:int,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:int]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:hge],b2:bat[:lng]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:lng) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:lng]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:hge],b2:bat[:lng]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:lng) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:lng]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:hge],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:hge],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:hge) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:hge],b2:bat[:flt]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:flt) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:flt]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:flt],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2, guarantee no overflow by returning larger type\";\npattern *(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B1 * B2 with candidates list, guarantee no overflow by returning larger type\";\npattern *(b:bat[:flt],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V, guarantee no overflow by returning larger type\";\npattern *(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return B * V with candidates list, guarantee no overflow by returning larger type\";\npattern *(v:flt,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B, guarantee no overflow by returning larger type\";\npattern *(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\ncomment \"Return V * B with candidates list, guarantee no overflow by returning larger type\";\n\npattern *(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern *(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2, signal error on overflow\";\npattern *(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return B1 * B2 with candidates list, signal error on overflow\";\npattern mul_noerror(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return B1 * B2, overflow causes NIL value\";\npattern mul_noerror(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return B1 * B2 with candidates list, overflow causes NIL value\";\npattern *(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return B * V, signal error on overflow\";\npattern *(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return B * V with candidates list, signal error on overflow\";\npattern mul_noerror(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return B * V, overflow causes NIL value\";\npattern mul_noerror(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return B * V with candidates list, overflow causes NIL value\";\npattern *(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return V * B, signal error on overflow\";\npattern *(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\ncomment \"Return V * B with candidates list, signal error on overflow\";\npattern mul_noerror(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return V * B, overflow causes NIL value\";\npattern mul_noerror(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\ncomment \"Return V * B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:hge) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:hge) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:hge) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:hge) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:hge) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:hge) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:hge) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:hge) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:hge]) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:flt) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:flt) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:bte],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:bte],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:bte],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:bte],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:bte],v:dbl) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:bte],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:bte],v:dbl) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:bte],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:bte,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:bte,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:bte,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:bte,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:hge) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:hge) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:hge) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:hge) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:hge) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:hge) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:flt) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:flt) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:sht],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:sht],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:sht],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:sht],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:sht],v:dbl) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:sht],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:sht],v:dbl) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:sht],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:sht,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:sht,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:sht,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:sht,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:int],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:int],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:int],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:int],v:hge) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:int,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:int,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:int,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:int],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:int],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:int],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:int],v:hge) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:int,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:int,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:int,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:int],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:int],v:hge) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:int],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:int],v:hge) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:int,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:int,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:int,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:int],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:int],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:int],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:int],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:int],v:flt) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:int],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:int],v:flt) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:int],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:int,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:int,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:int,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:int,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:int],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:int],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:int],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:int],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:int],v:dbl) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:int],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:int],v:dbl) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:int],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:int,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:int,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:int,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:int,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:lng],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:lng],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:lng],v:hge) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:lng,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:lng,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:lng],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:lng],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:lng],v:hge) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:lng,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:lng,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:lng],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:lng],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:lng],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:lng],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:lng],v:flt) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:lng],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:lng],v:flt) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:lng],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:lng,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:lng,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:lng,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:lng,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:lng],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:lng],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:lng],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:lng],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:lng],v:dbl) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:lng],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:lng],v:dbl) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:lng],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:lng,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:lng,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:lng,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:lng,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:bte]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:bte) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:bte) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:bte]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:bte]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:bte]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:bte) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:bte) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:bte]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:bte]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:sht]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:sht) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:sht) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:sht]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:sht]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:sht]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:sht) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:sht) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:sht]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:sht]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:int]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:int) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:int,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:int) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:int]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:int]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:int]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:int) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:int,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:int) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:int]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:int]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:lng]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:lng) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:lng) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:lng]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:lng]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:lng]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:lng) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:lng) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:lng]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:lng]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:hge) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:hge) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:flt]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:flt) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:flt) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:flt]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:flt]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:flt) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:flt) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:dbl]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:dbl) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:dbl) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:dbl]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:dbl]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:hge],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:hge],v:dbl) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:hge],v:dbl) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:hge,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:hge,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:flt],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:flt],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:flt],v:hge) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:flt,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:flt,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\npattern /(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2, signal error on overflow\";\npattern /(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B1 / B2 with candidates list, signal error on overflow\";\npattern div_noerror(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2, overflow causes NIL value\";\npattern div_noerror(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B1 / B2 with candidates list, overflow causes NIL value\";\npattern /(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V, signal error on overflow\";\npattern /(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return B / V with candidates list, signal error on overflow\";\npattern div_noerror(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V, overflow causes NIL value\";\npattern div_noerror(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return B / V with candidates list, overflow causes NIL value\";\npattern /(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B, signal error on overflow\";\npattern /(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\ncomment \"Return V / B with candidates list, signal error on overflow\";\npattern div_noerror(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B, overflow causes NIL value\";\npattern div_noerror(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\ncomment \"Return V / B with candidates list, overflow causes NIL value\";\n\n\npattern %(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:bte],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:bte],v:hge) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:bte],v:hge) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:bte,b:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:bte,b:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:bte],b2:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:bte],v:hge) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:bte],v:hge) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:bte,b:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:bte,b:bat[:hge]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:bte],b2:bat[:hge]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:bte],v:hge) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:bte],v:hge) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:bte,b:bat[:hge]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:bte,b:bat[:hge]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:sht],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:sht],v:hge) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:sht],v:hge) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:sht,b:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:sht,b:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:sht],b2:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:sht],v:hge) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:sht],v:hge) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:sht,b:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:sht,b:bat[:hge]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:int],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:int],v:hge) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:int],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:int],v:hge) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:int,b:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:int,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:int,b:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:bte]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:bte) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:bte) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:bte]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:bte]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:bte]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:bte) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:bte) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:bte]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:bte]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:bte]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:bte) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:bte) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:bte]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:bte]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:bte]) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:bte) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:bte) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:bte]) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:bte]) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:sht]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:sht) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:sht) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:sht]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:sht]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:sht]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:sht) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:sht) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:sht]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:sht]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:sht]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:sht) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:sht) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:sht]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:sht]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:int]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:int) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:int,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:int) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:int]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:int],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:int]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:int]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:int) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:int,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:int) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:int]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:int],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:int]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:lng]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:lng) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:lng) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:lng]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:lng]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\npattern %(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2, signal error on divide by zero\";\npattern %(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return B1 % B2 with candidates list, signal error on divide by zero\";\npattern mod_noerror(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return B1 % B2, divide by zero causes NIL value\";\npattern mod_noerror(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return B1 % B2 with candidates list, divide by zero causes NIL value\";\npattern %(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return B % V, signal error on divide by zero\";\npattern %(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return B % V with candidates list, signal error on divide by zero\";\npattern mod_noerror(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return B % V, divide by zero causes NIL value\";\npattern mod_noerror(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return B % V with candidates list, divide by zero causes NIL value\";\npattern %(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return V % B, signal error on divide by zero\";\npattern %(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\ncomment \"Return V % B with candidates list, signal error on divide by zero\";\npattern mod_noerror(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return V % B, divide by zero causes NIL value\";\npattern mod_noerror(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\ncomment \"Return V % B with candidates list, divide by zero causes NIL value\";\n\n\npattern and(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatAND\ncomment \"Return B1 AND B2\";\npattern and(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatAND\ncomment \"Return B1 AND B2 with candidates list\";\npattern and(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatAND\ncomment \"Return B AND V\";\npattern and(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatAND\ncomment \"Return B AND V with candidates list\";\npattern and(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatAND\ncomment \"Return V AND B\";\npattern and(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatAND\ncomment \"Return V AND B with candidates list\";\n\n\npattern or(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatOR\ncomment \"Return B1 OR B2\";\npattern or(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatOR\ncomment \"Return B1 OR B2 with candidates list\";\npattern or(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatOR\ncomment \"Return B OR V\";\npattern or(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatOR\ncomment \"Return B OR V with candidates list\";\npattern or(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatOR\ncomment \"Return V OR B\";\npattern or(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatOR\ncomment \"Return V OR B with candidates list\";\n\n\npattern xor(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatXOR\ncomment \"Return B1 XOR B2\";\npattern xor(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatXOR\ncomment \"Return B1 XOR B2 with candidates list\";\npattern xor(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatXOR\ncomment \"Return B XOR V\";\npattern xor(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatXOR\ncomment \"Return B XOR V with candidates list\";\npattern xor(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatXOR\ncomment \"Return V XOR B\";\npattern xor(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatXOR\ncomment \"Return V XOR B with candidates list\";\n\n\npattern <<(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2, raise error on out of range second operand\";\npattern <<(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2 with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatLSH\ncomment \"Return B1 << B2, out of range second operand causes NIL value\";\npattern lsh_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatLSH\ncomment \"Return B1 << B2 with candidates list, out of range second operand causes NIL value\";\npattern <<(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatLSHsignal\ncomment \"Return B << V, raise error on out of range second operand\";\npattern <<(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatLSHsignal\ncomment \"Return B << V with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatLSH\ncomment \"Return B << V, out of range second operand causes NIL value\";\npattern lsh_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatLSH\ncomment \"Return B << V with candidates list, out of range second operand causes NIL value\";\npattern <<(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatLSHsignal\ncomment \"Return V << B, raise error on out of range second operand\";\npattern <<(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatLSHsignal\ncomment \"Return V << B with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatLSH\ncomment \"Return V << B, out of range second operand causes NIL value\";\npattern lsh_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatLSH\ncomment \"Return V << B with candidates list, out of range second operand causes NIL value\";\n\npattern <<(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2, raise error on out of range second operand\";\npattern <<(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2 with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatLSH\ncomment \"Return B1 << B2, out of range second operand causes NIL value\";\npattern lsh_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatLSH\ncomment \"Return B1 << B2 with candidates list, out of range second operand causes NIL value\";\npattern <<(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatLSHsignal\ncomment \"Return B << V, raise error on out of range second operand\";\npattern <<(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatLSHsignal\ncomment \"Return B << V with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatLSH\ncomment \"Return B << V, out of range second operand causes NIL value\";\npattern lsh_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatLSH\ncomment \"Return B << V with candidates list, out of range second operand causes NIL value\";\npattern <<(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatLSHsignal\ncomment \"Return V << B, raise error on out of range second operand\";\npattern <<(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatLSHsignal\ncomment \"Return V << B with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatLSH\ncomment \"Return V << B, out of range second operand causes NIL value\";\npattern lsh_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatLSH\ncomment \"Return V << B with candidates list, out of range second operand causes NIL value\";\n\npattern <<(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2, raise error on out of range second operand\";\npattern <<(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2 with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatLSH\ncomment \"Return B1 << B2, out of range second operand causes NIL value\";\npattern lsh_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatLSH\ncomment \"Return B1 << B2 with candidates list, out of range second operand causes NIL value\";\npattern <<(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatLSHsignal\ncomment \"Return B << V, raise error on out of range second operand\";\npattern <<(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatLSHsignal\ncomment \"Return B << V with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatLSH\ncomment \"Return B << V, out of range second operand causes NIL value\";\npattern lsh_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatLSH\ncomment \"Return B << V with candidates list, out of range second operand causes NIL value\";\npattern <<(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatLSHsignal\ncomment \"Return V << B, raise error on out of range second operand\";\npattern <<(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatLSHsignal\ncomment \"Return V << B with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatLSH\ncomment \"Return V << B, out of range second operand causes NIL value\";\npattern lsh_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatLSH\ncomment \"Return V << B with candidates list, out of range second operand causes NIL value\";\n\npattern <<(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2, raise error on out of range second operand\";\npattern <<(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2 with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatLSH\ncomment \"Return B1 << B2, out of range second operand causes NIL value\";\npattern lsh_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatLSH\ncomment \"Return B1 << B2 with candidates list, out of range second operand causes NIL value\";\npattern <<(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatLSHsignal\ncomment \"Return B << V, raise error on out of range second operand\";\npattern <<(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatLSHsignal\ncomment \"Return B << V with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatLSH\ncomment \"Return B << V, out of range second operand causes NIL value\";\npattern lsh_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatLSH\ncomment \"Return B << V with candidates list, out of range second operand causes NIL value\";\npattern <<(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatLSHsignal\ncomment \"Return V << B, raise error on out of range second operand\";\npattern <<(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatLSHsignal\ncomment \"Return V << B with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatLSH\ncomment \"Return V << B, out of range second operand causes NIL value\";\npattern lsh_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatLSH\ncomment \"Return V << B with candidates list, out of range second operand causes NIL value\";\n\npattern <<(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2, raise error on out of range second operand\";\npattern <<(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2 with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B1 << B2, out of range second operand causes NIL value\";\npattern lsh_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B1 << B2 with candidates list, out of range second operand causes NIL value\";\npattern <<(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B << V, raise error on out of range second operand\";\npattern <<(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B << V with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B << V, out of range second operand causes NIL value\";\npattern lsh_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B << V with candidates list, out of range second operand causes NIL value\";\npattern <<(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return V << B, raise error on out of range second operand\";\npattern <<(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return V << B with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return V << B, out of range second operand causes NIL value\";\npattern lsh_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return V << B with candidates list, out of range second operand causes NIL value\";\n\npattern <<(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2, raise error on out of range second operand\";\npattern <<(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2 with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B1 << B2, out of range second operand causes NIL value\";\npattern lsh_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B1 << B2 with candidates list, out of range second operand causes NIL value\";\npattern <<(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B << V, raise error on out of range second operand\";\npattern <<(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B << V with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B << V, out of range second operand causes NIL value\";\npattern lsh_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B << V with candidates list, out of range second operand causes NIL value\";\npattern <<(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return V << B, raise error on out of range second operand\";\npattern <<(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return V << B with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return V << B, out of range second operand causes NIL value\";\npattern lsh_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return V << B with candidates list, out of range second operand causes NIL value\";\n\npattern <<(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2, raise error on out of range second operand\";\npattern <<(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2 with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B1 << B2, out of range second operand causes NIL value\";\npattern lsh_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B1 << B2 with candidates list, out of range second operand causes NIL value\";\npattern <<(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B << V, raise error on out of range second operand\";\npattern <<(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B << V with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B << V, out of range second operand causes NIL value\";\npattern lsh_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B << V with candidates list, out of range second operand causes NIL value\";\npattern <<(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return V << B, raise error on out of range second operand\";\npattern <<(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return V << B with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return V << B, out of range second operand causes NIL value\";\npattern lsh_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return V << B with candidates list, out of range second operand causes NIL value\";\n\npattern <<(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2, raise error on out of range second operand\";\npattern <<(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2 with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B1 << B2, out of range second operand causes NIL value\";\npattern lsh_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B1 << B2 with candidates list, out of range second operand causes NIL value\";\npattern <<(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B << V, raise error on out of range second operand\";\npattern <<(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B << V with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B << V, out of range second operand causes NIL value\";\npattern lsh_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B << V with candidates list, out of range second operand causes NIL value\";\npattern <<(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return V << B, raise error on out of range second operand\";\npattern <<(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return V << B with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return V << B, out of range second operand causes NIL value\";\npattern lsh_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return V << B with candidates list, out of range second operand causes NIL value\";\n\npattern <<(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2, raise error on out of range second operand\";\npattern <<(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B1 << B2 with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B1 << B2, out of range second operand causes NIL value\";\npattern lsh_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B1 << B2 with candidates list, out of range second operand causes NIL value\";\npattern <<(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B << V, raise error on out of range second operand\";\npattern <<(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return B << V with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B << V, out of range second operand causes NIL value\";\npattern lsh_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return B << V with candidates list, out of range second operand causes NIL value\";\npattern <<(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return V << B, raise error on out of range second operand\";\npattern <<(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\ncomment \"Return V << B with candidates list, raise error on out of range second operand\";\npattern lsh_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return V << B, out of range second operand causes NIL value\";\npattern lsh_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\ncomment \"Return V << B with candidates list, out of range second operand causes NIL value\";\n\n\npattern >>(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2, raise error on out of range second operand\";\npattern >>(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2 with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatRSH\ncomment \"Return B1 >> B2, out of range second operand causes NIL value\";\npattern rsh_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatRSH\ncomment \"Return B1 >> B2 with candidates list, out of range second operand causes NIL value\";\npattern >>(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatRSHsignal\ncomment \"Return B >> V, raise error on out of range second operand\";\npattern >>(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatRSHsignal\ncomment \"Return B >> V with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatRSH\ncomment \"Return B >> V, out of range second operand causes NIL value\";\npattern rsh_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatRSH\ncomment \"Return B >> V with candidates list, out of range second operand causes NIL value\";\npattern >>(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatRSHsignal\ncomment \"Return V >> B, raise error on out of range second operand\";\npattern >>(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatRSHsignal\ncomment \"Return V >> B with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatRSH\ncomment \"Return V >> B, out of range second operand causes NIL value\";\npattern rsh_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatRSH\ncomment \"Return V >> B with candidates list, out of range second operand causes NIL value\";\n\npattern >>(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2, raise error on out of range second operand\";\npattern >>(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2 with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatRSH\ncomment \"Return B1 >> B2, out of range second operand causes NIL value\";\npattern rsh_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatRSH\ncomment \"Return B1 >> B2 with candidates list, out of range second operand causes NIL value\";\npattern >>(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatRSHsignal\ncomment \"Return B >> V, raise error on out of range second operand\";\npattern >>(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatRSHsignal\ncomment \"Return B >> V with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatRSH\ncomment \"Return B >> V, out of range second operand causes NIL value\";\npattern rsh_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatRSH\ncomment \"Return B >> V with candidates list, out of range second operand causes NIL value\";\npattern >>(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatRSHsignal\ncomment \"Return V >> B, raise error on out of range second operand\";\npattern >>(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatRSHsignal\ncomment \"Return V >> B with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatRSH\ncomment \"Return V >> B, out of range second operand causes NIL value\";\npattern rsh_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatRSH\ncomment \"Return V >> B with candidates list, out of range second operand causes NIL value\";\n\npattern >>(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2, raise error on out of range second operand\";\npattern >>(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2 with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatRSH\ncomment \"Return B1 >> B2, out of range second operand causes NIL value\";\npattern rsh_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatRSH\ncomment \"Return B1 >> B2 with candidates list, out of range second operand causes NIL value\";\npattern >>(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatRSHsignal\ncomment \"Return B >> V, raise error on out of range second operand\";\npattern >>(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatRSHsignal\ncomment \"Return B >> V with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatRSH\ncomment \"Return B >> V, out of range second operand causes NIL value\";\npattern rsh_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatRSH\ncomment \"Return B >> V with candidates list, out of range second operand causes NIL value\";\npattern >>(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatRSHsignal\ncomment \"Return V >> B, raise error on out of range second operand\";\npattern >>(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatRSHsignal\ncomment \"Return V >> B with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatRSH\ncomment \"Return V >> B, out of range second operand causes NIL value\";\npattern rsh_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatRSH\ncomment \"Return V >> B with candidates list, out of range second operand causes NIL value\";\n\npattern >>(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2, raise error on out of range second operand\";\npattern >>(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2 with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatRSH\ncomment \"Return B1 >> B2, out of range second operand causes NIL value\";\npattern rsh_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatRSH\ncomment \"Return B1 >> B2 with candidates list, out of range second operand causes NIL value\";\npattern >>(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatRSHsignal\ncomment \"Return B >> V, raise error on out of range second operand\";\npattern >>(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatRSHsignal\ncomment \"Return B >> V with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatRSH\ncomment \"Return B >> V, out of range second operand causes NIL value\";\npattern rsh_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatRSH\ncomment \"Return B >> V with candidates list, out of range second operand causes NIL value\";\npattern >>(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatRSHsignal\ncomment \"Return V >> B, raise error on out of range second operand\";\npattern >>(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatRSHsignal\ncomment \"Return V >> B with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatRSH\ncomment \"Return V >> B, out of range second operand causes NIL value\";\npattern rsh_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatRSH\ncomment \"Return V >> B with candidates list, out of range second operand causes NIL value\";\n\npattern >>(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2, raise error on out of range second operand\";\npattern >>(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2 with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B1 >> B2, out of range second operand causes NIL value\";\npattern rsh_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B1 >> B2 with candidates list, out of range second operand causes NIL value\";\npattern >>(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B >> V, raise error on out of range second operand\";\npattern >>(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B >> V with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B >> V, out of range second operand causes NIL value\";\npattern rsh_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B >> V with candidates list, out of range second operand causes NIL value\";\npattern >>(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return V >> B, raise error on out of range second operand\";\npattern >>(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return V >> B with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return V >> B, out of range second operand causes NIL value\";\npattern rsh_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return V >> B with candidates list, out of range second operand causes NIL value\";\n\npattern >>(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2, raise error on out of range second operand\";\npattern >>(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2 with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B1 >> B2, out of range second operand causes NIL value\";\npattern rsh_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B1 >> B2 with candidates list, out of range second operand causes NIL value\";\npattern >>(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B >> V, raise error on out of range second operand\";\npattern >>(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B >> V with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B >> V, out of range second operand causes NIL value\";\npattern rsh_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B >> V with candidates list, out of range second operand causes NIL value\";\npattern >>(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return V >> B, raise error on out of range second operand\";\npattern >>(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return V >> B with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return V >> B, out of range second operand causes NIL value\";\npattern rsh_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return V >> B with candidates list, out of range second operand causes NIL value\";\n\npattern >>(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2, raise error on out of range second operand\";\npattern >>(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2 with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B1 >> B2, out of range second operand causes NIL value\";\npattern rsh_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B1 >> B2 with candidates list, out of range second operand causes NIL value\";\npattern >>(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B >> V, raise error on out of range second operand\";\npattern >>(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B >> V with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B >> V, out of range second operand causes NIL value\";\npattern rsh_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B >> V with candidates list, out of range second operand causes NIL value\";\npattern >>(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return V >> B, raise error on out of range second operand\";\npattern >>(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return V >> B with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return V >> B, out of range second operand causes NIL value\";\npattern rsh_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return V >> B with candidates list, out of range second operand causes NIL value\";\n\npattern >>(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2, raise error on out of range second operand\";\npattern >>(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2 with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B1 >> B2, out of range second operand causes NIL value\";\npattern rsh_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B1 >> B2 with candidates list, out of range second operand causes NIL value\";\npattern >>(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B >> V, raise error on out of range second operand\";\npattern >>(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B >> V with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B >> V, out of range second operand causes NIL value\";\npattern rsh_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B >> V with candidates list, out of range second operand causes NIL value\";\npattern >>(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return V >> B, raise error on out of range second operand\";\npattern >>(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return V >> B with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return V >> B, out of range second operand causes NIL value\";\npattern rsh_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return V >> B with candidates list, out of range second operand causes NIL value\";\n\npattern >>(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2, raise error on out of range second operand\";\npattern >>(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B1 >> B2 with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B1 >> B2, out of range second operand causes NIL value\";\npattern rsh_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B1 >> B2 with candidates list, out of range second operand causes NIL value\";\npattern >>(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B >> V, raise error on out of range second operand\";\npattern >>(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return B >> V with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B >> V, out of range second operand causes NIL value\";\npattern rsh_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return B >> V with candidates list, out of range second operand causes NIL value\";\npattern >>(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return V >> B, raise error on out of range second operand\";\npattern >>(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\ncomment \"Return V >> B with candidates list, raise error on out of range second operand\";\npattern rsh_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return V >> B, out of range second operand causes NIL value\";\npattern rsh_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\ncomment \"Return V >> B with candidates list, out of range second operand causes NIL value\";\n\n\npattern <(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\n\npattern <=(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\n\npattern >(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\n\npattern >=(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\n\npattern ==(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:bte],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:bte],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:bte],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:bte],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:bte,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:bte,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:sht],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:sht],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:sht],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:sht],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:sht,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:sht,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:int],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:int],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:int],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:int],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:int,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:int,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:lng],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:lng],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:lng],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:lng],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:lng,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:lng,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:bte],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:bte],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:bte,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:bte,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:bte],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:bte],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:sht],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:sht],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:sht,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:sht,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:sht],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:sht],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:int],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:int],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:int,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:int,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:int],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:int],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:lng],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:lng],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:lng,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:lng,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:lng],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:lng],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:flt],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:flt],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:flt,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:flt,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:flt],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:flt],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:hge],b2:bat[:dbl],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:hge],v:dbl,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:hge],v:dbl,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:hge,b:bat[:dbl],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:hge,b:bat[:dbl],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:flt],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:flt],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:flt],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:flt],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:flt,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:flt,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:dbl],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:dbl],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:dbl],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:dbl,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:dbl,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\n\npattern !=(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:bte],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:bte],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:bte],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:bte],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:bte,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:bte,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:sht],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:sht],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:sht],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:sht],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:sht,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:sht,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:int],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:int],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:int],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:int],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:int,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:int,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:lng],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:lng],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:lng],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:lng],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:lng,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:lng,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:bte],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:bte],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:bte,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:bte,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:bte],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:bte],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:sht],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:sht],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:sht,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:sht,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:sht],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:sht],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:int],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:int],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:int,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:int,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:int],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:int],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:lng],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:lng],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:lng,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:lng,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:lng],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:lng],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:flt],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:flt],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:flt,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:flt,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:flt],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:flt],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:hge],b2:bat[:dbl],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:hge],v:dbl,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:hge],v:dbl,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:hge,b:bat[:dbl],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:hge,b:bat[:dbl],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:flt],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:flt],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:flt],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:flt],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:flt,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:flt,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:dbl],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:dbl],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:dbl],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:dbl,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:dbl,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\n\npattern cmp(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:sht],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:sht],v:hge) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:sht,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:int],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:int],v:hge) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:int,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:lng],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:lng],v:hge) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:lng,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:hge],b2:bat[:bte]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:hge],v:bte) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:hge,b:bat[:bte]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:hge],b2:bat[:sht]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:hge],v:sht) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:hge,b:bat[:sht]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:hge],b2:bat[:int]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:hge],v:int) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:hge,b:bat[:int]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:hge],b2:bat[:lng]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:hge],v:lng) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:hge,b:bat[:lng]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:hge],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:hge],v:hge) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:hge,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:hge],b2:bat[:flt]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:hge],v:flt) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:hge,b:bat[:flt]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:hge],b2:bat[:dbl]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:hge],v:dbl) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:hge,b:bat[:dbl]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:flt],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:flt],v:hge) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:flt,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\npattern cmp(b1:bat[:dbl],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2\";\npattern cmp(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B1 </==/> B2 with candidates list\";\npattern cmp(b:bat[:dbl],v:hge) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V\";\npattern cmp(v:dbl,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B\";\npattern cmp(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if B </==/> V with candidates list\";\npattern cmp(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\ncomment \"Return -1/0/1 if V </==/> B with candidates list\";\n\n\npattern between(b:bat[:hge],lo:bat[:hge],hi:bat[:hge]) :bat[:bit]\naddress CMDbatBETWEEN\ncomment \"B between LO and HI inclusive, nil border is (minus) infinity\";\npattern between(b:bat[:hge],lo:bat[:hge],hi:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatBETWEEN\ncomment \"B between LO and HI inclusive with candidates list, nil border is (minus) infinity\";\npattern between(b:bat[:hge],lo:bat[:hge],hi:hge) :bat[:bit]\naddress CMDbatBETWEEN\ncomment \"B between LO and HI inclusive, nil border is (minus) infinity\";\npattern between(b:bat[:hge],lo:bat[:hge],hi:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatBETWEEN\ncomment \"B between LO and HI inclusive with candidates list, nil border is (minus) infinity\";\npattern between(b:bat[:hge],lo:hge,hi:bat[:hge]) :bat[:bit]\naddress CMDbatBETWEEN\ncomment \"B between LO and HI inclusive, nil border is (minus) infinity\";\npattern between(b:bat[:hge],lo:hge,hi:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatBETWEEN\ncomment \"B between LO and HI inclusive with candidates list, nil border is (minus) infinity\";\npattern between(b:bat[:hge],lo:hge,hi:hge) :bat[:bit]\naddress CMDbatBETWEEN\ncomment \"B between LO and HI inclusive, nil border is (minus) infinity\";\npattern between(b:bat[:hge],lo:hge,hi:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatBETWEEN\ncomment \"B between LO and HI inclusive with candidates list, nil border is (minus) infinity\";\n\n\npattern avg(b:bat[:hge]) :dbl\naddress CMDcalcavg\ncomment \"average of non-nil values of B with candidates list\";\npattern avg(b:bat[:hge],s:bat[:oid]) :dbl\naddress CMDcalcavg\ncomment \"average of non-nil values of B\";\npattern avg(b:bat[:hge]) (:dbl, :lng)\naddress CMDcalcavg\ncomment \"average and number of non-nil values of B\";\npattern avg(b:bat[:hge],s:bat[:oid]) (:dbl, :lng)\naddress CMDcalcavg\ncomment \"average and number of non-nil values of B with candidates list\";\npattern avg(b:bat[:hge],scale:int) :dbl\naddress CMDcalcavg\ncomment \"average of non-nil values of B with candidates list\";\npattern avg(b:bat[:hge],s:bat[:oid],scale:int) :dbl\naddress CMDcalcavg\ncomment \"average of non-nil values of B\";\npattern avg(b:bat[:hge],scale:int) (:dbl, :lng)\naddress CMDcalcavg\ncomment \"average and number of non-nil values of B\";\npattern avg(b:bat[:hge],s:bat[:oid],scale:int) (:dbl, :lng)\naddress CMDcalcavg\ncomment \"average and number of non-nil values of B with candidates list\";\n\npattern bit(b:bat[:hge]) :bat[:bit]\naddress CMDconvertsignal_bit\ncomment \"cast from hge to bit, signal error on overflow\";\npattern bit(b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDconvertsignal_bit\ncomment \"cast from hge to bit with candidates list, signal error on overflow\";\npattern bit_noerror(b:bat[:hge]) :bat[:bit]\naddress CMDconvert_bit\ncomment \"cast from hge to bit\";\npattern bit_noerror(b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDconvert_bit\ncomment \"cast from hge to bit with candidates list\";\n\npattern bte(b:bat[:hge]) :bat[:bte]\naddress CMDconvertsignal_bte\ncomment \"cast from hge to bte, signal error on overflow\";\npattern bte(b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDconvertsignal_bte\ncomment \"cast from hge to bte with candidates list, signal error on overflow\";\npattern bte_noerror(b:bat[:hge]) :bat[:bte]\naddress CMDconvert_bte\ncomment \"cast from hge to bte\";\npattern bte_noerror(b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDconvert_bte\ncomment \"cast from hge to bte with candidates list\";\n\npattern sht(b:bat[:hge]) :bat[:sht]\naddress CMDconvertsignal_sht\ncomment \"cast from hge to sht, signal error on overflow\";\npattern sht(b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDconvertsignal_sht\ncomment \"cast from hge to sht with candidates list, signal error on overflow\";\npattern sht_noerror(b:bat[:hge]) :bat[:sht]\naddress CMDconvert_sht\ncomment \"cast from hge to sht\";\npattern sht_noerror(b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDconvert_sht\ncomment \"cast from hge to sht with candidates list\";\n\npattern int(b:bat[:hge]) :bat[:int]\naddress CMDconvertsignal_int\ncomment \"cast from hge to int, signal error on overflow\";\npattern int(b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDconvertsignal_int\ncomment \"cast from hge to int with candidates list, signal error on overflow\";\npattern int_noerror(b:bat[:hge]) :bat[:int]\naddress CMDconvert_int\ncomment \"cast from hge to int\";\npattern int_noerror(b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDconvert_int\ncomment \"cast from hge to int with candidates list\";\n\npattern lng(b:bat[:hge]) :bat[:lng]\naddress CMDconvertsignal_lng\ncomment \"cast from hge to lng, signal error on overflow\";\npattern lng(b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDconvertsignal_lng\ncomment \"cast from hge to lng with candidates list, signal error on overflow\";\npattern lng_noerror(b:bat[:hge]) :bat[:lng]\naddress CMDconvert_lng\ncomment \"cast from hge to lng\";\npattern lng_noerror(b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDconvert_lng\ncomment \"cast from hge to lng with candidates list\";\n\npattern hge(b:bat[:bit]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from bit to hge, signal error on overflow\";\npattern hge(b:bat[:bit],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from bit to hge with candidates list, signal error on overflow\";\npattern hge_noerror(b:bat[:bit]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from bit to hge\";\npattern hge_noerror(b:bat[:bit],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from bit to hge with candidates list\";\n\npattern hge(b:bat[:bte]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from bte to hge, signal error on overflow\";\npattern hge(b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from bte to hge with candidates list, signal error on overflow\";\npattern hge_noerror(b:bat[:bte]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from bte to hge\";\npattern hge_noerror(b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from bte to hge with candidates list\";\n\npattern hge(b:bat[:sht]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from sht to hge, signal error on overflow\";\npattern hge(b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from sht to hge with candidates list, signal error on overflow\";\npattern hge_noerror(b:bat[:sht]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from sht to hge\";\npattern hge_noerror(b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from sht to hge with candidates list\";\n\npattern hge(b:bat[:int]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from int to hge, signal error on overflow\";\npattern hge(b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from int to hge with candidates list, signal error on overflow\";\npattern hge_noerror(b:bat[:int]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from int to hge\";\npattern hge_noerror(b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from int to hge with candidates list\";\n\npattern hge(b:bat[:lng]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from lng to hge, signal error on overflow\";\npattern hge(b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from lng to hge with candidates list, signal error on overflow\";\npattern hge_noerror(b:bat[:lng]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from lng to hge\";\npattern hge_noerror(b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from lng to hge with candidates list\";\n\npattern hge(b:bat[:hge]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from hge to hge, signal error on overflow\";\npattern hge(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from hge to hge with candidates list, signal error on overflow\";\npattern hge_noerror(b:bat[:hge]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from hge to hge\";\npattern hge_noerror(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from hge to hge with candidates list\";\n\npattern hge(b:bat[:flt]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from flt to hge, signal error on overflow\";\npattern hge(b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from flt to hge with candidates list, signal error on overflow\";\npattern hge_noerror(b:bat[:flt]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from flt to hge\";\npattern hge_noerror(b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from flt to hge with candidates list\";\n\npattern hge(b:bat[:dbl]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from dbl to hge, signal error on overflow\";\npattern hge(b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from dbl to hge with candidates list, signal error on overflow\";\npattern hge_noerror(b:bat[:dbl]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from dbl to hge\";\npattern hge_noerror(b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from dbl to hge with candidates list\";\n\npattern hge(b:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from oid to hge, signal error on overflow\";\npattern hge(b:bat[:oid],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from oid to hge with candidates list, signal error on overflow\";\npattern hge_noerror(b:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from oid to hge\";\npattern hge_noerror(b:bat[:oid],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from oid to hge with candidates list\";\n\npattern hge(b:bat[:str]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from str to hge, signal error on overflow\";\npattern hge(b:bat[:str],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\ncomment \"cast from str to hge with candidates list, signal error on overflow\";\npattern hge_noerror(b:bat[:str]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from str to hge\";\npattern hge_noerror(b:bat[:str],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\ncomment \"cast from str to hge with candidates list\";\n\npattern flt(b:bat[:hge]) :bat[:flt]\naddress CMDconvertsignal_flt\ncomment \"cast from hge to flt, signal error on overflow\";\npattern flt(b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDconvertsignal_flt\ncomment \"cast from hge to flt with candidates list, signal error on overflow\";\npattern flt_noerror(b:bat[:hge]) :bat[:flt]\naddress CMDconvert_flt\ncomment \"cast from hge to flt\";\npattern flt_noerror(b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDconvert_flt\ncomment \"cast from hge to flt with candidates list\";\n\npattern dbl(b:bat[:hge]) :bat[:dbl]\naddress CMDconvertsignal_dbl\ncomment \"cast from hge to dbl, signal error on overflow\";\npattern dbl(b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDconvertsignal_dbl\ncomment \"cast from hge to dbl with candidates list, signal error on overflow\";\npattern dbl_noerror(b:bat[:hge]) :bat[:dbl]\naddress CMDconvert_dbl\ncomment \"cast from hge to dbl\";\npattern dbl_noerror(b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDconvert_dbl\ncomment \"cast from hge to dbl with candidates list\";\n\npattern oid(b:bat[:hge]) :bat[:oid]\naddress CMDconvertsignal_oid\ncomment \"cast from hge to oid, signal error on overflow\";\npattern oid(b:bat[:hge],s:bat[:oid]) :bat[:oid]\naddress CMDconvertsignal_oid\ncomment \"cast from hge to oid with candidates list, signal error on overflow\";\npattern oid_noerror(b:bat[:hge]) :bat[:oid]\naddress CMDconvert_oid\ncomment \"cast from hge to oid\";\npattern oid_noerror(b:bat[:hge],s:bat[:oid]) :bat[:oid]\naddress CMDconvert_oid\ncomment \"cast from hge to oid with candidates list\";\n" }, 
