/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "00_batcalc_hge", "\n\nmodule batcalc;\n\npattern iszero(b:bat[:hge]) :bat[:bit]\naddress CMDbatISZERO\n;\npattern iszero(b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatISZERO\n;\n\n\npattern not(b:bat[:hge]) :bat[:hge]\naddress CMDbatNOT\n;\npattern not(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatNOT\n;\n\n\npattern sign(b:bat[:hge]) :bat[:bte]\naddress CMDbatSIGN\n;\npattern sign(b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatSIGN\n;\n\n\npattern abs(b:bat[:hge]) :bat[:hge]\naddress CMDbatABS\n;\npattern abs(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatABS\n;\n\n\npattern -(b:bat[:hge]) :bat[:hge]\naddress CMDbatNEG\n;\npattern -(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatNEG\n;\n\n\npattern ++(b:bat[:hge]) :bat[:hge]\naddress CMDbatINCR\n;\npattern ++(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatINCR\n;\n\n\npattern --(b:bat[:hge]) :bat[:hge]\naddress CMDbatDECR\n;\npattern --(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDECR\n;\n\n\npattern +(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:bte],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:bte],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:hge) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:sht],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:sht],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:hge) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:int],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:int],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:hge) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:int],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:int,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:lng],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:lng],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:hge) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:hge],b2:bat[:bte]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:bte) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:bte]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:hge],b2:bat[:bte]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:bte) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:bte]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:hge],b2:bat[:sht]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:sht) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:sht]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:hge],b2:bat[:sht]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:sht) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:sht]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:hge],b2:bat[:int]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:int) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:int,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:int]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:hge],b2:bat[:int]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:int) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:int,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:int]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:hge],b2:bat[:lng]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:lng) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:lng]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:hge],b2:bat[:lng]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:lng) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:lng]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:hge],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:hge],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:hge) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\npattern +(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern +(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatADD\n;\npattern add_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:hge],b2:bat[:flt]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:flt) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:flt]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\n;\npattern +(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\n;\npattern +(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern +(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatADD\n;\npattern add_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\n;\npattern +(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\n;\npattern +(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern +(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatADD\n;\npattern add_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:flt],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:flt],v:hge) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:flt,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\npattern +(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDenlarge\n;\n\npattern +(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\n;\npattern +(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\n;\npattern +(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern +(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatADD\n;\npattern add_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatADD\n;\n\npattern +(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern +(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern add_noerror(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatADD\n;\npattern add_noerror(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\n;\npattern +(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern +(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern add_noerror(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatADD\n;\npattern add_noerror(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\n;\npattern +(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern +(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADDsignal\n;\npattern add_noerror(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatADD\n;\npattern add_noerror(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatADD\n;\n\npattern -(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:bte],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:bte],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:hge) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:sht],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:sht],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:hge) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:int],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:int],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:hge) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:int],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:int,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:lng],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:lng],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:hge) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:hge],b2:bat[:bte]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:bte) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:bte]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:hge],b2:bat[:bte]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:bte) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:bte]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:hge],b2:bat[:sht]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:sht) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:sht]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:hge],b2:bat[:sht]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:sht) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:sht]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:hge],b2:bat[:int]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:int) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:int,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:int]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:hge],b2:bat[:int]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:int) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:int,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:int]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:hge],b2:bat[:lng]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:lng) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:lng]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:hge],b2:bat[:lng]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:lng) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:lng]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:hge],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:hge],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:hge) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\npattern -(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern -(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatSUB\n;\npattern sub_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:hge],b2:bat[:flt]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:flt) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:flt]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\n;\npattern -(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\n;\npattern -(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern -(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatSUB\n;\npattern sub_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\n;\npattern -(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\n;\npattern -(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern -(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatSUB\n;\npattern sub_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:flt],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:flt],v:hge) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:flt,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\npattern -(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBenlarge\n;\n\npattern -(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\n;\npattern -(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\n;\npattern -(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern -(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatSUB\n;\npattern sub_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatSUB\n;\n\npattern -(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern -(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatSUB\n;\npattern sub_noerror(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\n;\npattern -(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern -(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatSUB\n;\npattern sub_noerror(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\n;\npattern -(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern -(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUBsignal\n;\npattern sub_noerror(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatSUB\n;\npattern sub_noerror(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatSUB\n;\n\npattern *(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:bte],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:bte],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:hge) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:sht],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:sht],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:hge) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:int],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:int],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:hge) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:int],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:int,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:lng],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:lng],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:hge) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:hge],b2:bat[:bte]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:bte) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:bte]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:hge],b2:bat[:bte]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:bte) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:bte]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:hge],b2:bat[:sht]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:sht) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:sht]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:hge],b2:bat[:sht]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:sht) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:sht]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:hge],b2:bat[:int]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:int) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:int,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:int]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:hge],b2:bat[:int]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:int) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:int,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:int]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:hge],b2:bat[:lng]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:lng) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:lng]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:hge],b2:bat[:lng]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:lng) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:lng]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:hge],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:hge],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:hge) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\npattern *(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern *(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatMUL\n;\npattern mul_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:hge],b2:bat[:flt]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:flt) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:flt]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\n;\npattern *(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\n;\npattern *(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern *(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatMUL\n;\npattern mul_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\n;\npattern *(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\n;\npattern *(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern *(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatMUL\n;\npattern mul_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:flt],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:flt],v:hge) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:flt,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\npattern *(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULenlarge\n;\n\npattern *(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\n;\npattern *(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\n;\npattern *(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern *(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatMUL\n;\npattern mul_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMUL\n;\n\npattern *(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern *(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMUL\n;\npattern mul_noerror(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\n;\npattern *(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern *(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern mul_noerror(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatMUL\n;\npattern mul_noerror(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\n;\npattern *(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern *(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMULsignal\n;\npattern mul_noerror(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMUL\n;\npattern mul_noerror(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMUL\n;\n\npattern /(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:hge) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:hge) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:hge) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:hge) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:hge) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:hge) :bat[:int]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:int]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:sht]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:hge) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:hge) :bat[:sht]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:hge]) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:sht]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:flt) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:flt) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:bte],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:bte],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:bte],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:bte],v:dbl) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:bte],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:bte],v:dbl) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:bte],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:bte,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:bte,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:bte,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:bte,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:hge) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:hge) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:hge) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:hge) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:hge) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:hge) :bat[:int]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:int]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:flt) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:flt) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:sht],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:sht],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:sht],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:sht],v:dbl) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:sht],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:sht],v:dbl) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:sht],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:sht,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:sht,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:sht,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:sht,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:int],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:int],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:int],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:int],v:hge) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:int,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:int,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:int,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:int],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:int],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:int],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:int],v:hge) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:int,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:int,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:int,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:int],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\npattern /(b:bat[:int],v:hge) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:int],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:int],v:hge) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\npattern /(v:int,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(v:int,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:int,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\n;\npattern /(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\n;\npattern /(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern /(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatDIV\n;\npattern div_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:int],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:int],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:int],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:int],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:int],v:flt) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:int],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:int],v:flt) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:int],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:int,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:int,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:int,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:int,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:int],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:int],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:int],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:int],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:int],v:dbl) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:int],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:int],v:dbl) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:int],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:int,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:int,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:int,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:int,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:lng],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:lng],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:lng],v:hge) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:lng,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:lng,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:lng],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:lng],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:lng],v:hge) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:lng,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:lng,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\npattern /(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\npattern /(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern /(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatDIV\n;\npattern div_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:lng],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:lng],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:lng],v:flt) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:lng],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:lng],v:flt) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:lng],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:lng,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:lng,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:lng,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:lng,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:lng],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:lng],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:lng],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:lng],v:dbl) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:lng],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:lng],v:dbl) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:lng],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:lng,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:lng,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:lng,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:lng,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:bte]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:bte) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:bte) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:bte]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:bte]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:bte]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:bte) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:bte) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:bte]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:bte]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:sht]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:sht) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:sht) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:sht]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:sht]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:sht]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:sht) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:sht) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:sht]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:sht]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:int]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:int) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:int,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:int) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:int]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:int]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:int]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:int) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:int,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:int) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:int]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:int]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:lng]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:lng) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:lng) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:lng]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:lng]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:lng]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:lng) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:lng) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:lng]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:lng]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:hge) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:hge) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:flt]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:flt) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:flt) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:flt]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:flt]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:flt) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:flt) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:flt]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:dbl]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:dbl) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:dbl) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:dbl]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:dbl]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:hge],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(b:bat[:hge],v:dbl) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:hge],v:dbl) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\npattern /(v:hge,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern /(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:hge,b:bat[:dbl]) :bat[:hge]\naddress CMDbatDIV\n;\npattern div_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:flt],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:flt],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:flt],v:hge) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:flt,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:flt,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\npattern /(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern /(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatDIV\n;\npattern div_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatDIV\n;\n\npattern /(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern /(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern /(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIVsignal\n;\npattern div_noerror(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatDIV\n;\npattern div_noerror(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatDIV\n;\n\n\npattern %(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:bte],v:bte) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:bte],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:bte,b:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:bte,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:bte],v:sht) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:bte],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:bte,b:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:bte,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:int]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:bte],v:int) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:bte],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:bte,b:bat[:int]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:bte,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:bte],v:lng) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:bte],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:bte,b:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:bte,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:bte],v:hge) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:bte,b:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:bte],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(b:bat[:bte],v:hge) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:bte],v:hge) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(v:bte,b:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:bte,b:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:bte],b2:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(b:bat[:bte],v:hge) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:bte],v:hge) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(v:bte,b:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:bte,b:bat[:hge]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:bte],b2:bat[:hge]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\npattern %(b:bat[:bte],v:hge) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:bte],v:hge) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\npattern %(v:bte,b:bat[:hge]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:bte,b:bat[:hge]) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\n;\npattern %(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\n;\npattern %(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern %(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatMOD\n;\npattern mod_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:sht],v:bte) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:sht],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:sht,b:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:sht,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:sht],v:sht) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:sht],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:sht,b:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:sht,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:int]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:sht],v:int) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:sht],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:sht,b:bat[:int]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:sht,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:sht],v:lng) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:sht],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:sht,b:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:sht,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:sht],v:hge) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:sht,b:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:sht],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(b:bat[:sht],v:hge) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:sht],v:hge) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(v:sht,b:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:sht,b:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:sht],b2:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(b:bat[:sht],v:hge) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:sht],v:hge) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(v:sht,b:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:sht,b:bat[:hge]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\npattern %(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\npattern %(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:int],v:bte) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:int],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:int,b:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:int,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:int],v:sht) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:int],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:int,b:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:int,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:int]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:int],v:int) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:int],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:int,b:bat[:int]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:int,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:int],v:lng) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:int],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:int,b:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:int,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:int],v:hge) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:int,b:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:int],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(b:bat[:int],v:hge) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:int],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:int],v:hge) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(v:int,b:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(v:int,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:int,b:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:lng],v:bte) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:lng],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:lng,b:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:lng,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:lng],v:sht) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:lng],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:lng,b:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:lng,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:int]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:lng],v:int) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:lng],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:lng,b:bat[:int]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:lng,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:lng],v:lng) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:lng],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:lng,b:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:lng,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:lng],v:hge) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:lng,b:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:bte]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:bte) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:bte) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:bte]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:bte]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:bte]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:bte) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:bte) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:bte]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:bte]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:bte]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:bte) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:bte) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:bte]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:bte]) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:bte]) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:bte]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:bte) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:bte) :bat[:bte]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:bte]) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:bte]) :bat[:bte]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:sht]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:sht) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:sht) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:sht]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:sht]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:sht]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:sht) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:sht) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:sht]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:sht]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:sht]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:sht) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:sht) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:sht]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:sht]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:sht]) :bat[:sht]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:sht]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:int]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:int) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:int,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:int) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:int]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:int],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:int]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:int]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:int) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:int,s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:int) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:int]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:int],s:bat[:oid]) :bat[:int]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:int]) :bat[:int]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:int]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:lng]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:lng) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:lng) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:lng]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:lng]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:lng]) :bat[:lng]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:lng]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:flt]) :bat[:flt]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:flt) :bat[:flt]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:flt]) :bat[:flt]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:dbl]) :bat[:dbl]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\n;\npattern %(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:hge],v:dbl) :bat[:dbl]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\n;\npattern %(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern %(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:hge,b:bat[:dbl]) :bat[:dbl]\naddress CMDbatMOD\n;\npattern mod_noerror(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:flt],b2:bat[:hge]) :bat[:flt]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\n;\npattern %(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:flt],v:hge) :bat[:flt]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\n;\npattern %(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern %(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:flt,b:bat[:hge]) :bat[:flt]\naddress CMDbatMOD\n;\npattern mod_noerror(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDbatMOD\n;\n\npattern %(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern %(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b1:bat[:dbl],b2:bat[:hge]) :bat[:dbl]\naddress CMDbatMOD\n;\npattern mod_noerror(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\n;\npattern %(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern %(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern mod_noerror(b:bat[:dbl],v:hge) :bat[:dbl]\naddress CMDbatMOD\n;\npattern mod_noerror(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\n;\npattern %(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern %(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMODsignal\n;\npattern mod_noerror(v:dbl,b:bat[:hge]) :bat[:dbl]\naddress CMDbatMOD\n;\npattern mod_noerror(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDbatMOD\n;\n\n\npattern and(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatAND\n;\npattern and(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatAND\n;\npattern and(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatAND\n;\npattern and(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatAND\n;\npattern and(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatAND\n;\npattern and(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatAND\n;\n\n\npattern or(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatOR\n;\npattern or(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatOR\n;\npattern or(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatOR\n;\npattern or(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatOR\n;\npattern or(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatOR\n;\npattern or(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatOR\n;\n\n\npattern xor(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatXOR\n;\npattern xor(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatXOR\n;\npattern xor(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatXOR\n;\npattern xor(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatXOR\n;\npattern xor(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatXOR\n;\npattern xor(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatXOR\n;\n\n\npattern <<(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatLSHsignal\n;\npattern <<(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatLSH\n;\npattern lsh_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatLSH\n;\npattern <<(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatLSHsignal\n;\npattern <<(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatLSH\n;\npattern lsh_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatLSH\n;\npattern <<(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatLSHsignal\n;\npattern <<(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatLSH\n;\npattern lsh_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatLSH\n;\n\npattern <<(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatLSHsignal\n;\npattern <<(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatLSH\n;\npattern lsh_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatLSH\n;\npattern <<(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatLSHsignal\n;\npattern <<(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatLSH\n;\npattern lsh_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatLSH\n;\npattern <<(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatLSHsignal\n;\npattern <<(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatLSH\n;\npattern lsh_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatLSH\n;\n\npattern <<(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatLSHsignal\n;\npattern <<(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatLSH\n;\npattern lsh_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatLSH\n;\npattern <<(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatLSHsignal\n;\npattern <<(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatLSH\n;\npattern lsh_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatLSH\n;\npattern <<(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatLSHsignal\n;\npattern <<(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatLSH\n;\npattern lsh_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatLSH\n;\n\npattern <<(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatLSHsignal\n;\npattern <<(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatLSH\n;\npattern lsh_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatLSH\n;\npattern <<(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatLSHsignal\n;\npattern <<(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatLSH\n;\npattern lsh_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatLSH\n;\npattern <<(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatLSHsignal\n;\npattern <<(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatLSH\n;\npattern lsh_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatLSH\n;\n\npattern <<(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\npattern <<(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\npattern <<(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\n\npattern <<(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\npattern <<(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\npattern <<(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\n\npattern <<(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\npattern <<(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\npattern <<(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\n\npattern <<(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\npattern <<(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\npattern <<(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\n\npattern <<(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\npattern <<(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\npattern <<(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern <<(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSHsignal\n;\npattern lsh_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatLSH\n;\npattern lsh_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatLSH\n;\n\n\npattern >>(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatRSHsignal\n;\npattern >>(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatRSH\n;\npattern rsh_noerror(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatRSH\n;\npattern >>(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatRSHsignal\n;\npattern >>(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatRSH\n;\npattern rsh_noerror(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatRSH\n;\npattern >>(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatRSHsignal\n;\npattern >>(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatRSH\n;\npattern rsh_noerror(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatRSH\n;\n\npattern >>(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatRSHsignal\n;\npattern >>(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b1:bat[:sht],b2:bat[:hge]) :bat[:sht]\naddress CMDbatRSH\n;\npattern rsh_noerror(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatRSH\n;\npattern >>(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatRSHsignal\n;\npattern >>(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b:bat[:sht],v:hge) :bat[:sht]\naddress CMDbatRSH\n;\npattern rsh_noerror(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:sht]\naddress CMDbatRSH\n;\npattern >>(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatRSHsignal\n;\npattern >>(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(v:sht,b:bat[:hge]) :bat[:sht]\naddress CMDbatRSH\n;\npattern rsh_noerror(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDbatRSH\n;\n\npattern >>(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatRSHsignal\n;\npattern >>(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b1:bat[:int],b2:bat[:hge]) :bat[:int]\naddress CMDbatRSH\n;\npattern rsh_noerror(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatRSH\n;\npattern >>(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatRSHsignal\n;\npattern >>(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b:bat[:int],v:hge) :bat[:int]\naddress CMDbatRSH\n;\npattern rsh_noerror(b:bat[:int],v:hge,s:bat[:oid]) :bat[:int]\naddress CMDbatRSH\n;\npattern >>(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatRSHsignal\n;\npattern >>(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(v:int,b:bat[:hge]) :bat[:int]\naddress CMDbatRSH\n;\npattern rsh_noerror(v:int,b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDbatRSH\n;\n\npattern >>(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatRSHsignal\n;\npattern >>(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b1:bat[:lng],b2:bat[:hge]) :bat[:lng]\naddress CMDbatRSH\n;\npattern rsh_noerror(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatRSH\n;\npattern >>(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatRSHsignal\n;\npattern >>(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b:bat[:lng],v:hge) :bat[:lng]\naddress CMDbatRSH\n;\npattern rsh_noerror(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:lng]\naddress CMDbatRSH\n;\npattern >>(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatRSHsignal\n;\npattern >>(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(v:lng,b:bat[:hge]) :bat[:lng]\naddress CMDbatRSH\n;\npattern rsh_noerror(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDbatRSH\n;\n\npattern >>(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b1:bat[:hge],b2:bat[:bte]) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\npattern >>(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b:bat[:hge],v:bte) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\npattern >>(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(v:hge,b:bat[:bte]) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\n\npattern >>(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b1:bat[:hge],b2:bat[:sht]) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\npattern >>(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b:bat[:hge],v:sht) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\npattern >>(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(v:hge,b:bat[:sht]) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\n\npattern >>(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b1:bat[:hge],b2:bat[:int]) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\npattern >>(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b:bat[:hge],v:int) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(b:bat[:hge],v:int,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\npattern >>(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(v:hge,b:bat[:int]) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(v:hge,b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\n\npattern >>(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b1:bat[:hge],b2:bat[:lng]) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\npattern >>(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b:bat[:hge],v:lng) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\npattern >>(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(v:hge,b:bat[:lng]) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\n\npattern >>(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b1:bat[:hge],b2:bat[:hge]) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\npattern >>(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(b:bat[:hge],v:hge) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\npattern >>(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern >>(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSHsignal\n;\npattern rsh_noerror(v:hge,b:bat[:hge]) :bat[:hge]\naddress CMDbatRSH\n;\npattern rsh_noerror(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDbatRSH\n;\n\n\npattern <(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\npattern <(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatLT\n;\npattern <(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatLT\n;\npattern <(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\n;\n\n\npattern <=(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\npattern <=(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatLE\n;\npattern <=(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\n;\n\n\npattern >(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\npattern >(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatGT\n;\npattern >(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatGT\n;\npattern >(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\n;\n\n\npattern >=(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\npattern >=(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatGE\n;\npattern >=(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\n;\n\n\npattern ==(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:bte],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:bte],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:bte],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:bte],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:bte,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:bte,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:sht],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:sht],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:sht],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:sht],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:sht,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:sht,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:int],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:int],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:int],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:int],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:int,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:int,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:lng],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:lng],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:lng],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:lng],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:lng,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:lng,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:bte],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:bte],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:bte,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:bte,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:bte],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:bte],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:sht],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:sht],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:sht,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:sht,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:sht],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:sht],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:int],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:int],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:int,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:int,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:int],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:int],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:lng],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:lng],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:lng,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:lng,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:lng],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:lng],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:flt],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:flt],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:flt,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:flt,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:flt],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:flt],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:hge],b2:bat[:dbl],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:dbl,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:hge],v:dbl,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:dbl],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:hge,b:bat[:dbl],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:flt],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:flt],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:flt],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:flt],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:flt,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:flt,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\n;\n\npattern ==(b1:bat[:dbl],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:dbl],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(b:bat[:dbl],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:dbl,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\npattern ==(v:dbl,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\n;\n\n\npattern !=(b1:bat[:bte],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:bte],v:hge) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:bte,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:bte],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:bte],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:bte],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:bte],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:bte,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:bte,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:sht],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:sht],v:hge) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:sht,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:sht],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:sht],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:sht],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:sht],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:sht,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:sht,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:int],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:int],v:hge) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:int,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:int],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:int],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:int],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:int],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:int,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:int,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:lng],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:lng],v:hge) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:lng,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:lng],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:lng],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:lng],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:lng],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:lng,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:lng,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:bte]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:bte) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:bte]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:bte],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:bte],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:bte,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:bte,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:bte],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:bte],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:sht]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:sht) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:sht]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:sht],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:sht],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:sht,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:sht,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:sht],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:sht],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:int]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:int) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:int]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:int],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:int],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:int,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:int,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:int],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:int],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:lng]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:lng) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:lng]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:lng],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:lng],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:lng,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:lng,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:lng],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:lng],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:hge) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:flt]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:flt) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:flt]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:flt],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:flt],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:flt,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:flt,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:flt],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:flt],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:dbl]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:dbl) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:dbl]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:hge],b2:bat[:dbl],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:dbl,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:hge],v:dbl,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:dbl],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:hge,b:bat[:dbl],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:flt],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:flt],v:hge) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:flt,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:flt],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:flt],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:flt],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:flt],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:flt,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:flt,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:dbl],b2:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:dbl],v:hge) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:dbl,b:bat[:hge]) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\n;\n\npattern !=(b1:bat[:dbl],b2:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:dbl],v:hge,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(b:bat[:dbl],v:hge,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:dbl,b:bat[:hge],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\npattern !=(v:dbl,b:bat[:hge],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\n;\n\n\npattern cmp(b1:bat[:bte],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:bte],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:bte],v:hge) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:bte,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:bte],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:bte,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:sht],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:sht],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:sht],v:hge) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:sht,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:sht],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:sht,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:int],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:int],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:int],v:hge) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:int,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:int],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:int,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:lng],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:lng],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:lng],v:hge) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:lng,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:lng],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:lng,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:hge],b2:bat[:bte]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:hge],b2:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:bte) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:bte]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:bte,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:bte],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:hge],b2:bat[:sht]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:hge],b2:bat[:sht],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:sht) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:sht]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:sht,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:sht],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:hge],b2:bat[:int]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:hge],b2:bat[:int],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:int) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:int]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:int,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:int],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:hge],b2:bat[:lng]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:hge],b2:bat[:lng],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:lng) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:lng]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:lng,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:lng],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:hge],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:hge],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:hge) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:hge],b2:bat[:flt]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:hge],b2:bat[:flt],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:flt) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:flt]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:flt,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:flt],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:hge],b2:bat[:dbl]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:hge],b2:bat[:dbl],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:dbl) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:dbl]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:hge],v:dbl,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:hge,b:bat[:dbl],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:flt],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:flt],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:flt],v:hge) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:flt,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:flt],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:flt,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\npattern cmp(b1:bat[:dbl],b2:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b1:bat[:dbl],b2:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:dbl],v:hge) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:dbl,b:bat[:hge]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(b:bat[:dbl],v:hge,s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\npattern cmp(v:dbl,b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDbatCMP\n;\n\n\npattern between(b:bat[:hge],lo:bat[:hge],hi:bat[:hge]) :bat[:bit]\naddress CMDbatBETWEEN\n;\npattern between(b:bat[:hge],lo:bat[:hge],hi:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatBETWEEN\n;\npattern between(b:bat[:hge],lo:bat[:hge],hi:hge) :bat[:bit]\naddress CMDbatBETWEEN\n;\npattern between(b:bat[:hge],lo:bat[:hge],hi:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatBETWEEN\n;\npattern between(b:bat[:hge],lo:hge,hi:bat[:hge]) :bat[:bit]\naddress CMDbatBETWEEN\n;\npattern between(b:bat[:hge],lo:hge,hi:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDbatBETWEEN\n;\npattern between(b:bat[:hge],lo:hge,hi:hge) :bat[:bit]\naddress CMDbatBETWEEN\n;\npattern between(b:bat[:hge],lo:hge,hi:hge,s:bat[:oid]) :bat[:bit]\naddress CMDbatBETWEEN\n;\n\n\npattern avg(b:bat[:hge]) :dbl\naddress CMDcalcavg\n;\npattern avg(b:bat[:hge],s:bat[:oid]) :dbl\naddress CMDcalcavg\n;\npattern avg(b:bat[:hge]) (:dbl, :lng)\naddress CMDcalcavg\n;\npattern avg(b:bat[:hge],s:bat[:oid]) (:dbl, :lng)\naddress CMDcalcavg\n;\npattern avg(b:bat[:hge],scale:int) :dbl\naddress CMDcalcavg\n;\npattern avg(b:bat[:hge],s:bat[:oid],scale:int) :dbl\naddress CMDcalcavg\n;\npattern avg(b:bat[:hge],scale:int) (:dbl, :lng)\naddress CMDcalcavg\n;\npattern avg(b:bat[:hge],s:bat[:oid],scale:int) (:dbl, :lng)\naddress CMDcalcavg\n;\n\npattern bit(b:bat[:hge]) :bat[:bit]\naddress CMDconvertsignal_bit\n;\npattern bit(b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDconvertsignal_bit\n;\npattern bit_noerror(b:bat[:hge]) :bat[:bit]\naddress CMDconvert_bit\n;\npattern bit_noerror(b:bat[:hge],s:bat[:oid]) :bat[:bit]\naddress CMDconvert_bit\n;\n\npattern bte(b:bat[:hge]) :bat[:bte]\naddress CMDconvertsignal_bte\n;\npattern bte(b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDconvertsignal_bte\n;\npattern bte_noerror(b:bat[:hge]) :bat[:bte]\naddress CMDconvert_bte\n;\npattern bte_noerror(b:bat[:hge],s:bat[:oid]) :bat[:bte]\naddress CMDconvert_bte\n;\n\npattern sht(b:bat[:hge]) :bat[:sht]\naddress CMDconvertsignal_sht\n;\npattern sht(b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDconvertsignal_sht\n;\npattern sht_noerror(b:bat[:hge]) :bat[:sht]\naddress CMDconvert_sht\n;\npattern sht_noerror(b:bat[:hge],s:bat[:oid]) :bat[:sht]\naddress CMDconvert_sht\n;\n\npattern int(b:bat[:hge]) :bat[:int]\naddress CMDconvertsignal_int\n;\npattern int(b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDconvertsignal_int\n;\npattern int_noerror(b:bat[:hge]) :bat[:int]\naddress CMDconvert_int\n;\npattern int_noerror(b:bat[:hge],s:bat[:oid]) :bat[:int]\naddress CMDconvert_int\n;\n\npattern lng(b:bat[:hge]) :bat[:lng]\naddress CMDconvertsignal_lng\n;\npattern lng(b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDconvertsignal_lng\n;\npattern lng_noerror(b:bat[:hge]) :bat[:lng]\naddress CMDconvert_lng\n;\npattern lng_noerror(b:bat[:hge],s:bat[:oid]) :bat[:lng]\naddress CMDconvert_lng\n;\n\npattern hge(b:bat[:bit]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge(b:bat[:bit],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge_noerror(b:bat[:bit]) :bat[:hge]\naddress CMDconvert_hge\n;\npattern hge_noerror(b:bat[:bit],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\n;\n\npattern hge(b:bat[:bte]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge(b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge_noerror(b:bat[:bte]) :bat[:hge]\naddress CMDconvert_hge\n;\npattern hge_noerror(b:bat[:bte],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\n;\n\npattern hge(b:bat[:sht]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge(b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge_noerror(b:bat[:sht]) :bat[:hge]\naddress CMDconvert_hge\n;\npattern hge_noerror(b:bat[:sht],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\n;\n\npattern hge(b:bat[:int]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge(b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge_noerror(b:bat[:int]) :bat[:hge]\naddress CMDconvert_hge\n;\npattern hge_noerror(b:bat[:int],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\n;\n\npattern hge(b:bat[:lng]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge(b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge_noerror(b:bat[:lng]) :bat[:hge]\naddress CMDconvert_hge\n;\npattern hge_noerror(b:bat[:lng],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\n;\n\npattern hge(b:bat[:hge]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge_noerror(b:bat[:hge]) :bat[:hge]\naddress CMDconvert_hge\n;\npattern hge_noerror(b:bat[:hge],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\n;\n\npattern hge(b:bat[:flt]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge(b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge_noerror(b:bat[:flt]) :bat[:hge]\naddress CMDconvert_hge\n;\npattern hge_noerror(b:bat[:flt],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\n;\n\npattern hge(b:bat[:dbl]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge(b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge_noerror(b:bat[:dbl]) :bat[:hge]\naddress CMDconvert_hge\n;\npattern hge_noerror(b:bat[:dbl],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\n;\n\npattern hge(b:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge(b:bat[:oid],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge_noerror(b:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\n;\npattern hge_noerror(b:bat[:oid],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\n;\n\npattern hge(b:bat[:str]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge(b:bat[:str],s:bat[:oid]) :bat[:hge]\naddress CMDconvertsignal_hge\n;\npattern hge_noerror(b:bat[:str]) :bat[:hge]\naddress CMDconvert_hge\n;\npattern hge_noerror(b:bat[:str],s:bat[:oid]) :bat[:hge]\naddress CMDconvert_hge\n;\n\npattern flt(b:bat[:hge]) :bat[:flt]\naddress CMDconvertsignal_flt\n;\npattern flt(b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDconvertsignal_flt\n;\npattern flt_noerror(b:bat[:hge]) :bat[:flt]\naddress CMDconvert_flt\n;\npattern flt_noerror(b:bat[:hge],s:bat[:oid]) :bat[:flt]\naddress CMDconvert_flt\n;\n\npattern dbl(b:bat[:hge]) :bat[:dbl]\naddress CMDconvertsignal_dbl\n;\npattern dbl(b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDconvertsignal_dbl\n;\npattern dbl_noerror(b:bat[:hge]) :bat[:dbl]\naddress CMDconvert_dbl\n;\npattern dbl_noerror(b:bat[:hge],s:bat[:oid]) :bat[:dbl]\naddress CMDconvert_dbl\n;\n\npattern oid(b:bat[:hge]) :bat[:oid]\naddress CMDconvertsignal_oid\n;\npattern oid(b:bat[:hge],s:bat[:oid]) :bat[:oid]\naddress CMDconvertsignal_oid\n;\npattern oid_noerror(b:bat[:hge]) :bat[:oid]\naddress CMDconvert_oid\n;\npattern oid_noerror(b:bat[:hge],s:bat[:oid]) :bat[:oid]\naddress CMDconvert_oid\n;\n" }, 
