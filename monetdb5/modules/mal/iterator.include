{ "iterator",
"# This Source Code Form is subject to the terms of the Mozilla Public \n"
"# License, v. 2.0.  If a copy of the MPL was not distributed with this \n"
"# file, You can obtain one at http://mozilla.org/MPL/2.0/. \n"
"# \n"
"# Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V. \n"
"module iterator; \n"
"command new(b:bat[:any_2], size:lng) (:lng,:bat[:any_2]) \n"
"address ITRnewChunk \n"
"comment \"Create an iterator with fixed granule size. \n"
"	  The result is a view.\"; \n"
"command next(b:bat[:any_2], size:lng) (:lng, :bat[:any_2]) \n"
"address ITRnextChunk \n"
"comment \"Produce the next chunk for processing.\"; \n"
"pattern new(b:bat[:any_2]) (h:oid, t:any_2) \n"
"address ITRbunIterator \n"
"comment \"Process the buns one by one extracted from a void table.\"; \n"
"pattern next(b:bat[:any_2]) (h:oid, t:any_2) \n"
"address ITRbunNext \n"
"comment \"Produce the next bun for processing.\"; \n"
"command next(step:oid,last:oid):oid \n"
"address ITRnext_oid;  \n"
"command next(step:sht,last:sht):sht \n"
"address ITRnext_sht;  \n"
"command next(step:int,last:int):int \n"
"address ITRnext_int;  \n"
"command next(step:lng,last:lng):lng \n"
"address ITRnext_lng;  \n"
"command next(step:flt,last:flt):flt \n"
"address ITRnext_flt;  \n"
"command next(step:dbl,last:dbl):dbl \n"
"address ITRnext_dbl  \n"
"comment \"Advances the iterator with a fixed value\"; \n"
},
