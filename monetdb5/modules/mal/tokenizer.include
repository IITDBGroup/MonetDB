{ "tokenizer",
"# This Source Code Form is subject to the terms of the Mozilla Public \n"
"# License, v. 2.0.  If a copy of the MPL was not distributed with this \n"
"# file, You can obtain one at http://mozilla.org/MPL/2.0/. \n"
"# \n"
"# Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V. \n"
"module tokenizer \n"
"comment \"The tokenizer provides fast access to a large collection of strings \n"
"based on a vertical fragmented representation.\"; \n"
"command open(name:str):void \n"
"address TKNZRopen \n"
"comment \"open the named tokenizer store, a new one is created if the specified name does not exist\"; \n"
"command close():void \n"
"address TKNZRclose \n"
"comment \"close the current tokenizer store\"; \n"
"pattern take(i:oid):str \n"
"address TKNZRtakeOid \n"
"comment \"reconstruct and returns the i-th string\"; \n"
"pattern locate(s:str):oid \n"
"address TKNZRlocate \n"
"comment \"if the given string is in the store returns its oid, otherwise oid_nil\"; \n"
"command append(u:str):oid \n"
"address TKNZRappend \n"
"comment \"tokenize a new string and append it to the tokenizer (duplicate elimination is performed)\"; \n"
"command depositFile(fnme:str):void \n"
"address TKNZRdepositFile \n"
"comment \"batch insertion from a file of strings to tokenize, each string is separated by a new line\"; \n"
"command getLevel(i:int):bat[:str] \n"
"address TKNZRgetLevel \n"
"comment \"administrative function that returns the bat on level i\"; \n"
"command getIndex():bat[:oid] \n"
"address TKNZRgetIndex \n"
"comment \"administrative function that returns the INDEX bat\"; \n"
"command getCount():bat[:lng] \n"
"address TKNZRgetCount \n"
"comment \"debugging function that returns the size of the bats at each level\"; \n"
"command getCardinality():bat[:lng] \n"
"address TKNZRgetCardinality \n"
"comment \"debugging function that returns the unique tokens at each level\"; \n"
},
