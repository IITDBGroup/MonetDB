/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "batmtime", "\n\nmodule batcalc;\n\npattern <(b1:bat[:date],b2:bat[:date]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:date],b2:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:date],v:date) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:date],v:date,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:date,b:bat[:date]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:date,b:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:daytime],b2:bat[:daytime]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:daytime],b2:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:daytime],v:daytime) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:daytime],v:daytime,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:daytime,b:bat[:daytime]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:daytime,b:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <(b1:bat[:timestamp],b2:bat[:timestamp]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2\";\npattern <(b1:bat[:timestamp],b2:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B1 < B2 with candidates list\";\npattern <(b:bat[:timestamp],v:timestamp) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V\";\npattern <(b:bat[:timestamp],v:timestamp,s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return B < V with candidates list\";\npattern <(v:timestamp,b:bat[:timestamp]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B\";\npattern <(v:timestamp,b:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatLT\ncomment \"Return V < B with candidates list\";\n\npattern <=(b1:bat[:date],b2:bat[:date]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:date],b2:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:date],v:date) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:date],v:date,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:date,b:bat[:date]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:date,b:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:daytime],b2:bat[:daytime]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:daytime],b2:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:daytime],v:daytime) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:daytime],v:daytime,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:daytime,b:bat[:daytime]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:daytime,b:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern <=(b1:bat[:timestamp],b2:bat[:timestamp]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2\";\npattern <=(b1:bat[:timestamp],b2:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B1 <= B2 with candidates list\";\npattern <=(b:bat[:timestamp],v:timestamp) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V\";\npattern <=(b:bat[:timestamp],v:timestamp,s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return B <= V with candidates list\";\npattern <=(v:timestamp,b:bat[:timestamp]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B\";\npattern <=(v:timestamp,b:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatLE\ncomment \"Return V <= B with candidates list\";\n\npattern >(b1:bat[:date],b2:bat[:date]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:date],b2:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:date],v:date) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:date],v:date,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:date,b:bat[:date]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:date,b:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:daytime],b2:bat[:daytime]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:daytime],b2:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:daytime],v:daytime) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:daytime],v:daytime,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:daytime,b:bat[:daytime]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:daytime,b:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >(b1:bat[:timestamp],b2:bat[:timestamp]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2\";\npattern >(b1:bat[:timestamp],b2:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B1 > B2 with candidates list\";\npattern >(b:bat[:timestamp],v:timestamp) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V\";\npattern >(b:bat[:timestamp],v:timestamp,s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return B > V with candidates list\";\npattern >(v:timestamp,b:bat[:timestamp]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B\";\npattern >(v:timestamp,b:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatGT\ncomment \"Return V > B with candidates list\";\n\npattern >=(b1:bat[:date],b2:bat[:date]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:date],b2:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:date],v:date) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:date],v:date,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:date,b:bat[:date]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:date,b:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:daytime],b2:bat[:daytime]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:daytime],b2:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:daytime],v:daytime) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:daytime],v:daytime,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:daytime,b:bat[:daytime]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:daytime,b:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern >=(b1:bat[:timestamp],b2:bat[:timestamp]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2\";\npattern >=(b1:bat[:timestamp],b2:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B1 >= B2 with candidates list\";\npattern >=(b:bat[:timestamp],v:timestamp) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V\";\npattern >=(b:bat[:timestamp],v:timestamp,s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return B >= V with candidates list\";\npattern >=(v:timestamp,b:bat[:timestamp]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B\";\npattern >=(v:timestamp,b:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatGE\ncomment \"Return V >= B with candidates list\";\n\npattern ==(b1:bat[:date],b2:bat[:date]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:date],b2:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:date],v:date) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:date],v:date,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:date,b:bat[:date]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:date,b:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:daytime],b2:bat[:daytime]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:daytime],b2:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:daytime],v:daytime) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:daytime],v:daytime,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:daytime,b:bat[:daytime]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:daytime,b:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:timestamp],b2:bat[:timestamp]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:timestamp],b2:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:timestamp],v:timestamp) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:timestamp],v:timestamp,s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:timestamp,b:bat[:timestamp]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:timestamp,b:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:date],b2:bat[:date],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:date],b2:bat[:date],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:date],v:date,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:date],v:date,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:date,b:bat[:date],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:date,b:bat[:date],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:daytime],b2:bat[:daytime],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:daytime],b2:bat[:daytime],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:daytime],v:daytime,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:daytime],v:daytime,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:daytime,b:bat[:daytime],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:daytime,b:bat[:daytime],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern ==(b1:bat[:timestamp],b2:bat[:timestamp],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2\";\npattern ==(b1:bat[:timestamp],b2:bat[:timestamp],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B1 == B2 with candidates list\";\npattern ==(b:bat[:timestamp],v:timestamp,nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V\";\npattern ==(b:bat[:timestamp],v:timestamp,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return B == V with candidates list\";\npattern ==(v:timestamp,b:bat[:timestamp],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B\";\npattern ==(v:timestamp,b:bat[:timestamp],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatEQ\ncomment \"Return V == B with candidates list\";\n\npattern !=(b1:bat[:date],b2:bat[:date]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:date],b2:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:date],v:date) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:date],v:date,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:date,b:bat[:date]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:date,b:bat[:date],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:daytime],b2:bat[:daytime]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:daytime],b2:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:daytime],v:daytime) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:daytime],v:daytime,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:daytime,b:bat[:daytime]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:daytime,b:bat[:daytime],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:timestamp],b2:bat[:timestamp]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:timestamp],b2:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:timestamp],v:timestamp) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:timestamp],v:timestamp,s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:timestamp,b:bat[:timestamp]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:timestamp,b:bat[:timestamp],s:bat[:oid]) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:date],b2:bat[:date],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:date],b2:bat[:date],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:date],v:date,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:date],v:date,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:date,b:bat[:date],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:date,b:bat[:date],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:daytime],b2:bat[:daytime],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:daytime],b2:bat[:daytime],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:daytime],v:daytime,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:daytime],v:daytime,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:daytime,b:bat[:daytime],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:daytime,b:bat[:daytime],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\npattern !=(b1:bat[:timestamp],b2:bat[:timestamp],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2\";\npattern !=(b1:bat[:timestamp],b2:bat[:timestamp],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B1 != B2 with candidates list\";\npattern !=(b:bat[:timestamp],v:timestamp,nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V\";\npattern !=(b:bat[:timestamp],v:timestamp,s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return B != V with candidates list\";\npattern !=(v:timestamp,b:bat[:timestamp],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B\";\npattern !=(v:timestamp,b:bat[:timestamp],s:bat[:oid],nil_matches:bit) :bat[:bit]\naddress CMDbatNE\ncomment \"Return V != B with candidates list\";\n\nmodule batmtime;\n\ncommand diff(b1:bat[:date],b2:bat[:date]) :bat[:int]\naddress MTIMEdate_diff_bulk\ncomment \"Difference of two sets of date.\";\n\ncommand diff(b1:bat[:timestamp],b2:bat[:timestamp]) :bat[:lng]\naddress MTIMEtimestamp_diff_bulk\ncomment \"Difference of two sets of timestamp.\";\n" }, 
