/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "mal_io", "\nmodule io;\npattern stdin():bstream\naddress io_stdin\ncomment \"return the input stream to the database client\";\npattern stderr():streams\naddress io_stderr\ncomment \"return the error stream for the database console\";\npattern stdout():streams\naddress io_stdout\ncomment \"return the output stream for the database client\";\n\npattern print(val:any_1,lst:any...):void \naddress IOprint_val\ncomment \"Print a MAL value tuple .\";\n\npattern print(b1:bat[:any]...):void \naddress IOtable\ncomment \"BATs are printed with '#' for legend \n\tlines, and the BUNs on seperate lines \n\tbetween brackets, containing each to \n\tcomma separated values (head and tail). \n\tIf multiple BATs are passed for printing, \n\tprint() performs an implicit natural \n\tjoin on the void head, producing a multi attribute table.\";\n\npattern print(val:any_1):void \naddress IOprint_val\ncomment \"Print a MAL value.\";\npattern print(val:bat[:any_1]):void \naddress IOprint_val\ncomment \"Print a MAL value column .\";\n\npattern printf(fmt:str,val:any...):void \naddress IOprintf\ncomment \"Select default format \";\npattern printf(fmt:str):void \naddress IOprintf\ncomment \"Select default format \";\n\npattern printf(filep:streams,fmt:str,val:any...):void \naddress IOprintfStream\ncomment \"Select default format \";\npattern printf(filep:streams,fmt:str):void \naddress IOprintfStream\ncomment \"Select default format \";\n\ncommand export(b:bat[:any_2], filepath:str)  \naddress IOexport\ncomment \"Export a BAT as ASCII to a file. If the 'filepath' is not absolute, it\n is put into the $DBPATH directory. Success of failure is indicated.\";\n\ncommand import(b:bat[:any_2], filepath:str)\naddress IOimport\ncomment \"Import a BAT from an ASCII dump. The tuples are appended to the\n first argument. Its signature must match the dump,\n else parsing errors will occur as an exception.\";\n\ncommand setmallocsuccesscount(count:lng):void\naddress IOsetmallocsuccesscount\ncomment \"Set number of mallocs that are allowed to succeed.\";" }, 
