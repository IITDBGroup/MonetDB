{ "profiler",
"# This Source Code Form is subject to the terms of the Mozilla Public \n"
"# License, v. 2.0.  If a copy of the MPL was not distributed with this \n"
"# file, You can obtain one at http://mozilla.org/MPL/2.0/. \n"
"# \n"
"# Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V. \n"
"module profiler; \n"
"pattern start() \n"
"address CMDstartProfiler \n"
"comment \"Start offline performance profiling\"; \n"
"pattern stop():void \n"
"address CMDstopProfiler \n"
"comment \"Stop offline performance profiling\"; \n"
"command starttrace() \n"
"address CMDstartTrace \n"
"comment \"Start collecting trace information\"; \n"
"command starttrace(path:str) \n"
"address CMDstartTracePath \n"
"comment \"Start collecting trace information and keep around in 'path' directory\"; \n"
"command stoptrace():void \n"
"address CMDstopTrace \n"
"comment \"Stop collecting trace information\"; \n"
"command stoptrace(path:str):void \n"
"address CMDstopTracePath \n"
"comment \"Stop collecting trace information\"; \n"
"command setheartbeat(b:int):void \n"
"address CMDsetHeartbeat \n"
"comment \"Set heart beat performance tracing\"; \n"
"command getlimit():int \n"
"address CMDgetprofilerlimit \n"
"comment \"Avoid floading of events\"; \n"
"command setlimit(i:int) \n"
"address CMDsetprofilerlimit \n"
"comment \"Change the profiler event limit counter\"; \n"
"pattern openstream(mode:int):void \n"
"address CMDopenProfilerStream \n"
"comment \"Start profiling the events, send to output stream\"; \n"
"command closestream():void \n"
"address CMDcloseProfilerStream \n"
"comment \"Stop offline proviling\"; \n"
"command noop():void \n"
"address CMDnoopProfiler \n"
"comment \"Fetch any pending performance events\"; \n"
"command getTrace(e:str):bat[:any_1] \n"
"address CMDgetTrace \n"
"comment \"Get the trace details of a specific event\"; \n"
"command cleanup():void \n"
"address CMDcleanupTraces \n"
"comment \"Remove the temporary tables for profiling\"; \n"
"command getDiskReads():lng \n"
"address CMDgetDiskReads \n"
"comment \"Obtain the number of physical reads\"; \n"
"command getDiskWrites():lng \n"
"address CMDgetDiskWrites \n"
"comment \"Obtain the number of physical reads\"; \n"
"command getUserTime():lng \n"
"address CMDgetUserTime \n"
"comment \"Obtain the user timing information.\"; \n"
"command getSystemTime():lng \n"
"address CMDgetSystemTime \n"
"comment \"Obtain the user timing information.\"; \n"
"command cpustats()(user:lng, nice:lng, sys:lng,idle:lng,iowait:lng) \n"
"address CMDcpustats \n"
"comment \"Extract cpu statistics from the kernel\"; \n"
"command cpuload(user:lng, nice:lng, sys:lng,idle:lng,iowait:lng)(cycles:int,io:int) \n"
"address CMDcpuloadPercentage \n"
"comment \"Calculate the average cpu load percentage and io waiting times\"; \n"
},
