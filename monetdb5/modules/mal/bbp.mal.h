/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "bbp", "\nmodule bbp;\n\npattern bind(name:str):bat[:any_2]\naddress CMDbbpbind\ncomment \"Locate the BAT using its logical name\";\n\ncommand getIndex(b:bat[:any_2]):int\naddress CMDbbpgetIndex\ncomment \"Retrieve the index in the BBP\";\n\ncommand getNames() :bat[:str] \t\naddress CMDbbpNames\ncomment \"Map BAT into its bbp name\";\n\ncommand get() (id:bat[:int], \n\t\t\tns:bat[:str],\n\t       tt:bat[:str],\n\t       cnt:bat[:lng], refcnt:bat[:int],\n\t       lrefcnt:bat[:int], location:bat[:str],\n\t       heat:bat[:int], dirty:bat[:str],\n\t       status:bat[:str], kind:bat[:str])\naddress CMDbbp\ncomment \"bpp\";\n\ncommand getName( b:bat[:any_1]):str\naddress CMDbbpName\ncomment \"Map a BAT into its internal name\";\ncommand setName( b:bat[:any_1], n:str):str\naddress CMDsetName\ncomment \"Rename a BAT\";\ncommand getCount() :bat[:lng] \t\naddress CMDbbpCount\ncomment \"Create a BAT with the cardinalities of all known BATs\";\ncommand getRefCount() :bat[:int] \t\naddress CMDbbpRefCount\ncomment \"Create a BAT with the (hard) reference counts\";\ncommand getLRefCount() :bat[:int] \t\naddress CMDbbpLRefCount\ncomment \"Create a BAT with the logical reference counts\";\ncommand getLocation() :bat[:str] \t\naddress CMDbbpLocation\ncomment \"Create a BAT with their disk locations\";\ncommand getDirty() :bat[:str] \t\naddress CMDbbpDirty\ncomment \"Create a BAT with the dirty/ diffs/clean status\";\ncommand getStatus() :bat[:str] \t\naddress CMDbbpStatus\ncomment \"Create a BAT with the disk/load status\";\ncommand getKind():bat[:str] \naddress CMDbbpKind\ncomment \"Create a BAT with the persistency status\";\ncommand getRefCount(b:bat[:any_1]) :int\naddress CMDgetBATrefcnt\ncomment \"Utility for debugging MAL interpreter\";\ncommand getLRefCount(b:bat[:any_1]) :int\naddress CMDgetBATlrefcnt\ncomment \"Utility for debugging MAL interpreter\";\ncommand getDiskSpace() :lng\naddress CMDbbpDiskSpace\ncomment \"Estimate the amount of disk space occupied by dbpath\";\ncommand getPageSize():int\naddress CMDgetPageSize\ncomment \"Obtain the memory page size\";" }, 
