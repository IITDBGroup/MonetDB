/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "00_calc_hge", "\n\nmodule calc;\n\npattern iszero(v:hge) :bit\naddress CMDvarISZERO\n;\n\n\npattern not(v:hge) :hge\naddress CMDvarNOT\n;\n\n\npattern sign(v:hge) :bte\naddress CMDvarSIGN\n;\n\n\npattern abs(v:hge) :hge\naddress CMDvarABS\n;\n\n\npattern -(v:hge) :hge\naddress CMDvarNEG\n;\n\n\npattern ++(v:hge) :hge\naddress CMDvarINCRsignal\n;\n\n\npattern --(v:hge) :hge\naddress CMDvarDECRsignal\n;\n\n\npattern +(v1:bte,v2:bte) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:bte,v2:sht) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:bte,v2:int) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:bte,v2:lng) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:bte,v2:hge) :dbl\naddress CMDvarADDsignal\n;\n\npattern +(v1:bte,v2:hge) :flt\naddress CMDvarADDsignal\n;\n\npattern +(v1:bte,v2:hge) :hge\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:bte,v2:hge) :hge\naddress CMDvarADD\n;\n\npattern +(v1:sht,v2:bte) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:sht,v2:sht) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:sht,v2:int) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:sht,v2:lng) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:sht,v2:hge) :dbl\naddress CMDvarADDsignal\n;\n\npattern +(v1:sht,v2:hge) :flt\naddress CMDvarADDsignal\n;\n\npattern +(v1:sht,v2:hge) :hge\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:sht,v2:hge) :hge\naddress CMDvarADD\n;\n\npattern +(v1:int,v2:bte) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:int,v2:sht) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:int,v2:int) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:int,v2:lng) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:int,v2:hge) :dbl\naddress CMDvarADDsignal\n;\n\npattern +(v1:int,v2:hge) :flt\naddress CMDvarADDsignal\n;\n\npattern +(v1:int,v2:hge) :hge\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:int,v2:hge) :hge\naddress CMDvarADD\n;\n\npattern +(v1:lng,v2:bte) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:lng,v2:sht) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:lng,v2:int) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:lng,v2:lng) :hge\naddress CMDvarADDsignal\n;\n\npattern +(v1:lng,v2:hge) :dbl\naddress CMDvarADDsignal\n;\n\npattern +(v1:lng,v2:hge) :flt\naddress CMDvarADDsignal\n;\n\npattern +(v1:lng,v2:hge) :hge\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:lng,v2:hge) :hge\naddress CMDvarADD\n;\n\npattern +(v1:hge,v2:bte) :dbl\naddress CMDvarADDsignal\n;\n\npattern +(v1:hge,v2:bte) :flt\naddress CMDvarADDsignal\n;\n\npattern +(v1:hge,v2:bte) :hge\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:hge,v2:bte) :hge\naddress CMDvarADD\n;\n\npattern +(v1:hge,v2:sht) :dbl\naddress CMDvarADDsignal\n;\n\npattern +(v1:hge,v2:sht) :flt\naddress CMDvarADDsignal\n;\n\npattern +(v1:hge,v2:sht) :hge\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:hge,v2:sht) :hge\naddress CMDvarADD\n;\n\npattern +(v1:hge,v2:int) :dbl\naddress CMDvarADDsignal\n;\n\npattern +(v1:hge,v2:int) :flt\naddress CMDvarADDsignal\n;\n\npattern +(v1:hge,v2:int) :hge\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:hge,v2:int) :hge\naddress CMDvarADD\n;\n\npattern +(v1:hge,v2:lng) :dbl\naddress CMDvarADDsignal\n;\n\npattern +(v1:hge,v2:lng) :flt\naddress CMDvarADDsignal\n;\n\npattern +(v1:hge,v2:lng) :hge\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:hge,v2:lng) :hge\naddress CMDvarADD\n;\n\npattern +(v1:hge,v2:hge) :dbl\naddress CMDvarADDsignal\n;\n\npattern +(v1:hge,v2:hge) :flt\naddress CMDvarADDsignal\n;\n\npattern +(v1:hge,v2:hge) :hge\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:hge,v2:hge) :hge\naddress CMDvarADD\n;\n\npattern +(v1:hge,v2:flt) :dbl\naddress CMDvarADDsignal\n;\n\npattern +(v1:hge,v2:flt) :flt\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:hge,v2:flt) :flt\naddress CMDvarADD\n;\n\npattern +(v1:hge,v2:dbl) :dbl\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:hge,v2:dbl) :dbl\naddress CMDvarADD\n;\n\npattern +(v1:flt,v2:hge) :dbl\naddress CMDvarADDsignal\n;\n\npattern +(v1:flt,v2:hge) :flt\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:flt,v2:hge) :flt\naddress CMDvarADD\n;\n\npattern +(v1:dbl,v2:hge) :dbl\naddress CMDvarADDsignal\n;\npattern add_noerror(v1:dbl,v2:hge) :dbl\naddress CMDvarADD\n;\n\npattern -(v1:bte,v2:bte) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:bte,v2:sht) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:bte,v2:int) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:bte,v2:lng) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:bte,v2:hge) :dbl\naddress CMDvarSUBsignal\n;\n\npattern -(v1:bte,v2:hge) :flt\naddress CMDvarSUBsignal\n;\n\npattern -(v1:bte,v2:hge) :hge\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:bte,v2:hge) :hge\naddress CMDvarSUB\n;\n\npattern -(v1:sht,v2:bte) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:sht,v2:sht) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:sht,v2:int) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:sht,v2:lng) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:sht,v2:hge) :dbl\naddress CMDvarSUBsignal\n;\n\npattern -(v1:sht,v2:hge) :flt\naddress CMDvarSUBsignal\n;\n\npattern -(v1:sht,v2:hge) :hge\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:sht,v2:hge) :hge\naddress CMDvarSUB\n;\n\npattern -(v1:int,v2:bte) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:int,v2:sht) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:int,v2:int) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:int,v2:lng) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:int,v2:hge) :dbl\naddress CMDvarSUBsignal\n;\n\npattern -(v1:int,v2:hge) :flt\naddress CMDvarSUBsignal\n;\n\npattern -(v1:int,v2:hge) :hge\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:int,v2:hge) :hge\naddress CMDvarSUB\n;\n\npattern -(v1:lng,v2:bte) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:lng,v2:sht) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:lng,v2:int) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:lng,v2:lng) :hge\naddress CMDvarSUBsignal\n;\n\npattern -(v1:lng,v2:hge) :dbl\naddress CMDvarSUBsignal\n;\n\npattern -(v1:lng,v2:hge) :flt\naddress CMDvarSUBsignal\n;\n\npattern -(v1:lng,v2:hge) :hge\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:lng,v2:hge) :hge\naddress CMDvarSUB\n;\n\npattern -(v1:hge,v2:bte) :dbl\naddress CMDvarSUBsignal\n;\n\npattern -(v1:hge,v2:bte) :flt\naddress CMDvarSUBsignal\n;\n\npattern -(v1:hge,v2:bte) :hge\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:hge,v2:bte) :hge\naddress CMDvarSUB\n;\n\npattern -(v1:hge,v2:sht) :dbl\naddress CMDvarSUBsignal\n;\n\npattern -(v1:hge,v2:sht) :flt\naddress CMDvarSUBsignal\n;\n\npattern -(v1:hge,v2:sht) :hge\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:hge,v2:sht) :hge\naddress CMDvarSUB\n;\n\npattern -(v1:hge,v2:int) :dbl\naddress CMDvarSUBsignal\n;\n\npattern -(v1:hge,v2:int) :flt\naddress CMDvarSUBsignal\n;\n\npattern -(v1:hge,v2:int) :hge\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:hge,v2:int) :hge\naddress CMDvarSUB\n;\n\npattern -(v1:hge,v2:lng) :dbl\naddress CMDvarSUBsignal\n;\n\npattern -(v1:hge,v2:lng) :flt\naddress CMDvarSUBsignal\n;\n\npattern -(v1:hge,v2:lng) :hge\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:hge,v2:lng) :hge\naddress CMDvarSUB\n;\n\npattern -(v1:hge,v2:hge) :dbl\naddress CMDvarSUBsignal\n;\n\npattern -(v1:hge,v2:hge) :flt\naddress CMDvarSUBsignal\n;\n\npattern -(v1:hge,v2:hge) :hge\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:hge,v2:hge) :hge\naddress CMDvarSUB\n;\n\npattern -(v1:hge,v2:flt) :dbl\naddress CMDvarSUBsignal\n;\n\npattern -(v1:hge,v2:flt) :flt\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:hge,v2:flt) :flt\naddress CMDvarSUB\n;\n\npattern -(v1:hge,v2:dbl) :dbl\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:hge,v2:dbl) :dbl\naddress CMDvarSUB\n;\n\npattern -(v1:flt,v2:hge) :dbl\naddress CMDvarSUBsignal\n;\n\npattern -(v1:flt,v2:hge) :flt\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:flt,v2:hge) :flt\naddress CMDvarSUB\n;\n\npattern -(v1:dbl,v2:hge) :dbl\naddress CMDvarSUBsignal\n;\npattern sub_noerror(v1:dbl,v2:hge) :dbl\naddress CMDvarSUB\n;\n\npattern *(v1:bte,v2:bte) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:bte,v2:sht) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:bte,v2:int) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:bte,v2:lng) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:bte,v2:hge) :dbl\naddress CMDvarMULsignal\n;\n\npattern *(v1:bte,v2:hge) :flt\naddress CMDvarMULsignal\n;\n\npattern *(v1:bte,v2:hge) :hge\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:bte,v2:hge) :hge\naddress CMDvarMUL\n;\n\npattern *(v1:sht,v2:bte) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:sht,v2:sht) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:sht,v2:int) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:sht,v2:lng) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:sht,v2:hge) :dbl\naddress CMDvarMULsignal\n;\n\npattern *(v1:sht,v2:hge) :flt\naddress CMDvarMULsignal\n;\n\npattern *(v1:sht,v2:hge) :hge\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:sht,v2:hge) :hge\naddress CMDvarMUL\n;\n\npattern *(v1:int,v2:bte) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:int,v2:sht) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:int,v2:int) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:int,v2:lng) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:int,v2:hge) :dbl\naddress CMDvarMULsignal\n;\n\npattern *(v1:int,v2:hge) :flt\naddress CMDvarMULsignal\n;\n\npattern *(v1:int,v2:hge) :hge\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:int,v2:hge) :hge\naddress CMDvarMUL\n;\n\npattern *(v1:lng,v2:bte) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:lng,v2:sht) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:lng,v2:int) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:lng,v2:lng) :hge\naddress CMDvarMULsignal\n;\n\npattern *(v1:lng,v2:hge) :dbl\naddress CMDvarMULsignal\n;\n\npattern *(v1:lng,v2:hge) :flt\naddress CMDvarMULsignal\n;\n\npattern *(v1:lng,v2:hge) :hge\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:lng,v2:hge) :hge\naddress CMDvarMUL\n;\n\npattern *(v1:hge,v2:bte) :dbl\naddress CMDvarMULsignal\n;\n\npattern *(v1:hge,v2:bte) :flt\naddress CMDvarMULsignal\n;\n\npattern *(v1:hge,v2:bte) :hge\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:hge,v2:bte) :hge\naddress CMDvarMUL\n;\n\npattern *(v1:hge,v2:sht) :dbl\naddress CMDvarMULsignal\n;\n\npattern *(v1:hge,v2:sht) :flt\naddress CMDvarMULsignal\n;\n\npattern *(v1:hge,v2:sht) :hge\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:hge,v2:sht) :hge\naddress CMDvarMUL\n;\n\npattern *(v1:hge,v2:int) :dbl\naddress CMDvarMULsignal\n;\n\npattern *(v1:hge,v2:int) :flt\naddress CMDvarMULsignal\n;\n\npattern *(v1:hge,v2:int) :hge\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:hge,v2:int) :hge\naddress CMDvarMUL\n;\n\npattern *(v1:hge,v2:lng) :dbl\naddress CMDvarMULsignal\n;\n\npattern *(v1:hge,v2:lng) :flt\naddress CMDvarMULsignal\n;\n\npattern *(v1:hge,v2:lng) :hge\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:hge,v2:lng) :hge\naddress CMDvarMUL\n;\n\npattern *(v1:hge,v2:hge) :dbl\naddress CMDvarMULsignal\n;\n\npattern *(v1:hge,v2:hge) :flt\naddress CMDvarMULsignal\n;\n\npattern *(v1:hge,v2:hge) :hge\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:hge,v2:hge) :hge\naddress CMDvarMUL\n;\n\npattern *(v1:hge,v2:flt) :dbl\naddress CMDvarMULsignal\n;\n\npattern *(v1:hge,v2:flt) :flt\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:hge,v2:flt) :flt\naddress CMDvarMUL\n;\n\npattern *(v1:hge,v2:dbl) :dbl\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:hge,v2:dbl) :dbl\naddress CMDvarMUL\n;\n\npattern *(v1:flt,v2:hge) :dbl\naddress CMDvarMULsignal\n;\n\npattern *(v1:flt,v2:hge) :flt\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:flt,v2:hge) :flt\naddress CMDvarMUL\n;\n\npattern *(v1:dbl,v2:hge) :dbl\naddress CMDvarMULsignal\n;\npattern mul_noerror(v1:dbl,v2:hge) :dbl\naddress CMDvarMUL\n;\n\npattern /(v1:bte,v2:bte) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:bte) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:sht) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:sht) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:int) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:int) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:lng) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:lng) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:hge) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:hge) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:hge) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:hge) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:hge) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:hge) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:hge) :lng\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:hge) :lng\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:hge) :int\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:hge) :int\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:hge) :sht\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:hge) :sht\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:hge) :bte\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:hge) :bte\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:flt) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:flt) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:bte,v2:dbl) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:bte,v2:dbl) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:bte) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:bte) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:sht) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:sht) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:int) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:int) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:lng) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:lng) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:hge) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:hge) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:hge) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:hge) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:hge) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:hge) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:hge) :lng\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:hge) :lng\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:hge) :int\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:hge) :int\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:hge) :sht\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:hge) :sht\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:flt) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:flt) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:sht,v2:dbl) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:sht,v2:dbl) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:int,v2:bte) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:int,v2:bte) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:int,v2:sht) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:int,v2:sht) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:int,v2:int) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:int,v2:int) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:int,v2:lng) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:int,v2:lng) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:int,v2:hge) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:int,v2:hge) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:int,v2:hge) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:int,v2:hge) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:int,v2:hge) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:int,v2:hge) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:int,v2:hge) :lng\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:int,v2:hge) :lng\naddress CMDvarDIV\n;\n\npattern /(v1:int,v2:hge) :int\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:int,v2:hge) :int\naddress CMDvarDIV\n;\n\npattern /(v1:int,v2:flt) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:int,v2:flt) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:int,v2:dbl) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:int,v2:dbl) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:lng,v2:bte) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:lng,v2:bte) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:lng,v2:sht) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:lng,v2:sht) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:lng,v2:int) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:lng,v2:int) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:lng,v2:lng) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:lng,v2:lng) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:lng,v2:hge) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:lng,v2:hge) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:lng,v2:hge) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:lng,v2:hge) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:lng,v2:hge) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:lng,v2:hge) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:lng,v2:hge) :lng\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:lng,v2:hge) :lng\naddress CMDvarDIV\n;\n\npattern /(v1:lng,v2:flt) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:lng,v2:flt) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:lng,v2:dbl) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:lng,v2:dbl) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:bte) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:bte) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:bte) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:bte) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:bte) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:bte) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:sht) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:sht) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:sht) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:sht) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:sht) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:sht) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:int) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:int) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:int) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:int) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:int) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:int) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:lng) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:lng) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:lng) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:lng) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:lng) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:lng) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:hge) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:hge) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:hge) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:hge) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:hge) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:hge) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:flt) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:flt) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:flt) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:flt) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:flt) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:flt) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:dbl) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:dbl) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:dbl) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:dbl) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:hge,v2:dbl) :hge\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:hge,v2:dbl) :hge\naddress CMDvarDIV\n;\n\npattern /(v1:flt,v2:hge) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:flt,v2:hge) :dbl\naddress CMDvarDIV\n;\n\npattern /(v1:flt,v2:hge) :flt\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:flt,v2:hge) :flt\naddress CMDvarDIV\n;\n\npattern /(v1:dbl,v2:hge) :dbl\naddress CMDvarDIVsignal\n;\npattern div_noerror(v1:dbl,v2:hge) :dbl\naddress CMDvarDIV\n;\n\n\npattern %(v1:bte,v2:bte) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:bte,v2:bte) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:bte,v2:sht) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:bte,v2:sht) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:bte,v2:int) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:bte,v2:int) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:bte,v2:lng) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:bte,v2:lng) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:bte,v2:hge) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:bte,v2:hge) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:bte,v2:hge) :lng\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:bte,v2:hge) :lng\naddress CMDvarMOD\n;\n\npattern %(v1:bte,v2:hge) :int\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:bte,v2:hge) :int\naddress CMDvarMOD\n;\n\npattern %(v1:bte,v2:hge) :sht\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:bte,v2:hge) :sht\naddress CMDvarMOD\n;\n\npattern %(v1:bte,v2:hge) :bte\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:bte,v2:hge) :bte\naddress CMDvarMOD\n;\n\npattern %(v1:sht,v2:bte) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:sht,v2:bte) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:sht,v2:sht) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:sht,v2:sht) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:sht,v2:int) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:sht,v2:int) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:sht,v2:lng) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:sht,v2:lng) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:sht,v2:hge) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:sht,v2:hge) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:sht,v2:hge) :lng\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:sht,v2:hge) :lng\naddress CMDvarMOD\n;\n\npattern %(v1:sht,v2:hge) :int\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:sht,v2:hge) :int\naddress CMDvarMOD\n;\n\npattern %(v1:sht,v2:hge) :sht\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:sht,v2:hge) :sht\naddress CMDvarMOD\n;\n\npattern %(v1:int,v2:bte) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:int,v2:bte) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:int,v2:sht) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:int,v2:sht) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:int,v2:int) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:int,v2:int) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:int,v2:lng) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:int,v2:lng) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:int,v2:hge) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:int,v2:hge) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:int,v2:hge) :lng\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:int,v2:hge) :lng\naddress CMDvarMOD\n;\n\npattern %(v1:int,v2:hge) :int\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:int,v2:hge) :int\naddress CMDvarMOD\n;\n\npattern %(v1:lng,v2:bte) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:lng,v2:bte) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:lng,v2:sht) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:lng,v2:sht) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:lng,v2:int) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:lng,v2:int) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:lng,v2:lng) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:lng,v2:lng) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:lng,v2:hge) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:lng,v2:hge) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:lng,v2:hge) :lng\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:lng,v2:hge) :lng\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:bte) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:bte) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:bte) :lng\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:bte) :lng\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:bte) :int\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:bte) :int\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:bte) :sht\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:bte) :sht\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:bte) :bte\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:bte) :bte\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:sht) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:sht) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:sht) :lng\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:sht) :lng\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:sht) :int\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:sht) :int\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:sht) :sht\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:sht) :sht\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:int) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:int) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:int) :lng\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:int) :lng\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:int) :int\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:int) :int\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:lng) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:lng) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:lng) :lng\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:lng) :lng\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:hge) :hge\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:hge) :hge\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:flt) :flt\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:flt) :flt\naddress CMDvarMOD\n;\n\npattern %(v1:hge,v2:dbl) :dbl\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:hge,v2:dbl) :dbl\naddress CMDvarMOD\n;\n\npattern %(v1:flt,v2:hge) :flt\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:flt,v2:hge) :flt\naddress CMDvarMOD\n;\n\npattern %(v1:dbl,v2:hge) :dbl\naddress CMDvarMODsignal\n;\npattern mod_noerror(v1:dbl,v2:hge) :dbl\naddress CMDvarMOD\n;\n\n\npattern and(v1:hge,v2:hge) :hge\naddress CMDvarAND\n;\n\n\npattern or(v1:hge,v2:hge) :hge\naddress CMDvarOR\n;\n\n\npattern xor(v1:hge,v2:hge) :hge\naddress CMDvarXOR\n;\n\n\npattern <<(v1:bte,v2:hge) :bte\naddress CMDvarLSHsignal\n;\npattern lsh_noerror(v1:bte,v2:hge) :bte\naddress CMDvarLSH\n;\n\npattern <<(v1:sht,v2:hge) :sht\naddress CMDvarLSHsignal\n;\npattern lsh_noerror(v1:sht,v2:hge) :sht\naddress CMDvarLSH\n;\n\npattern <<(v1:int,v2:hge) :int\naddress CMDvarLSHsignal\n;\npattern lsh_noerror(v1:int,v2:hge) :int\naddress CMDvarLSH\n;\n\npattern <<(v1:lng,v2:hge) :lng\naddress CMDvarLSHsignal\n;\npattern lsh_noerror(v1:lng,v2:hge) :lng\naddress CMDvarLSH\n;\n\npattern <<(v1:hge,v2:bte) :hge\naddress CMDvarLSHsignal\n;\npattern lsh_noerror(v1:hge,v2:bte) :hge\naddress CMDvarLSH\n;\n\npattern <<(v1:hge,v2:sht) :hge\naddress CMDvarLSHsignal\n;\npattern lsh_noerror(v1:hge,v2:sht) :hge\naddress CMDvarLSH\n;\n\npattern <<(v1:hge,v2:int) :hge\naddress CMDvarLSHsignal\n;\npattern lsh_noerror(v1:hge,v2:int) :hge\naddress CMDvarLSH\n;\n\npattern <<(v1:hge,v2:lng) :hge\naddress CMDvarLSHsignal\n;\npattern lsh_noerror(v1:hge,v2:lng) :hge\naddress CMDvarLSH\n;\n\npattern <<(v1:hge,v2:hge) :hge\naddress CMDvarLSHsignal\n;\npattern lsh_noerror(v1:hge,v2:hge) :hge\naddress CMDvarLSH\n;\n\n\npattern >>(v1:bte,v2:hge) :bte\naddress CMDvarRSHsignal\n;\npattern rsh_noerror(v1:bte,v2:hge) :bte\naddress CMDvarRSH\n;\n\npattern >>(v1:sht,v2:hge) :sht\naddress CMDvarRSHsignal\n;\npattern rsh_noerror(v1:sht,v2:hge) :sht\naddress CMDvarRSH\n;\n\npattern >>(v1:int,v2:hge) :int\naddress CMDvarRSHsignal\n;\npattern rsh_noerror(v1:int,v2:hge) :int\naddress CMDvarRSH\n;\n\npattern >>(v1:lng,v2:hge) :lng\naddress CMDvarRSHsignal\n;\npattern rsh_noerror(v1:lng,v2:hge) :lng\naddress CMDvarRSH\n;\n\npattern >>(v1:hge,v2:bte) :hge\naddress CMDvarRSHsignal\n;\npattern rsh_noerror(v1:hge,v2:bte) :hge\naddress CMDvarRSH\n;\n\npattern >>(v1:hge,v2:sht) :hge\naddress CMDvarRSHsignal\n;\npattern rsh_noerror(v1:hge,v2:sht) :hge\naddress CMDvarRSH\n;\n\npattern >>(v1:hge,v2:int) :hge\naddress CMDvarRSHsignal\n;\npattern rsh_noerror(v1:hge,v2:int) :hge\naddress CMDvarRSH\n;\n\npattern >>(v1:hge,v2:lng) :hge\naddress CMDvarRSHsignal\n;\npattern rsh_noerror(v1:hge,v2:lng) :hge\naddress CMDvarRSH\n;\n\npattern >>(v1:hge,v2:hge) :hge\naddress CMDvarRSHsignal\n;\npattern rsh_noerror(v1:hge,v2:hge) :hge\naddress CMDvarRSH\n;\n\n\npattern <(v1:bte,v2:hge) :bit\naddress CMDvarLT\n;\n\npattern <(v1:sht,v2:hge) :bit\naddress CMDvarLT\n;\n\npattern <(v1:int,v2:hge) :bit\naddress CMDvarLT\n;\n\npattern <(v1:lng,v2:hge) :bit\naddress CMDvarLT\n;\n\npattern <(v1:hge,v2:bte) :bit\naddress CMDvarLT\n;\n\npattern <(v1:hge,v2:sht) :bit\naddress CMDvarLT\n;\n\npattern <(v1:hge,v2:int) :bit\naddress CMDvarLT\n;\n\npattern <(v1:hge,v2:lng) :bit\naddress CMDvarLT\n;\n\npattern <(v1:hge,v2:hge) :bit\naddress CMDvarLT\n;\n\npattern <(v1:hge,v2:flt) :bit\naddress CMDvarLT\n;\n\npattern <(v1:hge,v2:dbl) :bit\naddress CMDvarLT\n;\n\npattern <(v1:flt,v2:hge) :bit\naddress CMDvarLT\n;\n\npattern <(v1:dbl,v2:hge) :bit\naddress CMDvarLT\n;\n\n\npattern <=(v1:bte,v2:hge) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:sht,v2:hge) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:int,v2:hge) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:lng,v2:hge) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:hge,v2:bte) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:hge,v2:sht) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:hge,v2:int) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:hge,v2:lng) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:hge,v2:hge) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:hge,v2:flt) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:hge,v2:dbl) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:flt,v2:hge) :bit\naddress CMDvarLE\n;\n\npattern <=(v1:dbl,v2:hge) :bit\naddress CMDvarLE\n;\n\n\npattern >(v1:bte,v2:hge) :bit\naddress CMDvarGT\n;\n\npattern >(v1:sht,v2:hge) :bit\naddress CMDvarGT\n;\n\npattern >(v1:int,v2:hge) :bit\naddress CMDvarGT\n;\n\npattern >(v1:lng,v2:hge) :bit\naddress CMDvarGT\n;\n\npattern >(v1:hge,v2:bte) :bit\naddress CMDvarGT\n;\n\npattern >(v1:hge,v2:sht) :bit\naddress CMDvarGT\n;\n\npattern >(v1:hge,v2:int) :bit\naddress CMDvarGT\n;\n\npattern >(v1:hge,v2:lng) :bit\naddress CMDvarGT\n;\n\npattern >(v1:hge,v2:hge) :bit\naddress CMDvarGT\n;\n\npattern >(v1:hge,v2:flt) :bit\naddress CMDvarGT\n;\n\npattern >(v1:hge,v2:dbl) :bit\naddress CMDvarGT\n;\n\npattern >(v1:flt,v2:hge) :bit\naddress CMDvarGT\n;\n\npattern >(v1:dbl,v2:hge) :bit\naddress CMDvarGT\n;\n\n\npattern >=(v1:bte,v2:hge) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:sht,v2:hge) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:int,v2:hge) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:lng,v2:hge) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:hge,v2:bte) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:hge,v2:sht) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:hge,v2:int) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:hge,v2:lng) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:hge,v2:hge) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:hge,v2:flt) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:hge,v2:dbl) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:flt,v2:hge) :bit\naddress CMDvarGE\n;\n\npattern >=(v1:dbl,v2:hge) :bit\naddress CMDvarGE\n;\n\n\npattern ==(v1:bte,v2:hge) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:bte,v2:hge,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:sht,v2:hge) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:sht,v2:hge,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:int,v2:hge) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:int,v2:hge,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:lng,v2:hge) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:lng,v2:hge,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:bte) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:bte,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:sht) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:sht,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:int) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:int,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:lng) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:lng,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:hge) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:hge,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:flt) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:flt,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:dbl) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:hge,v2:dbl,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:flt,v2:hge) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:flt,v2:hge,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:dbl,v2:hge) :bit\naddress CMDvarEQ\n;\n\npattern ==(v1:dbl,v2:hge,nil_matches:bit) :bit\naddress CMDvarEQ\n;\n\n\npattern !=(v1:bte,v2:hge) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:bte,v2:hge,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:sht,v2:hge) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:sht,v2:hge,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:int,v2:hge) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:int,v2:hge,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:lng,v2:hge) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:lng,v2:hge,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:bte) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:bte,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:sht) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:sht,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:int) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:int,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:lng) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:lng,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:hge) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:hge,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:flt) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:flt,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:dbl) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:hge,v2:dbl,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:flt,v2:hge) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:flt,v2:hge,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:dbl,v2:hge) :bit\naddress CMDvarNE\n;\n\npattern !=(v1:dbl,v2:hge,nil_matches:bit) :bit\naddress CMDvarNE\n;\n\n\npattern cmp(v1:bte,v2:hge) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:sht,v2:hge) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:int,v2:hge) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:lng,v2:hge) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:hge,v2:bte) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:hge,v2:sht) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:hge,v2:int) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:hge,v2:lng) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:hge,v2:hge) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:hge,v2:flt) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:hge,v2:dbl) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:flt,v2:hge) :bte\naddress CMDvarCMP\n;\n\npattern cmp(v1:dbl,v2:hge) :bte\naddress CMDvarCMP\n;\n\n\npattern void(v:hge) :void\naddress CMDvarCONVERT\n;\n\n\npattern bit(v:hge) :bit\naddress CMDvarCONVERT\n;\n\n\npattern bte(v:hge) :bte\naddress CMDvarCONVERT\n;\n\n\npattern sht(v:hge) :sht\naddress CMDvarCONVERT\n;\n\n\npattern int(v:hge) :int\naddress CMDvarCONVERT\n;\n\n\npattern lng(v:hge) :lng\naddress CMDvarCONVERT\n;\n\n\npattern hge(v:void) :hge\naddress CMDvarCONVERT\n;\n\npattern hge(v:bit) :hge\naddress CMDvarCONVERT\n;\n\npattern hge(v:bte) :hge\naddress CMDvarCONVERT\n;\n\npattern hge(v:sht) :hge\naddress CMDvarCONVERT\n;\n\npattern hge(v:int) :hge\naddress CMDvarCONVERT\n;\n\npattern hge(v:lng) :hge\naddress CMDvarCONVERT\n;\n\npattern hge(v:hge) :hge\naddress CMDvarCONVERT\n;\n\npattern hge(v:flt) :hge\naddress CMDvarCONVERT\n;\n\npattern hge(v:dbl) :hge\naddress CMDvarCONVERT\n;\n\npattern hge(v:oid) :hge\naddress CMDvarCONVERT\n;\n\npattern hge(v:str) :hge\naddress CMDvarCONVERT\n;\n\n\npattern flt(v:hge) :flt\naddress CMDvarCONVERT\n;\n\n\npattern dbl(v:hge) :dbl\naddress CMDvarCONVERT\n;\n\n\npattern oid(v:hge) :oid\naddress CMDvarCONVERT\n;\n\n\nmodule aggr;\n\npattern sum(b:bat[:bte]) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:bte],nil_if_empty:bit) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:bte],s:bat[:oid]) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:bte],s:bat[:oid],nil_if_empty:bit) :hge\naddress CMDBATsum\n;\n\npattern sum(b:bat[:sht]) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:sht],nil_if_empty:bit) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:sht],s:bat[:oid]) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:sht],s:bat[:oid],nil_if_empty:bit) :hge\naddress CMDBATsum\n;\n\npattern sum(b:bat[:int]) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:int],nil_if_empty:bit) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:int],s:bat[:oid]) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:int],s:bat[:oid],nil_if_empty:bit) :hge\naddress CMDBATsum\n;\n\npattern sum(b:bat[:lng]) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:lng],nil_if_empty:bit) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:lng],s:bat[:oid]) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:lng],s:bat[:oid],nil_if_empty:bit) :hge\naddress CMDBATsum\n;\n\npattern sum(b:bat[:hge]) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:hge],nil_if_empty:bit) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:hge],s:bat[:oid]) :hge\naddress CMDBATsum\n;\npattern sum(b:bat[:hge],s:bat[:oid],nil_if_empty:bit) :hge\naddress CMDBATsum\n;\n\npattern sum(b:bat[:hge]) :dbl\naddress CMDBATsum\n;\npattern sum(b:bat[:hge],nil_if_empty:bit) :dbl\naddress CMDBATsum\n;\npattern sum(b:bat[:hge],s:bat[:oid]) :dbl\naddress CMDBATsum\n;\npattern sum(b:bat[:hge],s:bat[:oid],nil_if_empty:bit) :dbl\naddress CMDBATsum\n;\n\npattern prod(b:bat[:bte]) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:bte],nil_if_empty:bit) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:bte],s:bat[:oid]) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:bte],s:bat[:oid],nil_if_empty:bit) :hge\naddress CMDBATprod\n;\n\npattern prod(b:bat[:sht]) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:sht],nil_if_empty:bit) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:sht],s:bat[:oid]) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:sht],s:bat[:oid],nil_if_empty:bit) :hge\naddress CMDBATprod\n;\n\npattern prod(b:bat[:int]) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:int],nil_if_empty:bit) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:int],s:bat[:oid]) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:int],s:bat[:oid],nil_if_empty:bit) :hge\naddress CMDBATprod\n;\n\npattern prod(b:bat[:lng]) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:lng],nil_if_empty:bit) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:lng],s:bat[:oid]) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:lng],s:bat[:oid],nil_if_empty:bit) :hge\naddress CMDBATprod\n;\n\npattern prod(b:bat[:hge]) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:hge],nil_if_empty:bit) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:hge],s:bat[:oid]) :hge\naddress CMDBATprod\n;\npattern prod(b:bat[:hge],s:bat[:oid],nil_if_empty:bit) :hge\naddress CMDBATprod\n;\n\npattern prod(b:bat[:hge]) :dbl\naddress CMDBATprod\n;\npattern prod(b:bat[:hge],nil_if_empty:bit) :dbl\naddress CMDBATprod\n;\npattern prod(b:bat[:hge],s:bat[:oid]) :dbl\naddress CMDBATprod\n;\npattern prod(b:bat[:hge],s:bat[:oid],nil_if_empty:bit) :dbl\naddress CMDBATprod\n;\n" }, 
