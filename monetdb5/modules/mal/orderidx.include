{ "orderidx",
"pattern bat.orderidx(bv:bat[:any_1]):void \n"
"address OIDXcreate \n"
"comment \"Introduces the OID index arrangement of ordered values\"; \n"
"pattern bat.orderidx(bv:bat[:any_1], pieces:int):void \n"
"address OIDXcreate \n"
"comment \"Introduces the OID index arrangement of ordered values\"; \n"
"pattern bat.orderidx(bv:bat[:any_1], l:bat[:any_1]...):void \n"
"address OIDXmerge \n"
"comment \"Consolidates the OID index arrangement\"; \n"
"pattern bat.hasorderidx(bv:bat[:any_1]):bit \n"
"address OIDXhasorderidx \n"
"comment \"Return true if order index exists\"; \n"
"pattern bat.getorderidx(bv:bat[:any_1]):bat[:oid] \n"
"address OIDXgetorderidx \n"
"comment \"Return the order index if it exists\"; \n"
"command algebra.orderidx(bv:bat[:any_1], stable:bit):bat[:any_1] \n"
"address OIDXorderidx \n"
"comment \"Create an order index\"; \n"
},
