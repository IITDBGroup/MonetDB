/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "00_aggr_hge", "\n\nmodule aggr;\n\ncommand sum(b:bat[:bte],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:hge]\naddress AGGRsum3_hge\n;\n\ncommand subsum(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubsum_hge\n;\n\ncommand subsum(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubsumcand_hge\n;\n\ncommand prod(b:bat[:bte],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:hge]\naddress AGGRprod3_hge\n;\n\ncommand subprod(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubprod_hge\n;\n\ncommand subprod(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubprodcand_hge\n;\n\ncommand sum(b:bat[:sht],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:hge]\naddress AGGRsum3_hge\n;\n\ncommand subsum(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubsum_hge\n;\n\ncommand subsum(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubsumcand_hge\n;\n\ncommand prod(b:bat[:sht],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:hge]\naddress AGGRprod3_hge\n;\n\ncommand subprod(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubprod_hge\n;\n\ncommand subprod(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubprodcand_hge\n;\n\ncommand sum(b:bat[:int],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:hge]\naddress AGGRsum3_hge\n;\n\ncommand subsum(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubsum_hge\n;\n\ncommand subsum(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubsumcand_hge\n;\n\ncommand prod(b:bat[:int],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:hge]\naddress AGGRprod3_hge\n;\n\ncommand subprod(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubprod_hge\n;\n\ncommand subprod(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubprodcand_hge\n;\n\ncommand sum(b:bat[:lng],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:hge]\naddress AGGRsum3_hge\n;\n\ncommand subsum(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubsum_hge\n;\n\ncommand subsum(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubsumcand_hge\n;\n\ncommand prod(b:bat[:lng],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:hge]\naddress AGGRprod3_hge\n;\n\ncommand subprod(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubprod_hge\n;\n\ncommand subprod(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubprodcand_hge\n;\n\ncommand sum(b:bat[:hge],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:hge]\naddress AGGRsum3_hge\n;\n\ncommand subsum(b:bat[:hge],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubsum_hge\n;\n\ncommand subsum(b:bat[:hge],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubsumcand_hge\n;\n\ncommand prod(b:bat[:hge],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:hge]\naddress AGGRprod3_hge\n;\n\ncommand subprod(b:bat[:hge],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubprod_hge\n;\n\ncommand subprod(b:bat[:hge],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:hge]\naddress AGGRsubprodcand_hge\n;\n\ncommand avg(b:bat[:hge], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRavg13_dbl\n;\n\ncommand avg(b:bat[:hge], g:bat[:oid], e:bat[:any_1]) (:bat[:dbl],:bat[:lng])\naddress AGGRavg23_dbl\n;\n\ncommand subavg(b:bat[:hge],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1_dbl\n;\n\ncommand subavg(b:bat[:hge],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1cand_dbl\n;\n\ncommand subavg(b:bat[:hge],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2_dbl\n;\n\ncommand subavg(b:bat[:hge],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2cand_dbl\n;\n\ncommand stdev(b:bat[:hge], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdev3_dbl\n;\n\ncommand substdev(b:bat[:hge],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdev_dbl\n;\n\ncommand substdev(b:bat[:hge],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevcand_dbl\n;\n\ncommand stdevp(b:bat[:hge], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdevp3_dbl\n;\n\ncommand substdevp(b:bat[:hge],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevp_dbl\n;\n\ncommand substdevp(b:bat[:hge],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevpcand_dbl\n;\n\ncommand variance(b:bat[:hge], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariance3_dbl\n;\n\ncommand subvariance(b:bat[:hge],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariance_dbl\n;\n\ncommand subvariance(b:bat[:hge],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancecand_dbl\n;\n\ncommand variancep(b:bat[:hge], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariancep3_dbl\n;\n\ncommand subvariancep(b:bat[:hge],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancep_dbl\n;\n\ncommand subvariancep(b:bat[:hge],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancepcand_dbl\n;\n" }, 
