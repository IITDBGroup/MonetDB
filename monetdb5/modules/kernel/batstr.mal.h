/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "batstr", "\nmodule batstr;\n\ncommand batstr.length( s:bat[:str] ) :bat[:int]\naddress STRbatLength\n;\n\ncommand batstr.nbytes( s:bat[:str] ) :bat[:int]\naddress STRbatBytes\n;\n\ncommand batstr.toLower( s:bat[:str] ) :bat[:str]\naddress STRbatLower\n;\ncommand batstr.toUpper( s:bat[:str] ) :bat[:str]\naddress STRbatUpper\n;\n\ncommand batstr.trim( s:bat[:str] ) :bat[:str]\naddress STRbatStrip\n;\ncommand batstr.ltrim( s:bat[:str] ) :bat[:str]\naddress STRbatLtrim\n;\ncommand batstr.rtrim( s:bat[:str] ) :bat[:str]\naddress STRbatRtrim\n;\n\ncommand batstr.trim( s:bat[:str], s2:str ) :bat[:str]\naddress STRbatStrip2_const\n;\ncommand batstr.ltrim( s:bat[:str], s2:str ) :bat[:str]\naddress STRbatLtrim2_const\n;\ncommand batstr.rtrim( s:bat[:str], s2:str ) :bat[:str]\naddress STRbatRtrim2_const\n;\n\ncommand batstr.trim( s:bat[:str], s2:bat[:str] ) :bat[:str]\naddress STRbatStrip2_bat\n;\ncommand batstr.ltrim( s:bat[:str], s2:bat[:str] ) :bat[:str]\naddress STRbatLtrim2_bat\n;\ncommand batstr.rtrim( s:bat[:str], s2:bat[:str] ) :bat[:str]\naddress STRbatRtrim2_bat\n;\n\ncommand batstr.lpad( s:bat[:str], n:int ) :bat[:str]\naddress STRbatLpad_const\n;\ncommand batstr.rpad( s:bat[:str], n:int ) :bat[:str]\naddress STRbatRpad_const\n;\n\ncommand batstr.lpad( s:bat[:str], n:bat[:int] ) :bat[:str]\naddress STRbatLpad_bat\n;\ncommand batstr.rpad( s:bat[:str], n:bat[:int] ) :bat[:str]\naddress STRbatRpad_bat\n;\n\ncommand batstr.lpad( s:bat[:str], n:int, s2:str ) :bat[:str]\naddress STRbatLpad2_const_const\n;\ncommand batstr.rpad( s:bat[:str], n:int, s2:str ) :bat[:str]\naddress STRbatRpad2_const_const\n;\n\ncommand batstr.lpad( s:bat[:str], n:bat[:int], s2:str ) :bat[:str]\naddress STRbatLpad2_bat_const\n;\ncommand batstr.rpad( s:bat[:str], n:bat[:int], s2:str ) :bat[:str]\naddress STRbatRpad2_bat_const\n;\n\ncommand batstr.lpad( s:bat[:str], n:int, s2:bat[:str] ) :bat[:str]\naddress STRbatLpad2_const_bat\n;\ncommand batstr.rpad( s:bat[:str], n:int, s2:bat[:str] ) :bat[:str]\naddress STRbatRpad2_const_bat\n;\n\ncommand batstr.lpad( s:bat[:str], n:bat[:int], s2:bat[:str] ) :bat[:str]\naddress STRbatLpad2_bat_bat\n;\ncommand batstr.rpad( s:bat[:str], n:bat[:int], s2:bat[:str] ) :bat[:str]\naddress STRbatRpad2_bat_bat\n;\n\ncommand batstr.startsWith(s:bat[:str],prefix:bat[:str]):bat[:bit]\naddress STRbatPrefix\n;\ncommand batstr.startsWith(s:bat[:str],prefix:str):bat[:bit]\naddress STRbatPrefixcst\n;\n\ncommand batstr.endsWith( s:bat[:str], suffix:bat[:str] ) :bat[:bit]\naddress STRbatSuffix\n;\ncommand batstr.endsWith( s:bat[:str], suffix:str ) :bat[:bit]\naddress STRbatSuffixcst\n;\n\ncommand batstr.search( s:bat[:str], c:bat[:str] ) :bat[:int]\naddress STRbatstrSearch\n;\ncommand batstr.search( s:bat[:str], c:str ) :bat[:int]\naddress STRbatstrSearchcst\n;\n\ncommand batstr.r_search( s:bat[:str], c:bat[:str] ) :bat[:int]\naddress STRbatRstrSearch\n;\ncommand batstr.r_search( s:bat[:str], c:str ) :bat[:int]\naddress STRbatRstrSearchcst\n;\n\ncommand batstr.string(b:bat[:str],offset:bat[:int]) :bat[:str]\naddress STRbatTail\n;\ncommand batstr.string(b:bat[:str],offset:int) :bat[:str]\naddress STRbatTailcst\n;\n\ncommand batstr.substring( s:bat[:str], start:bat[:int], \n\tindex:bat[:int]) :bat[:str]\naddress STRbatsubstring\n;\n\ncommand batstr.substring( s:bat[:str], start:int, index:int)\n\t:bat[:str]\naddress STRbatsubstringcst\n;\n\ncommand batstr.unicodeAt(s:bat[:str], index:bat[:int]) :bat[:int]\naddress STRbatWChrAt\n;\ncommand batstr.unicodeAt(s:bat[:str], index:int) :bat[:int]\naddress STRbatWChrAtcst\n;\n\ncommand batstr.substitute(s:bat[:str],src:str,dst:str,rep:bit):bat[:str]\naddress STRbatSubstitutecst\n;" }, 
