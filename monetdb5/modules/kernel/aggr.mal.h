/*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0.  If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*
* Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
*/

// This file was generated automatically with mal2h.py. Do not edit this file directly.
{ "aggr", "\n\nmodule aggr;\n\ncommand sum(b:bat[:bte],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:dbl]\naddress AGGRsum3_dbl\ncomment \"Grouped tail sum on bte\";\n\ncommand sum(b:bat[:bte],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:bte]\naddress AGGRsum3_bte\ncomment \"Grouped tail sum on bte\";\n\ncommand subsum(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:bte]\naddress AGGRsubsum_bte\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:bte]\naddress AGGRsubsumcand_bte\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:bte],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:bte]\naddress AGGRprod3_bte\ncomment \"Grouped tail product on bte\";\n\ncommand subprod(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:bte]\naddress AGGRsubprod_bte\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:bte]\naddress AGGRsubprodcand_bte\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:bte],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:sht]\naddress AGGRsum3_sht\ncomment \"Grouped tail sum on bte\";\n\ncommand subsum(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:sht]\naddress AGGRsubsum_sht\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:sht]\naddress AGGRsubsumcand_sht\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:bte],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:sht]\naddress AGGRprod3_sht\ncomment \"Grouped tail product on bte\";\n\ncommand subprod(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:sht]\naddress AGGRsubprod_sht\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:sht]\naddress AGGRsubprodcand_sht\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:bte],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:int]\naddress AGGRsum3_int\ncomment \"Grouped tail sum on bte\";\n\ncommand subsum(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubsum_int\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubsumcand_int\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:bte],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:int]\naddress AGGRprod3_int\ncomment \"Grouped tail product on bte\";\n\ncommand subprod(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubprod_int\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubprodcand_int\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:bte],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:lng]\naddress AGGRsum3_lng\ncomment \"Grouped tail sum on bte\";\n\ncommand subsum(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubsum_lng\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubsumcand_lng\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:bte],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:lng]\naddress AGGRprod3_lng\ncomment \"Grouped tail product on bte\";\n\ncommand subprod(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubprod_lng\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubprodcand_lng\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:sht],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:dbl]\naddress AGGRsum3_dbl\ncomment \"Grouped tail sum on sht\";\n\ncommand sum(b:bat[:sht],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:sht]\naddress AGGRsum3_sht\ncomment \"Grouped tail sum on sht\";\n\ncommand subsum(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:sht]\naddress AGGRsubsum_sht\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:sht]\naddress AGGRsubsumcand_sht\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:sht],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:sht]\naddress AGGRprod3_sht\ncomment \"Grouped tail product on sht\";\n\ncommand subprod(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:sht]\naddress AGGRsubprod_sht\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:sht]\naddress AGGRsubprodcand_sht\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:sht],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:int]\naddress AGGRsum3_int\ncomment \"Grouped tail sum on sht\";\n\ncommand subsum(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubsum_int\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubsumcand_int\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:sht],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:int]\naddress AGGRprod3_int\ncomment \"Grouped tail product on sht\";\n\ncommand subprod(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubprod_int\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubprodcand_int\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:sht],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:lng]\naddress AGGRsum3_lng\ncomment \"Grouped tail sum on sht\";\n\ncommand subsum(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubsum_lng\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubsumcand_lng\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:sht],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:lng]\naddress AGGRprod3_lng\ncomment \"Grouped tail product on sht\";\n\ncommand subprod(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubprod_lng\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubprodcand_lng\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:int],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:dbl]\naddress AGGRsum3_dbl\ncomment \"Grouped tail sum on int\";\n\ncommand sum(b:bat[:int],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:int]\naddress AGGRsum3_int\ncomment \"Grouped tail sum on int\";\n\ncommand subsum(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubsum_int\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubsumcand_int\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:int],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:int]\naddress AGGRprod3_int\ncomment \"Grouped tail product on int\";\n\ncommand subprod(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubprod_int\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:int]\naddress AGGRsubprodcand_int\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:int],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:lng]\naddress AGGRsum3_lng\ncomment \"Grouped tail sum on int\";\n\ncommand subsum(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubsum_lng\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubsumcand_lng\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:int],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:lng]\naddress AGGRprod3_lng\ncomment \"Grouped tail product on int\";\n\ncommand subprod(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubprod_lng\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubprodcand_lng\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:lng],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:dbl]\naddress AGGRsum3_dbl\ncomment \"Grouped tail sum on lng\";\n\ncommand sum(b:bat[:lng],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:lng]\naddress AGGRsum3_lng\ncomment \"Grouped tail sum on lng\";\n\ncommand subsum(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubsum_lng\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubsumcand_lng\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:lng],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:lng]\naddress AGGRprod3_lng\ncomment \"Grouped tail product on lng\";\n\ncommand subprod(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubprod_lng\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:lng]\naddress AGGRsubprodcand_lng\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:flt],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:flt]\naddress AGGRsum3_flt\ncomment \"Grouped tail sum on flt\";\n\ncommand subsum(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:flt]\naddress AGGRsubsum_flt\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:flt]\naddress AGGRsubsumcand_flt\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:flt],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:flt]\naddress AGGRprod3_flt\ncomment \"Grouped tail product on flt\";\n\ncommand subprod(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:flt]\naddress AGGRsubprod_flt\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:flt]\naddress AGGRsubprodcand_flt\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:flt],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:dbl]\naddress AGGRsum3_dbl\ncomment \"Grouped tail sum on flt\";\n\ncommand subsum(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubsum_dbl\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubsumcand_dbl\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:flt],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:dbl]\naddress AGGRprod3_dbl\ncomment \"Grouped tail product on flt\";\n\ncommand subprod(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubprod_dbl\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubprodcand_dbl\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand sum(b:bat[:dbl],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:dbl]\naddress AGGRsum3_dbl\ncomment \"Grouped tail sum on dbl\";\n\ncommand subsum(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubsum_dbl\ncomment \"Grouped sum aggregate\";\n\ncommand subsum(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubsumcand_dbl\ncomment \"Grouped sum aggregate with candidates list\";\n\ncommand prod(b:bat[:dbl],g:bat[:oid],e:bat[:any_1])\n\t\t:bat[:dbl]\naddress AGGRprod3_dbl\ncomment \"Grouped tail product on dbl\";\n\ncommand subprod(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubprod_dbl\ncomment \"Grouped product aggregate\";\n\ncommand subprod(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubprodcand_dbl\ncomment \"Grouped product aggregate with candidates list\";\n\ncommand avg(b:bat[:bte], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRavg13_dbl\ncomment \"Grouped tail average on bte\";\n\ncommand avg(b:bat[:bte], g:bat[:oid], e:bat[:any_1]) (:bat[:dbl],:bat[:lng])\naddress AGGRavg23_dbl\ncomment \"Grouped tail average on bte, also returns count\";\n\ncommand avg(b:bat[:bte], g:bat[:oid], e:bat[:any_1], scale:int):bat[:dbl]\naddress AGGRavg14_dbl\ncomment \"Grouped tail average on bte\";\n\ncommand avg(b:bat[:bte], g:bat[:oid], e:bat[:any_1], scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRavg24_dbl\ncomment \"Grouped tail average on bte, also returns count\";\n\ncommand subavg(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1cand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2cand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand subavg(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1s_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1scand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2s_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2scand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand stdev(b:bat[:bte], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdev3_dbl\ncomment \"Grouped tail standard deviation (sample/non-biased) on bte\";\n\ncommand substdev(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdev_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate\";\n\ncommand substdev(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevcand_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate with candidates list\";\n\ncommand stdevp(b:bat[:bte], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdevp3_dbl\ncomment \"Grouped tail standard deviation (population/biased) on bte\";\n\ncommand substdevp(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevp_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate\";\n\ncommand substdevp(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevpcand_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate with candidates list\";\n\ncommand variance(b:bat[:bte], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariance3_dbl\ncomment \"Grouped tail variance (sample/non-biased) on bte\";\n\ncommand subvariance(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariance_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate\";\n\ncommand subvariance(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancecand_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate with candidates list\";\n\ncommand variancep(b:bat[:bte], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariancep3_dbl\ncomment \"Grouped tail variance (population/biased) on bte\";\n\ncommand subvariancep(b:bat[:bte],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancep_dbl\ncomment \"Grouped variance (population/biased) aggregate\";\n\ncommand subvariancep(b:bat[:bte],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancepcand_dbl\ncomment \"Grouped variance (population/biased) aggregate with candidates list\";\n\ncommand avg(b:bat[:sht], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRavg13_dbl\ncomment \"Grouped tail average on sht\";\n\ncommand avg(b:bat[:sht], g:bat[:oid], e:bat[:any_1]) (:bat[:dbl],:bat[:lng])\naddress AGGRavg23_dbl\ncomment \"Grouped tail average on sht, also returns count\";\n\ncommand avg(b:bat[:sht], g:bat[:oid], e:bat[:any_1], scale:int):bat[:dbl]\naddress AGGRavg14_dbl\ncomment \"Grouped tail average on sht\";\n\ncommand avg(b:bat[:sht], g:bat[:oid], e:bat[:any_1], scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRavg24_dbl\ncomment \"Grouped tail average on sht, also returns count\";\n\ncommand subavg(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1cand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2cand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand subavg(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1s_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1scand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2s_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2scand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand stdev(b:bat[:sht], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdev3_dbl\ncomment \"Grouped tail standard deviation (sample/non-biased) on sht\";\n\ncommand substdev(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdev_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate\";\n\ncommand substdev(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevcand_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate with candidates list\";\n\ncommand stdevp(b:bat[:sht], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdevp3_dbl\ncomment \"Grouped tail standard deviation (population/biased) on sht\";\n\ncommand substdevp(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevp_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate\";\n\ncommand substdevp(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevpcand_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate with candidates list\";\n\ncommand variance(b:bat[:sht], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariance3_dbl\ncomment \"Grouped tail variance (sample/non-biased) on sht\";\n\ncommand subvariance(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariance_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate\";\n\ncommand subvariance(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancecand_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate with candidates list\";\n\ncommand variancep(b:bat[:sht], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariancep3_dbl\ncomment \"Grouped tail variance (population/biased) on sht\";\n\ncommand subvariancep(b:bat[:sht],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancep_dbl\ncomment \"Grouped variance (population/biased) aggregate\";\n\ncommand subvariancep(b:bat[:sht],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancepcand_dbl\ncomment \"Grouped variance (population/biased) aggregate with candidates list\";\n\ncommand avg(b:bat[:int], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRavg13_dbl\ncomment \"Grouped tail average on int\";\n\ncommand avg(b:bat[:int], g:bat[:oid], e:bat[:any_1]) (:bat[:dbl],:bat[:lng])\naddress AGGRavg23_dbl\ncomment \"Grouped tail average on int, also returns count\";\n\ncommand avg(b:bat[:int], g:bat[:oid], e:bat[:any_1], scale:int):bat[:dbl]\naddress AGGRavg14_dbl\ncomment \"Grouped tail average on int\";\n\ncommand avg(b:bat[:int], g:bat[:oid], e:bat[:any_1], scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRavg24_dbl\ncomment \"Grouped tail average on int, also returns count\";\n\ncommand subavg(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1cand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2cand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand subavg(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1s_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1scand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2s_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2scand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand stdev(b:bat[:int], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdev3_dbl\ncomment \"Grouped tail standard deviation (sample/non-biased) on int\";\n\ncommand substdev(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdev_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate\";\n\ncommand substdev(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevcand_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate with candidates list\";\n\ncommand stdevp(b:bat[:int], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdevp3_dbl\ncomment \"Grouped tail standard deviation (population/biased) on int\";\n\ncommand substdevp(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevp_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate\";\n\ncommand substdevp(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevpcand_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate with candidates list\";\n\ncommand variance(b:bat[:int], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariance3_dbl\ncomment \"Grouped tail variance (sample/non-biased) on int\";\n\ncommand subvariance(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariance_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate\";\n\ncommand subvariance(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancecand_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate with candidates list\";\n\ncommand variancep(b:bat[:int], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariancep3_dbl\ncomment \"Grouped tail variance (population/biased) on int\";\n\ncommand subvariancep(b:bat[:int],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancep_dbl\ncomment \"Grouped variance (population/biased) aggregate\";\n\ncommand subvariancep(b:bat[:int],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancepcand_dbl\ncomment \"Grouped variance (population/biased) aggregate with candidates list\";\n\ncommand avg(b:bat[:lng], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRavg13_dbl\ncomment \"Grouped tail average on lng\";\n\ncommand avg(b:bat[:lng], g:bat[:oid], e:bat[:any_1]) (:bat[:dbl],:bat[:lng])\naddress AGGRavg23_dbl\ncomment \"Grouped tail average on lng, also returns count\";\n\ncommand avg(b:bat[:lng], g:bat[:oid], e:bat[:any_1], scale:int):bat[:dbl]\naddress AGGRavg14_dbl\ncomment \"Grouped tail average on lng\";\n\ncommand avg(b:bat[:lng], g:bat[:oid], e:bat[:any_1], scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRavg24_dbl\ncomment \"Grouped tail average on lng, also returns count\";\n\ncommand subavg(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1cand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2cand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand subavg(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1s_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1scand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2s_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2scand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand stdev(b:bat[:lng], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdev3_dbl\ncomment \"Grouped tail standard deviation (sample/non-biased) on lng\";\n\ncommand substdev(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdev_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate\";\n\ncommand substdev(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevcand_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate with candidates list\";\n\ncommand stdevp(b:bat[:lng], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdevp3_dbl\ncomment \"Grouped tail standard deviation (population/biased) on lng\";\n\ncommand substdevp(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevp_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate\";\n\ncommand substdevp(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevpcand_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate with candidates list\";\n\ncommand variance(b:bat[:lng], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariance3_dbl\ncomment \"Grouped tail variance (sample/non-biased) on lng\";\n\ncommand subvariance(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariance_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate\";\n\ncommand subvariance(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancecand_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate with candidates list\";\n\ncommand variancep(b:bat[:lng], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariancep3_dbl\ncomment \"Grouped tail variance (population/biased) on lng\";\n\ncommand subvariancep(b:bat[:lng],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancep_dbl\ncomment \"Grouped variance (population/biased) aggregate\";\n\ncommand subvariancep(b:bat[:lng],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancepcand_dbl\ncomment \"Grouped variance (population/biased) aggregate with candidates list\";\n\ncommand avg(b:bat[:flt], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRavg13_dbl\ncomment \"Grouped tail average on flt\";\n\ncommand avg(b:bat[:flt], g:bat[:oid], e:bat[:any_1]) (:bat[:dbl],:bat[:lng])\naddress AGGRavg23_dbl\ncomment \"Grouped tail average on flt, also returns count\";\n\ncommand avg(b:bat[:flt], g:bat[:oid], e:bat[:any_1], scale:int):bat[:dbl]\naddress AGGRavg14_dbl\ncomment \"Grouped tail average on flt\";\n\ncommand avg(b:bat[:flt], g:bat[:oid], e:bat[:any_1], scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRavg24_dbl\ncomment \"Grouped tail average on flt, also returns count\";\n\ncommand subavg(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1cand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2cand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand subavg(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1s_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1scand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2s_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2scand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand stdev(b:bat[:flt], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdev3_dbl\ncomment \"Grouped tail standard deviation (sample/non-biased) on flt\";\n\ncommand substdev(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdev_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate\";\n\ncommand substdev(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevcand_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate with candidates list\";\n\ncommand stdevp(b:bat[:flt], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdevp3_dbl\ncomment \"Grouped tail standard deviation (population/biased) on flt\";\n\ncommand substdevp(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevp_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate\";\n\ncommand substdevp(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevpcand_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate with candidates list\";\n\ncommand variance(b:bat[:flt], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariance3_dbl\ncomment \"Grouped tail variance (sample/non-biased) on flt\";\n\ncommand subvariance(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariance_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate\";\n\ncommand subvariance(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancecand_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate with candidates list\";\n\ncommand variancep(b:bat[:flt], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariancep3_dbl\ncomment \"Grouped tail variance (population/biased) on flt\";\n\ncommand subvariancep(b:bat[:flt],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancep_dbl\ncomment \"Grouped variance (population/biased) aggregate\";\n\ncommand subvariancep(b:bat[:flt],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancepcand_dbl\ncomment \"Grouped variance (population/biased) aggregate with candidates list\";\n\ncommand avg(b:bat[:dbl], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRavg13_dbl\ncomment \"Grouped tail average on dbl\";\n\ncommand avg(b:bat[:dbl], g:bat[:oid], e:bat[:any_1]) (:bat[:dbl],:bat[:lng])\naddress AGGRavg23_dbl\ncomment \"Grouped tail average on dbl, also returns count\";\n\ncommand avg(b:bat[:dbl], g:bat[:oid], e:bat[:any_1], scale:int):bat[:dbl]\naddress AGGRavg14_dbl\ncomment \"Grouped tail average on dbl\";\n\ncommand avg(b:bat[:dbl], g:bat[:oid], e:bat[:any_1], scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRavg24_dbl\ncomment \"Grouped tail average on dbl, also returns count\";\n\ncommand subavg(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubavg1cand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2cand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand subavg(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1s_dbl\ncomment \"Grouped average aggregate\";\n\ncommand subavg(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) :bat[:dbl]\naddress AGGRsubavg1scand_dbl\ncomment \"Grouped average aggregate with candidates list\";\n\ncommand subavg(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2s_dbl\ncomment \"Grouped average aggregate, also returns count\";\n\ncommand subavg(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit,scale:int) (:bat[:dbl],:bat[:lng])\naddress AGGRsubavg2scand_dbl\ncomment \"Grouped average aggregate with candidates list, also returns count\";\n\ncommand stdev(b:bat[:dbl], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdev3_dbl\ncomment \"Grouped tail standard deviation (sample/non-biased) on dbl\";\n\ncommand substdev(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdev_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate\";\n\ncommand substdev(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevcand_dbl\ncomment \"Grouped standard deviation (sample/non-biased) aggregate with candidates list\";\n\ncommand stdevp(b:bat[:dbl], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRstdevp3_dbl\ncomment \"Grouped tail standard deviation (population/biased) on dbl\";\n\ncommand substdevp(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevp_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate\";\n\ncommand substdevp(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubstdevpcand_dbl\ncomment \"Grouped standard deviation (population/biased) aggregate with candidates list\";\n\ncommand variance(b:bat[:dbl], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariance3_dbl\ncomment \"Grouped tail variance (sample/non-biased) on dbl\";\n\ncommand subvariance(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariance_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate\";\n\ncommand subvariance(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancecand_dbl\ncomment \"Grouped variance (sample/non-biased) aggregate with candidates list\";\n\ncommand variancep(b:bat[:dbl], g:bat[:oid], e:bat[:any_1]):bat[:dbl]\naddress AGGRvariancep3_dbl\ncomment \"Grouped tail variance (population/biased) on dbl\";\n\ncommand subvariancep(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancep_dbl\ncomment \"Grouped variance (population/biased) aggregate\";\n\ncommand subvariancep(b:bat[:dbl],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:dbl]\naddress AGGRsubvariancepcand_dbl\ncomment \"Grouped variance (population/biased) aggregate with candidates list\";\n\ncommand min(b:bat[:any_1],g:bat[:oid],e:bat[:any_2]):bat[:any_1]\naddress AGGRmin3;\n\ncommand max(b:bat[:any_1], g:bat[:oid], e:bat[:any_2])\n\t\t:bat[:any_1]\naddress AGGRmax3;\n\ncommand submin(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],skip_nils:bit) :bat[:oid]\naddress AGGRsubmin\ncomment \"Grouped minimum aggregate\";\n\ncommand submin(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],s:bat[:oid],skip_nils:bit) :bat[:oid]\naddress AGGRsubmincand\ncomment \"Grouped minimum aggregate with candidates list\";\n\ncommand submax(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],skip_nils:bit) :bat[:oid]\naddress AGGRsubmax\ncomment \"Grouped maximum aggregate\";\n\ncommand submax(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],s:bat[:oid],skip_nils:bit) :bat[:oid]\naddress AGGRsubmaxcand\ncomment \"Grouped maximum aggregate with candidates list\";\n\ncommand submin(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],skip_nils:bit) :bat[:any_1]\naddress AGGRsubmin_val\ncomment \"Grouped minimum aggregate\";\n\ncommand submin(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],s:bat[:oid],skip_nils:bit) :bat[:any_1]\naddress AGGRsubmincand_val\ncomment \"Grouped minimum aggregate with candidates list\";\n\ncommand submax(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],skip_nils:bit) :bat[:any_1]\naddress AGGRsubmax_val\ncomment \"Grouped maximum aggregate\";\n\ncommand submax(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],s:bat[:oid],skip_nils:bit) :bat[:any_1]\naddress AGGRsubmaxcand_val\ncomment \"Grouped maximum aggregate with candidates list\";\n\ncommand count(b:bat[:any_1], g:bat[:oid], e:bat[:any_2],\n\t\tignorenils:bit) :bat[:lng]\naddress AGGRcount3;\n\ncommand count(b:bat[:any_1], g:bat[:oid], e:bat[:any_2])\n\t:bat[:lng]\naddress AGGRcount3nils\ncomment \"Grouped count\";\n\ncommand count_no_nil(b:bat[:any_1],g:bat[:oid],e:bat[:any_2])\n\t:bat[:lng]\naddress AGGRcount3nonils;\n\ncommand subcount(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],skip_nils:bit) :bat[:lng]\naddress AGGRsubcount\ncomment \"Grouped count aggregate\";\n\ncommand subcount(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],s:bat[:oid],skip_nils:bit) :bat[:lng]\naddress AGGRsubcountcand\ncomment \"Grouped count aggregate with candidates list\";\n\n\ncommand median(b:bat[:any_1]) :any_1\naddress AGGRmedian\ncomment \"Median aggregate\";\n\ncommand submedian(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],skip_nils:bit) :bat[:any_1]\naddress AGGRsubmedian\ncomment \"Grouped median aggregate\";\n\ncommand submedian(b:bat[:any_1],g:bat[:oid],e:bat[:any_2],s:bat[:oid],skip_nils:bit) :bat[:any_1]\naddress AGGRsubmediancand\ncomment \"Grouped median aggregate with candidate list\";\n\n\ncommand quantile(b:bat[:any_1],q:bat[:dbl]) :any_1\naddress AGGRquantile\ncomment \"Quantile aggregate\";\n\ncommand subquantile(b:bat[:any_1],q:bat[:dbl],g:bat[:oid],e:bat[:any_2],skip_nils:bit) :bat[:any_1]\naddress AGGRsubquantile\ncomment \"Grouped quantile aggregate\";\n\ncommand subquantile(b:bat[:any_1],q:bat[:dbl],g:bat[:oid],e:bat[:any_2],s:bat[:oid],skip_nils:bit) :bat[:any_1]\naddress AGGRsubquantilecand\ncomment \"Grouped quantile aggregate with candidate list\";\n\ncommand str_group_concat(b:bat[:str],g:bat[:oid],e:bat[:any_1]) :bat[:str]\naddress AGGRstr_group_concat\ncomment \"Grouped string tail concat\";\n\ncommand substr_group_concat(b:bat[:str],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:str]\naddress AGGRsubstr_group_concat\ncomment \"Grouped string concat\";\n\ncommand substr_group_concat(b:bat[:str],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:str]\naddress AGGRsubstr_group_concatcand\ncomment \"Grouped string concat with candidates list\";\n\ncommand str_group_concat(b:bat[:str],sep:bat[:str],g:bat[:oid],e:bat[:any_1]) :bat[:str]\naddress AGGRstr_group_concat_sep\ncomment \"Grouped string tail concat with custom separator\";\n\ncommand substr_group_concat(b:bat[:str],sep:bat[:str],g:bat[:oid],e:bat[:any_1],skip_nils:bit,abort_on_error:bit) :bat[:str]\naddress AGGRsubstr_group_concat_sep\ncomment \"Grouped string concat with custom separator\";\n\ncommand substr_group_concat(b:bat[:str],sep:bat[:str],g:bat[:oid],e:bat[:any_1],s:bat[:oid],skip_nils:bit,abort_on_error:bit) :bat[:str]\naddress AGGRsubstr_group_concatcand_sep\ncomment \"Grouped string concat with candidates list with custom separator\";" }, 
