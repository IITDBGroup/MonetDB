#[[
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.  If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 1997 - July 2008 CWI, August 2008 - 2019 MonetDB B.V.
#]]

if(NOT ${ENABLE_ODBC} STREQUAL "NO")
	find_path(ODBCINST_INCLUDE odbcinst.h)
	if(ODBCINST_INCLUDE)
		set(ODBC_INCLUDE_DIR "${ODBCINST_INCLUDE}")
		cmake_push_check_state()
		set(CMAKE_REQUIRED_INCLUDES "${CMAKE_REQUIRED_INCLUDES};${ODBC_INCLUDE_DIR}")
		if(WIN32)
			set(CMAKE_EXTRA_INCLUDE_FILES "${CMAKE_EXTRA_INCLUDE_FILES};windows.h;sqlext.h;sqltypes.h")
		else()
			set(CMAKE_EXTRA_INCLUDE_FILES "${CMAKE_EXTRA_INCLUDE_FILES};sql.h;sqltypes.h")
		endif()

		check_type_size(SQLLEN _SQLLEN LANGUAGE C)
		if(HAVE__SQLLEN)
			set(LENP_OR_POINTER_T "SQLLEN *" CACHE INTERNAL "using sqlen* or sqlpointer for SQLColAttribute")
		else()
			set(LENP_OR_POINTER_T "SQLPOINTER" CACHE INTERNAL "using sqlen* or sqlpointer for SQLColAttribute")
		endif()

		check_type_size(SQLWCHAR SIZEOF_SQLWCHAR LANGUAGE C)
		cmake_pop_check_state()
		if(WIN32) # Windows uses different libraries for the ODBC driver
			find_library(ODBCCP32_LIBRARY odbccp32)
			if(ODBCCP32_LIBRARY)
				set(ODBCINST_LIBRARIES "${ODBCINST_LIBRARIES};${ODBCCP32_LIBRARY}")
			endif()
			find_library(USER32_LIBRARY NAMES user32 User32)
			if(USER32_LIBRARY)
				set(ODBCINST_LIBRARIES "${ODBCINST_LIBRARIES};${USER32_LIBRARY}")
			endif()
			find_library(LEGACY_STDIO_LIBRARY legacy_stdio_definitions)
			if(LEGACY_STDIO_LIBRARY)
				set(ODBCINST_LIBRARIES "${ODBCINST_LIBRARIES};${LEGACY_STDIO_LIBRARY}")
			endif()
			find_library(ODBC32_LIBRARY odbc32)
			if(ODBC32_LIBRARY)
				set(ODBC_LIBRARIES "${ODBC32_LIBRARY}")
			endif()

			if(ODBCCP32_LIBRARY AND USER32_LIBRARY AND LEGACY_STDIO_LIBRARY AND ODBC32_LIBRARY)
				set(HAVE_ODBC ON CACHE INTERNAL "odbc extension is available")
			elseif(${ENABLE_ODBC} STREQUAL "YES")
				message(FATAL_ERROR "ODBC libraries missing")
			else()
				message(STATUS "ODBC libraries missing")
			endif()
		else()
			find_library(ODBCINST_LIBRARY odbcinst)
			if(ODBCINST_LIBRARY)
				set(ODBCINST_LIBRARIES "${ODBCINST_LIBRARY}")
			endif()
			find_library(ODBC_LIBRARY odbc)
			if(ODBC_LIBRARY)
				set(ODBC_LIBRARIES "${ODBC_LIBRARY}")
			endif()

			if(ODBCINST_LIBRARY AND ODBC_LIBRARY AND HAVE_SIZEOF_SQLWCHAR)
				set(HAVE_ODBC ON CACHE INTERNAL "odbc extension is available")
			elseif(${ENABLE_ODBC} STREQUAL "YES")
				message(FATAL_ERROR "There are unixODBC libraries missing")
			else()
				message(STATUS "There are unixODBC libraries missing")
			endif()
		endif()
	elseif(${ENABLE_ODBC} STREQUAL "YES")
		message(FATAL_ERROR "odbcinst.h not found")
	else()
		message(STATUS "odbcinst.h not found")
	endif()
endif()
if(HAVE_ODBC)
	if(WIN32)
		add_subdirectory(winsetup)
	else()
		add_subdirectory(setup)
	endif()
	add_subdirectory(driver)
	add_subdirectory(samples)
endif()
